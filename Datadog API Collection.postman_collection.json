{
	"info": {
		"_postman_id": "dbe31490-fe73-485e-9ddb-e1dac8e7e7f5",
		"name": "Datadog API Collection",
		"description": "The Datadog API is an HTTP REST API. The API uses resource-oriented URLs to call the API, uses status codes to indicate the success or failure of requests, returns JSON from all requests, and uses standard HTTP response codes. Use the Datadog API to access the Datadog platform programmatically.\n\nFor the official documentation, see [https://docs.datadoghq.com/api/](https://docs.datadoghq.com/api/)\n\nThis API collection was last updated on November 2, 2023.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31241186"
	},
	"item": [
		{
			"name": "APM Retention Filters",
			"item": [
				{
					"name": "List all APM retention filters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"apm",
								"config",
								"retention-filters"
							]
						},
						"description": "Get the list of APM retention filters."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"apm_retention_filter\",\n      \"attributes\": {\n        \"created_at\": \"<long>\",\n        \"created_by\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"enabled\": \"<boolean>\",\n        \"execution_order\": \"<long>\",\n        \"filter\": {\n          \"query\": \"<string>\"\n        },\n        \"filter_type\": \"spans-sampling-processor\",\n        \"modified_at\": \"<long>\",\n        \"modified_by\": \"<string>\",\n        \"name\": \"<string>\",\n        \"rate\": \"<double>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"apm_retention_filter\",\n      \"attributes\": {\n        \"created_at\": \"<long>\",\n        \"created_by\": \"<string>\",\n        \"editable\": \"<boolean>\",\n        \"enabled\": \"<boolean>\",\n        \"execution_order\": \"<long>\",\n        \"filter\": {\n          \"query\": \"<string>\"\n        },\n        \"filter_type\": \"spans-sampling-processor\",\n        \"modified_at\": \"<long>\",\n        \"modified_by\": \"<string>\",\n        \"name\": \"<string>\",\n        \"rate\": \"<double>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a retention filter",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"filter_type\": \"spans-sampling-processor\",\n      \"rate\": \"<double>\"\n    },\n    \"type\": \"apm_retention_filter\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"apm",
								"config",
								"retention-filters"
							]
						},
						"description": "Create a retention filter to index spans in your organization.\nReturns the retention filter definition when the request is successful."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"filter_type\": \"spans-sampling-processor\",\n      \"rate\": \"<double>\"\n    },\n    \"type\": \"apm_retention_filter\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"apm_retention_filter\",\n    \"attributes\": {\n      \"created_at\": \"<long>\",\n      \"created_by\": \"<string>\",\n      \"editable\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"execution_order\": \"<long>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"filter_type\": \"spans-sampling-processor\",\n      \"modified_at\": \"<long>\",\n      \"modified_by\": \"<string>\",\n      \"name\": \"<string>\",\n      \"rate\": \"<double>\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"filter_type\": \"spans-sampling-processor\",\n      \"rate\": \"<double>\"\n    },\n    \"type\": \"apm_retention_filter\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"filter_type\": \"spans-sampling-processor\",\n      \"rate\": \"<double>\"\n    },\n    \"type\": \"apm_retention_filter\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"filter_type\": \"spans-sampling-processor\",\n      \"rate\": \"<double>\"\n    },\n    \"type\": \"apm_retention_filter\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"filter_type\": \"spans-sampling-processor\",\n      \"rate\": \"<double>\"\n    },\n    \"type\": \"apm_retention_filter\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Re-order retention filters",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"apm_retention_filter\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"apm_retention_filter\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters-execution-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"apm",
								"config",
								"retention-filters-execution-order"
							]
						},
						"description": "Re-order the execution order of retention filters."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"apm_retention_filter\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"apm_retention_filter\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters-execution-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters-execution-order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"apm_retention_filter\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"apm_retention_filter\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters-execution-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters-execution-order"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"apm_retention_filter\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"apm_retention_filter\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters-execution-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters-execution-order"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"apm_retention_filter\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"apm_retention_filter\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters-execution-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters-execution-order"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a retention filter",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"apm",
								"config",
								"retention-filters",
								":filter_id"
							],
							"variable": [
								{
									"key": "filter_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a specific retention filter from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters",
										":filter_id"
									],
									"variable": [
										{
											"key": "filter_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters",
										":filter_id"
									],
									"variable": [
										{
											"key": "filter_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters",
										":filter_id"
									],
									"variable": [
										{
											"key": "filter_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters",
										":filter_id"
									],
									"variable": [
										{
											"key": "filter_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a given APM retention filter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"apm",
								"config",
								"retention-filters",
								":filter_id"
							],
							"variable": [
								{
									"key": "filter_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get an APM retention filter."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters",
										":filter_id"
									],
									"variable": [
										{
											"key": "filter_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"apm_retention_filter\",\n    \"attributes\": {\n      \"created_at\": \"<long>\",\n      \"created_by\": \"<string>\",\n      \"editable\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"execution_order\": \"<long>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"filter_type\": \"spans-sampling-processor\",\n      \"modified_at\": \"<long>\",\n      \"modified_by\": \"<string>\",\n      \"name\": \"<string>\",\n      \"rate\": \"<double>\"\n    }\n  }\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters",
										":filter_id"
									],
									"variable": [
										{
											"key": "filter_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters",
										":filter_id"
									],
									"variable": [
										{
											"key": "filter_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters",
										":filter_id"
									],
									"variable": [
										{
											"key": "filter_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a retention filter",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"filter_type\": \"spans-sampling-processor\",\n      \"rate\": \"<double>\"\n    },\n    \"type\": \"apm_retention_filter\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"apm",
								"config",
								"retention-filters",
								":filter_id"
							],
							"variable": [
								{
									"key": "filter_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a retention filter from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"filter_type\": \"spans-sampling-processor\",\n      \"rate\": \"<double>\"\n    },\n    \"type\": \"apm_retention_filter\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters",
										":filter_id"
									],
									"variable": [
										{
											"key": "filter_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"apm_retention_filter\",\n    \"attributes\": {\n      \"created_at\": \"<long>\",\n      \"created_by\": \"<string>\",\n      \"editable\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"execution_order\": \"<long>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"filter_type\": \"spans-sampling-processor\",\n      \"modified_at\": \"<long>\",\n      \"modified_by\": \"<string>\",\n      \"name\": \"<string>\",\n      \"rate\": \"<double>\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"filter_type\": \"spans-sampling-processor\",\n      \"rate\": \"<double>\"\n    },\n    \"type\": \"apm_retention_filter\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters",
										":filter_id"
									],
									"variable": [
										{
											"key": "filter_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"filter_type\": \"spans-sampling-processor\",\n      \"rate\": \"<double>\"\n    },\n    \"type\": \"apm_retention_filter\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters",
										":filter_id"
									],
									"variable": [
										{
											"key": "filter_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"filter_type\": \"spans-sampling-processor\",\n      \"rate\": \"<double>\"\n    },\n    \"type\": \"apm_retention_filter\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters",
										":filter_id"
									],
									"variable": [
										{
											"key": "filter_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"enabled\": \"<boolean>\",\n      \"filter_type\": \"spans-sampling-processor\",\n      \"rate\": \"<double>\"\n    },\n    \"type\": \"apm_retention_filter\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/retention-filters/:filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"retention-filters",
										":filter_id"
									],
									"variable": [
										{
											"key": "filter_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Manage configuration of [APM retention filters](https://app.datadoghq.com/apm/traces/retention-filters) for your organization. You need an API and application key with Admin rights to interact with this endpoint."
		},
		{
			"name": "Audit",
			"item": [
				{
					"name": "Get a list of Audit Logs events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/audit/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"audit",
								"events"
							],
							"query": [
								{
									"key": "filter[query]",
									"value": "<string>",
									"description": "Search query following Audit Logs syntax."
								},
								{
									"key": "filter[from]",
									"value": "<dateTime>",
									"description": "Minimum timestamp for requested events."
								},
								{
									"key": "filter[to]",
									"value": "<dateTime>",
									"description": "Maximum timestamp for requested events."
								},
								{
									"key": "sort",
									"value": "-timestamp",
									"description": "Order of events in results."
								},
								{
									"key": "page[cursor]",
									"value": "<string>",
									"description": "List following results with a cursor provided in the previous query."
								},
								{
									"key": "page[limit]",
									"value": "10",
									"description": "Maximum number of events in the response."
								}
							]
						},
						"description": "List endpoint returns events that match a Audit Logs search query.\n[Results are paginated][1].\n\nUse this endpoint to see your latest Audit Logs events.\n\n[1]: https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/audit/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"audit",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following Audit Logs syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"utaff\": {},\n          \"dolore_6c\": {},\n          \"fugiat3b\": {}\n        },\n        \"message\": \"<string>\",\n        \"service\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"audit\"\n    },\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"cillum_a\": {}\n        },\n        \"message\": \"<string>\",\n        \"service\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"audit\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"timeout\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/audit/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"audit",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following Audit Logs syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/audit/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"audit",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following Audit Logs syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/audit/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"audit",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following Audit Logs syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Search Audit Logs events",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/audit/events/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"audit",
								"events",
								"search"
							]
						},
						"description": "List endpoint returns Audit Logs events that match an Audit search query.\n[Results are paginated][1].\n\nUse this endpoint to build complex Audit Logs events filtering and search.\n\n[1]: https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/audit/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"audit",
										"events",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"utaff\": {},\n          \"dolore_6c\": {},\n          \"fugiat3b\": {}\n        },\n        \"message\": \"<string>\",\n        \"service\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"audit\"\n    },\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"cillum_a\": {}\n        },\n        \"message\": \"<string>\",\n        \"service\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"audit\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"timeout\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/audit/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"audit",
										"events",
										"search"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/audit/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"audit",
										"events",
										"search"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/audit/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"audit",
										"events",
										"search"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Search your Audit Logs events over HTTP."
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Validate API key",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"validate"
							]
						},
						"description": "Check if the API key (not the APP key) is valid. If invalid, a 403 is returned."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"valid\": true\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"validate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"validate"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "All requests to Datadog’s API must be authenticated.\nRequests that write data require reporting access and require an `API key`.\nRequests that read data require full access and also require an `application key`.\n\n**Note:** All Datadog API clients are configured by default to consume Datadog US site APIs.\nIf you are on the Datadog EU site, set the environment variable `DATADOG_HOST` to\n`https://api.datadoghq.eu` or override this value directly when creating your client.\n\n[Manage your account’s API and application keys](https://app.datadoghq.com/account/settings#api)."
		},
		{
			"name": "AuthN Mappings",
			"item": [
				{
					"name": "List all AuthN Mappings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/authn_mappings?page[size]=10&page[number]=0&sort=saml_assertion_attribute.attribute_value&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"authn_mappings"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page. The maximum allowed value is 100."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "saml_assertion_attribute.attribute_value",
									"description": "Sort AuthN Mappings depending on the given field."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter all mappings by the given string."
								}
							]
						},
						"description": "List all AuthN Mappings in the org."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings?page[size]=10&page[number]=0&sort=saml_assertion_attribute.attribute_value&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "saml_assertion_attribute.attribute_value",
											"description": "Sort AuthN Mappings depending on the given field."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter all mappings by the given string."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"authn_mappings\",\n      \"attributes\": {\n        \"attribute_key\": \"<string>\",\n        \"attribute_value\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"modified_at\": \"<dateTime>\",\n        \"saml_assertion_attribute_id\": \"<string>\"\n      },\n      \"relationships\": {\n        \"role\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        },\n        \"saml_assertion_attribute\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"saml_assertion_attributes\"\n          }\n        }\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"authn_mappings\",\n      \"attributes\": {\n        \"attribute_key\": \"<string>\",\n        \"attribute_value\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"modified_at\": \"<dateTime>\",\n        \"saml_assertion_attribute_id\": \"<string>\"\n      },\n      \"relationships\": {\n        \"role\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        },\n        \"saml_assertion_attribute\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"saml_assertion_attributes\"\n          }\n        }\n      }\n    }\n  ],\n  \"included\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"saml_assertion_attributes\",\n      \"attributes\": {\n        \"attribute_key\": \"<string>\",\n        \"attribute_value\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"saml_assertion_attributes\",\n      \"attributes\": {\n        \"attribute_key\": \"<string>\",\n        \"attribute_value\": \"<string>\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"page\": {\n      \"total_count\": \"<long>\",\n      \"total_filtered_count\": \"<long>\"\n    }\n  }\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings?page[size]=10&page[number]=0&sort=saml_assertion_attribute.attribute_value&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "saml_assertion_attribute.attribute_value",
											"description": "Sort AuthN Mappings depending on the given field."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter all mappings by the given string."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings?page[size]=10&page[number]=0&sort=saml_assertion_attribute.attribute_value&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "saml_assertion_attribute.attribute_value",
											"description": "Sort AuthN Mappings depending on the given field."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter all mappings by the given string."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create an AuthN Mapping",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/authn_mappings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"authn_mappings"
							]
						},
						"description": "Create an AuthN Mapping."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"saml_assertion_attribute_id\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      },\n      \"saml_assertion_attribute\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"saml_assertion_attributes\"\n        }\n      }\n    }\n  },\n  \"included\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"saml_assertion_attributes\",\n      \"attributes\": {\n        \"attribute_key\": \"<string>\",\n        \"attribute_value\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"saml_assertion_attributes\",\n      \"attributes\": {\n        \"attribute_key\": \"<string>\",\n        \"attribute_value\": \"<string>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete an AuthN Mapping",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"authn_mappings",
								":authn_mapping_id"
							],
							"variable": [
								{
									"key": "authn_mapping_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete an AuthN Mapping specified by AuthN Mapping UUID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get an AuthN Mapping by UUID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"authn_mappings",
								":authn_mapping_id"
							],
							"variable": [
								{
									"key": "authn_mapping_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get an AuthN Mapping specified by the AuthN Mapping UUID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"saml_assertion_attribute_id\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      },\n      \"saml_assertion_attribute\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"saml_assertion_attributes\"\n        }\n      }\n    }\n  },\n  \"included\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"saml_assertion_attributes\",\n      \"attributes\": {\n        \"attribute_key\": \"<string>\",\n        \"attribute_value\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"saml_assertion_attributes\",\n      \"attributes\": {\n        \"attribute_key\": \"<string>\",\n        \"attribute_value\": \"<string>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Edit an AuthN Mapping",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"authn_mappings",
								":authn_mapping_id"
							],
							"variable": [
								{
									"key": "authn_mapping_id",
									"value": "<string>"
								}
							]
						},
						"description": "Edit an AuthN Mapping."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"saml_assertion_attribute_id\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      },\n      \"saml_assertion_attribute\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"saml_assertion_attributes\"\n        }\n      }\n    }\n  },\n  \"included\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"saml_assertion_attributes\",\n      \"attributes\": {\n        \"attribute_key\": \"<string>\",\n        \"attribute_value\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"saml_assertion_attributes\",\n      \"attributes\": {\n        \"attribute_key\": \"<string>\",\n        \"attribute_value\": \"<string>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"authn_mappings\",\n    \"attributes\": {\n      \"attribute_key\": \"<string>\",\n      \"attribute_value\": \"<string>\"\n    },\n    \"relationships\": {\n      \"role\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"roles\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/authn_mappings/:authn_mapping_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"authn_mappings",
										":authn_mapping_id"
									],
									"variable": [
										{
											"key": "authn_mapping_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "[AuthN Mappings API](https://docs.datadoghq.com/account_management/authn_mapping/?tab=example)\nis used to automatically map group of users to roles in Datadog using attributes\nsent from Identity Providers."
		},
		{
			"name": "AWS Integration",
			"item": [
				{
					"name": "Get all AWS tag filters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/filtering?account_id=cupidatat Ut Duis",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"filtering"
							],
							"query": [
								{
									"key": "account_id",
									"value": "cupidatat Ut Duis",
									"description": "(Required) Only return AWS filters that matches this `account_id`."
								}
							]
						},
						"description": "Get all AWS tag filters."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering?account_id=cupidatat Ut Duis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									],
									"query": [
										{
											"key": "account_id",
											"value": "cupidatat Ut Duis",
											"description": "(Required) Only return AWS filters that matches this `account_id`."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"filters\": [\n    {\n      \"namespace\": \"custom\",\n      \"tag_filter_str\": \"prod*\"\n    },\n    {\n      \"namespace\": \"sqs\",\n      \"tag_filter_str\": \"prod*\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering?account_id=cupidatat Ut Duis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									],
									"query": [
										{
											"key": "account_id",
											"value": "cupidatat Ut Duis",
											"description": "(Required) Only return AWS filters that matches this `account_id`."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering?account_id=cupidatat Ut Duis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									],
									"query": [
										{
											"key": "account_id",
											"value": "cupidatat Ut Duis",
											"description": "(Required) Only return AWS filters that matches this `account_id`."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering?account_id=cupidatat Ut Duis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									],
									"query": [
										{
											"key": "account_id",
											"value": "cupidatat Ut Duis",
											"description": "(Required) Only return AWS filters that matches this `account_id`."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Set an AWS tag filter",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"123456789012\",\n  \"namespace\": \"application_elb\",\n  \"tag_filter_str\": \"prod*\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"filtering"
							]
						},
						"description": "Set an AWS tag filter."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"123456789012\",\n  \"namespace\": \"application_elb\",\n  \"tag_filter_str\": \"prod*\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"123456789012\",\n  \"namespace\": \"application_elb\",\n  \"tag_filter_str\": \"prod*\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"123456789012\",\n  \"namespace\": \"application_elb\",\n  \"tag_filter_str\": \"prod*\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"123456789012\",\n  \"namespace\": \"application_elb\",\n  \"tag_filter_str\": \"prod*\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a tag filtering entry",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"FAKEAC0FAKEAC2FAKEAC\",\n  \"namespace\": \"lambda\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"filtering"
							]
						},
						"description": "Delete a tag filtering entry."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"FAKEAC0FAKEAC2FAKEAC\",\n  \"namespace\": \"lambda\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"FAKEAC0FAKEAC2FAKEAC\",\n  \"namespace\": \"lambda\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"FAKEAC0FAKEAC2FAKEAC\",\n  \"namespace\": \"lambda\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"FAKEAC0FAKEAC2FAKEAC\",\n  \"namespace\": \"lambda\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Generate a new external ID",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/generate_new_external_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"generate_new_external_id"
							]
						},
						"description": "Generate a new AWS external ID for a given AWS account ID and role name pair."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/generate_new_external_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"generate_new_external_id"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"external_id\": \"ex sit ea commodo tempor\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/generate_new_external_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"generate_new_external_id"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/generate_new_external_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"generate_new_external_id"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/generate_new_external_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"generate_new_external_id"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List namespace rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/available_namespace_rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"available_namespace_rules"
							]
						},
						"description": "List all namespace rules for a given Datadog-AWS integration. This endpoint takes no arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/available_namespace_rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"available_namespace_rules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"namespace1\",\n  \"namespace2\",\n  \"namespace3\"\n]"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/available_namespace_rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"available_namespace_rules"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/available_namespace_rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"available_namespace_rules"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List all AWS integrations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=cupidatat Ut Duis&role_name=cupidatat Ut Duis&access_key_id=cupidatat Ut Duis",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws"
							],
							"query": [
								{
									"key": "account_id",
									"value": "cupidatat Ut Duis",
									"description": "Only return AWS accounts that matches this `account_id`."
								},
								{
									"key": "role_name",
									"value": "cupidatat Ut Duis",
									"description": "Only return AWS accounts that matches this role_name."
								},
								{
									"key": "access_key_id",
									"value": "cupidatat Ut Duis",
									"description": "Only return AWS accounts that matches this `access_key_id`."
								}
							]
						},
						"description": "List all Datadog-AWS integrations available in your Datadog organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=cupidatat Ut Duis&role_name=cupidatat Ut Duis&access_key_id=cupidatat Ut Duis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `account_id`."
										},
										{
											"key": "role_name",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this role_name."
										},
										{
											"key": "access_key_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `access_key_id`."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"accounts\": [\n    {\n      \"access_key_id\": \"sit Lorem commodo est\",\n      \"account_id\": \"123456789012\",\n      \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n      },\n      \"cspm_resource_collection_enabled\": true,\n      \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n      ],\n      \"filter_tags\": [\n        \"$KEY:$VALUE\"\n      ],\n      \"host_tags\": [\n        \"$KEY:$VALUE\"\n      ],\n      \"metrics_collection_enabled\": false,\n      \"resource_collection_enabled\": true,\n      \"role_name\": \"DatadogAWSIntegrationRole\",\n      \"secret_access_key\": \"qui veniam sint anim\"\n    },\n    {\n      \"access_key_id\": \"quis enim laboris\",\n      \"account_id\": \"123456789012\",\n      \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n      },\n      \"cspm_resource_collection_enabled\": true,\n      \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n      ],\n      \"filter_tags\": [\n        \"$KEY:$VALUE\"\n      ],\n      \"host_tags\": [\n        \"$KEY:$VALUE\"\n      ],\n      \"metrics_collection_enabled\": false,\n      \"resource_collection_enabled\": true,\n      \"role_name\": \"DatadogAWSIntegrationRole\",\n      \"secret_access_key\": \"ea esse Duis\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=cupidatat Ut Duis&role_name=cupidatat Ut Duis&access_key_id=cupidatat Ut Duis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `account_id`."
										},
										{
											"key": "role_name",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this role_name."
										},
										{
											"key": "access_key_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `access_key_id`."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=cupidatat Ut Duis&role_name=cupidatat Ut Duis&access_key_id=cupidatat Ut Duis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `account_id`."
										},
										{
											"key": "role_name",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this role_name."
										},
										{
											"key": "access_key_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `access_key_id`."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=cupidatat Ut Duis&role_name=cupidatat Ut Duis&access_key_id=cupidatat Ut Duis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `account_id`."
										},
										{
											"key": "role_name",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this role_name."
										},
										{
											"key": "access_key_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `access_key_id`."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete an AWS integration",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"access_key_id\": \"fugiat\",\n  \"account_id\": \"123456789012\",\n  \"role_name\": \"DatadogAWSIntegrationRole\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws"
							]
						},
						"description": "Delete a Datadog-AWS integration matching the specified `account_id` and `role_name parameters`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"fugiat\",\n  \"account_id\": \"123456789012\",\n  \"role_name\": \"DatadogAWSIntegrationRole\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"fugiat\",\n  \"account_id\": \"123456789012\",\n  \"role_name\": \"DatadogAWSIntegrationRole\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"fugiat\",\n  \"account_id\": \"123456789012\",\n  \"role_name\": \"DatadogAWSIntegrationRole\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Conflict Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"fugiat\",\n  \"account_id\": \"123456789012\",\n  \"role_name\": \"DatadogAWSIntegrationRole\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"fugiat\",\n  \"account_id\": \"123456789012\",\n  \"role_name\": \"DatadogAWSIntegrationRole\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create an AWS integration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws"
							]
						},
						"description": "Create a Datadog-Amazon Web Services integration.\nUsing the `POST` method updates your integration configuration\nby adding your new configuration to the existing one in your Datadog organization.\nA unique AWS Account ID for role based authentication."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"external_id\": \"ex sit ea commodo tempor\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Conflict Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update an AWS integration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=cupidatat Ut Duis&role_name=cupidatat Ut Duis&access_key_id=cupidatat Ut Duis",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws"
							],
							"query": [
								{
									"key": "account_id",
									"value": "cupidatat Ut Duis",
									"description": "Only return AWS accounts that matches this `account_id`."
								},
								{
									"key": "role_name",
									"value": "cupidatat Ut Duis",
									"description": "Only return AWS accounts that match this `role_name`.\nRequired if `account_id` is specified."
								},
								{
									"key": "access_key_id",
									"value": "cupidatat Ut Duis",
									"description": "Only return AWS accounts that matches this `access_key_id`.\nRequired if none of the other two options are specified."
								}
							]
						},
						"description": "Update a Datadog-Amazon Web Services integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=cupidatat Ut Duis&role_name=cupidatat Ut Duis&access_key_id=cupidatat Ut Duis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `account_id`."
										},
										{
											"key": "role_name",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that match this `role_name`.\nRequired if `account_id` is specified."
										},
										{
											"key": "access_key_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `access_key_id`.\nRequired if none of the other two options are specified."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=cupidatat Ut Duis&role_name=cupidatat Ut Duis&access_key_id=cupidatat Ut Duis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `account_id`."
										},
										{
											"key": "role_name",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that match this `role_name`.\nRequired if `account_id` is specified."
										},
										{
											"key": "access_key_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `access_key_id`.\nRequired if none of the other two options are specified."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=cupidatat Ut Duis&role_name=cupidatat Ut Duis&access_key_id=cupidatat Ut Duis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `account_id`."
										},
										{
											"key": "role_name",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that match this `role_name`.\nRequired if `account_id` is specified."
										},
										{
											"key": "access_key_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `access_key_id`.\nRequired if none of the other two options are specified."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Conflict Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=cupidatat Ut Duis&role_name=cupidatat Ut Duis&access_key_id=cupidatat Ut Duis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `account_id`."
										},
										{
											"key": "role_name",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that match this `role_name`.\nRequired if `account_id` is specified."
										},
										{
											"key": "access_key_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `access_key_id`.\nRequired if none of the other two options are specified."
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"access_key_id\": \"eiusmod\",\n  \"account_id\": \"123456789012\",\n  \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n  },\n  \"cspm_resource_collection_enabled\": true,\n  \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"filter_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"host_tags\": [\n    \"$KEY:$VALUE\"\n  ],\n  \"metrics_collection_enabled\": false,\n  \"resource_collection_enabled\": true,\n  \"role_name\": \"DatadogAWSIntegrationRole\",\n  \"secret_access_key\": \"amet et dolore deserunt pariatur\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=cupidatat Ut Duis&role_name=cupidatat Ut Duis&access_key_id=cupidatat Ut Duis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `account_id`."
										},
										{
											"key": "role_name",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that match this `role_name`.\nRequired if `account_id` is specified."
										},
										{
											"key": "access_key_id",
											"value": "cupidatat Ut Duis",
											"description": "Only return AWS accounts that matches this `access_key_id`.\nRequired if none of the other two options are specified."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all Amazon EventBridge sources",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"event_bridge"
							]
						},
						"description": "Get all Amazon EventBridge sources."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"event_bridge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"accounts\": [\n    {\n      \"accountId\": \"123456789012\",\n      \"eventHubs\": [\n        {\n          \"name\": \"dolor non\",\n          \"region\": \"i\"\n        },\n        {\n          \"name\": \"sit in ut Ut\",\n          \"region\": \"nisi Ut voluptate\"\n        }\n      ],\n      \"tags\": [\n        \"$KEY:$VALUE\"\n      ]\n    },\n    {\n      \"accountId\": \"123456789012\",\n      \"eventHubs\": [\n        {\n          \"name\": \"Ut eu\",\n          \"region\": \"mollit\"\n        },\n        {\n          \"name\": \"sed dolore Excepteur\",\n          \"region\": \"nisi consectetur ut\"\n        }\n      ],\n      \"tags\": [\n        \"$KEY:$VALUE\"\n      ]\n    }\n  ],\n  \"isInstalled\": false\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"event_bridge"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"event_bridge"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"event_bridge"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create an Amazon EventBridge source",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"123456789012\",\n  \"create_event_bus\": true,\n  \"event_generator_name\": \"app-alerts\",\n  \"region\": \"us-east-1\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"event_bridge"
							]
						},
						"description": "Create an Amazon EventBridge source."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"123456789012\",\n  \"create_event_bus\": true,\n  \"event_generator_name\": \"app-alerts\",\n  \"region\": \"us-east-1\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"event_bridge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"event_source_name\": \"app-alerts-zyxw3210\",\n  \"has_bus\": true,\n  \"region\": \"us-east-1\",\n  \"status\": \"created\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"123456789012\",\n  \"create_event_bus\": true,\n  \"event_generator_name\": \"app-alerts\",\n  \"region\": \"us-east-1\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"event_bridge"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"123456789012\",\n  \"create_event_bus\": true,\n  \"event_generator_name\": \"app-alerts\",\n  \"region\": \"us-east-1\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"event_bridge"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"123456789012\",\n  \"create_event_bus\": true,\n  \"event_generator_name\": \"app-alerts\",\n  \"region\": \"us-east-1\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"event_bridge"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete an Amazon EventBridge source",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"123456789012\",\n  \"event_generator_name\": \"app-alerts-zyxw3210\",\n  \"region\": \"us-east-1\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"event_bridge"
							]
						},
						"description": "Delete an Amazon EventBridge source."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"123456789012\",\n  \"event_generator_name\": \"app-alerts-zyxw3210\",\n  \"region\": \"us-east-1\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"event_bridge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"empty\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"123456789012\",\n  \"event_generator_name\": \"app-alerts-zyxw3210\",\n  \"region\": \"us-east-1\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"event_bridge"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"123456789012\",\n  \"event_generator_name\": \"app-alerts-zyxw3210\",\n  \"region\": \"us-east-1\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"event_bridge"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"123456789012\",\n  \"event_generator_name\": \"app-alerts-zyxw3210\",\n  \"region\": \"us-east-1\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/event_bridge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"event_bridge"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Configure your Datadog-AWS integration directly through the Datadog API.\nFor more information, see the [AWS integration page](https://docs.datadoghq.com/integrations/amazon_web_services)."
		},
		{
			"name": "AWS Logs Integration",
			"item": [
				{
					"name": "Delete an AWS Logs integration",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"logs"
							]
						},
						"description": "Delete a Datadog-AWS logs configuration by removing the specific Lambda ARN associated with a given AWS account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List all AWS Logs integrations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"logs"
							]
						},
						"description": "List all Datadog-AWS Logs integrations configured in your Datadog account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"account_id\": \"123456789101\",\n    \"lambdas\": [],\n    \"services\": [\n      \"s3\",\n      \"elb\",\n      \"elbv2\",\n      \"cloudfront\",\n      \"redshift\",\n      \"lambda\"\n    ]\n  }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Add AWS Log Lambda ARN",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"logs"
							]
						},
						"description": "Attach the Lambda ARN of the Lambda created for the Datadog-AWS log collection to your AWS account ID to enable log collection."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Check that an AWS Lambda Function exists",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/logs/check_async",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"logs",
								"check_async"
							]
						},
						"description": "Test if permissions are present to add a log-forwarding triggers for the given services and AWS account. The input\nis the same as for Enable an AWS service log collection. Subsequent requests will always repeat the above, so this\nendpoint can be polled intermittently instead of blocking.\n\n- Returns a status of 'created' when it's checking if the Lambda exists in the account.\n- Returns a status of 'waiting' while checking.\n- Returns a status of 'checked and ok' if the Lambda exists.\n- Returns a status of 'error' if the Lambda does not exist."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/check_async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"check_async"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"no_such_config\",\n      \"message\": \"AWS account 12345 has no lambda config to update\"\n    },\n    {\n      \"code\": \"no_such_config\",\n      \"message\": \"AWS account 12345 has no lambda config to update\"\n    }\n  ],\n  \"status\": \"created\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/check_async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"check_async"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/check_async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"check_async"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/check_async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"check_async"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get list of AWS log ready services",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"logs",
								"services"
							]
						},
						"description": "Get the list of current AWS services that Datadog offers automatic log collection. Use returned service IDs with the services parameter for the Enable an AWS service log collection API endpoint."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"s3\",\n    \"label\": \"S3 Access Logs\"\n  },\n  {\n    \"id\": \"elb\",\n    \"label\": \"Classic ELB Access Logs\"\n  },\n  {\n    \"id\": \"elbv2\",\n    \"label\": \"Application ELB Access Logs\"\n  },\n  {\n    \"id\": \"cloudfront\",\n    \"label\": \"CloudFront Access Logs\"\n  },\n  {\n    \"id\": \"redshift\",\n    \"label\": \"Redshift Logs\"\n  },\n  {\n    \"id\": \"lambda\",\n    \"label\": \"Lambda Cloudwatch Logs\"\n  }\n]"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Enable an AWS Logs integration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"1234567\",\n  \"services\": [\n    \"s3\",\n    \"elb\",\n    \"elbv2\",\n    \"cloudfront\",\n    \"redshift\",\n    \"lambda\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"logs",
								"services"
							]
						},
						"description": "Enable automatic log collection for a list of services. This should be run after running `CreateAWSLambdaARN` to save the configuration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"services\": [\n    \"s3\",\n    \"elb\",\n    \"elbv2\",\n    \"cloudfront\",\n    \"redshift\",\n    \"lambda\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"services\": [\n    \"s3\",\n    \"elb\",\n    \"elbv2\",\n    \"cloudfront\",\n    \"redshift\",\n    \"lambda\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"services\": [\n    \"s3\",\n    \"elb\",\n    \"elbv2\",\n    \"cloudfront\",\n    \"redshift\",\n    \"lambda\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"services\": [\n    \"s3\",\n    \"elb\",\n    \"elbv2\",\n    \"cloudfront\",\n    \"redshift\",\n    \"lambda\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Check permissions for log services",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"1234567\",\n  \"services\": [\n    \"s3\",\n    \"elb\",\n    \"elbv2\",\n    \"cloudfront\",\n    \"redshift\",\n    \"lambda\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services_async",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"logs",
								"services_async"
							]
						},
						"description": "Test if permissions are present to add log-forwarding triggers for the\ngiven services and AWS account. Input is the same as for `EnableAWSLogServices`.\nDone async, so can be repeatedly polled in a non-blocking fashion until\nthe async request completes.\n\n- Returns a status of `created` when it's checking if the permissions exists\n  in the AWS account.\n- Returns a status of `waiting` while checking.\n- Returns a status of `checked and ok` if the Lambda exists.\n- Returns a status of `error` if the Lambda does not exist."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"services\": [\n    \"s3\",\n    \"elb\",\n    \"elbv2\",\n    \"cloudfront\",\n    \"redshift\",\n    \"lambda\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services_async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services_async"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"code\": \"no_such_config\",\n      \"message\": \"AWS account 12345 has no lambda config to update\"\n    },\n    {\n      \"code\": \"no_such_config\",\n      \"message\": \"AWS account 12345 has no lambda config to update\"\n    }\n  ],\n  \"status\": \"created\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"services\": [\n    \"s3\",\n    \"elb\",\n    \"elbv2\",\n    \"cloudfront\",\n    \"redshift\",\n    \"lambda\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services_async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services_async"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"services\": [\n    \"s3\",\n    \"elb\",\n    \"elbv2\",\n    \"cloudfront\",\n    \"redshift\",\n    \"lambda\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services_async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services_async"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"1234567\",\n  \"services\": [\n    \"s3\",\n    \"elb\",\n    \"elbv2\",\n    \"cloudfront\",\n    \"redshift\",\n    \"lambda\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services_async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services_async"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Configure your Datadog-AWS-Logs integration directly through Datadog API.\nFor more information, see the [AWS integration page](https://docs.datadoghq.com/api/?lang=bash#integration-aws-logs)."
		},
		{
			"name": "Azure Integration",
			"item": [
				{
					"name": "Delete an Azure integration",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/azure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"azure"
							]
						},
						"description": "Delete a given Datadog-Azure integration from your Datadog account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List all Azure integrations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/azure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"azure"
							]
						},
						"description": "List all Datadog-Azure integrations configured in your Datadog account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"app_service_plan_filters\": \"key:value,filter:example\",\n    \"automute\": true,\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"cspm_enabled\": true,\n    \"custom_metrics_enabled\": true,\n    \"errors\": [\n      \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n  },\n  {\n    \"app_service_plan_filters\": \"key:value,filter:example\",\n    \"automute\": true,\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"cspm_enabled\": true,\n    \"custom_metrics_enabled\": true,\n    \"errors\": [\n      \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n  }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create an Azure integration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/azure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"azure"
							]
						},
						"description": "Create a Datadog-Azure integration.\n\nUsing the `POST` method updates your integration configuration by adding your new\nconfiguration to the existing one in your Datadog organization.\n\nUsing the `PUT` method updates your integration configuration by replacing your\ncurrent configuration with the new one sent to your Datadog organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update an Azure integration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/azure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"azure"
							]
						},
						"description": "Update a Datadog-Azure integration. Requires an existing `tenant_name` and `client_id`.\nAny other fields supplied will overwrite existing values. To overwrite `tenant_name` or `client_id`,\nuse `new_tenant_name` and `new_client_id`. To leave a field unchanged, do not supply that field in the payload."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update Azure integration host filters",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/azure/host_filters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"azure",
								"host_filters"
							]
						},
						"description": "Update the defined list of host filters for a given Datadog-Azure integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure/host_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure",
										"host_filters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure/host_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure",
										"host_filters"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure/host_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure",
										"host_filters"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_service_plan_filters\": \"key:value,filter:example\",\n  \"automute\": true,\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"cspm_enabled\": true,\n  \"custom_metrics_enabled\": true,\n  \"errors\": [\n    \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure/host_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure",
										"host_filters"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Configure your Datadog-Azure integration directly through the Datadog API.\nFor more information, see the [Datadog-Azure integration page](https://docs.datadoghq.com/integrations/azure)."
		},
		{
			"name": "CI Visibility Pipelines",
			"item": [
				{
					"name": "Get a list of pipelines events",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/ci/pipelines/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=timestamp&page[cursor]=<string>&page[limit]=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"ci",
								"pipelines",
								"events"
							],
							"query": [
								{
									"key": "filter[query]",
									"value": "<string>",
									"description": "Search query following log syntax."
								},
								{
									"key": "filter[from]",
									"value": "<dateTime>",
									"description": "Minimum timestamp for requested events."
								},
								{
									"key": "filter[to]",
									"value": "<dateTime>",
									"description": "Maximum timestamp for requested events."
								},
								{
									"key": "sort",
									"value": "timestamp",
									"description": "Order of events in results."
								},
								{
									"key": "page[cursor]",
									"value": "<string>",
									"description": "List following results with a cursor provided in the previous query."
								},
								{
									"key": "page[limit]",
									"value": "10",
									"description": "Maximum number of events in the response."
								}
							]
						},
						"description": "List endpoint returns CI Visibility pipeline events that match a [search query](https://docs.datadoghq.com/continuous_integration/explorer/search_syntax/).\n[Results are paginated similarly to logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).\n\nUse this endpoint to see your latest pipeline events."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/pipelines/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"pipelines",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following log syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"ex_4_\": {},\n          \"fugiat69\": {},\n          \"ad_7\": {}\n        },\n        \"ci_level\": \"job\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"cipipeline\"\n    },\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"pariatur7_\": {}\n        },\n        \"ci_level\": \"pipeline\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"cipipeline\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"done\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/pipelines/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"pipelines",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following log syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/pipelines/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"pipelines",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following log syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/pipelines/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"pipelines",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following log syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Search pipelines events",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/ci/pipelines/events/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"ci",
								"pipelines",
								"events",
								"search"
							]
						},
						"description": "List endpoint returns CI Visibility pipeline events that match a [search query](https://docs.datadoghq.com/continuous_integration/explorer/search_syntax/).\n[Results are paginated similarly to logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).\n\nUse this endpoint to build complex events filtering and search."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/pipelines/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"pipelines",
										"events",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"ex_4_\": {},\n          \"fugiat69\": {},\n          \"ad_7\": {}\n        },\n        \"ci_level\": \"job\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"cipipeline\"\n    },\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"pariatur7_\": {}\n        },\n        \"ci_level\": \"pipeline\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"cipipeline\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"done\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/pipelines/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"pipelines",
										"events",
										"search"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/pipelines/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"pipelines",
										"events",
										"search"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/pipelines/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"pipelines",
										"events",
										"search"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Aggregate pipelines events",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"pc95\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"avg\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"delta\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc99\",\n        \"metric\": \"<string>\",\n        \"order\": \"desc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/ci/pipelines/analytics/aggregate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"ci",
								"pipelines",
								"analytics",
								"aggregate"
							]
						},
						"description": "Use this API endpoint to aggregate CI Visibility pipeline events into buckets of computed metrics and timeseries."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"pc95\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"avg\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"delta\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc99\",\n        \"metric\": \"<string>\",\n        \"order\": \"desc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/pipelines/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"pipelines",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"buckets\": [\n      {\n        \"by\": {\n          \"reprehenderit461\": {\n            \"description\": \"The values for each group-by.\"\n          },\n          \"qui72\": {\n            \"description\": \"The values for each group-by.\"\n          }\n        },\n        \"computes\": {\n          \"dolore4\": \"<string>\"\n        }\n      },\n      {\n        \"by\": {\n          \"proident9a\": {\n            \"description\": \"The values for each group-by.\"\n          }\n        },\n        \"computes\": {\n          \"Lorem62\": \"<string>\",\n          \"ut5\": \"<string>\"\n        }\n      }\n    ]\n  },\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"request_id\": \"<string>\",\n    \"status\": \"done\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"pc95\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"avg\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"delta\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc99\",\n        \"metric\": \"<string>\",\n        \"order\": \"desc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/pipelines/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"pipelines",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"pc95\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"avg\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"delta\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc99\",\n        \"metric\": \"<string>\",\n        \"order\": \"desc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/pipelines/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"pipelines",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"pc95\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"avg\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"delta\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc99\",\n        \"metric\": \"<string>\",\n        \"order\": \"desc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/pipelines/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"pipelines",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Search or aggregate your CI Visibility pipeline events and send them to your Datadog site over HTTP."
		},
		{
			"name": "CI Visibility Tests",
			"item": [
				{
					"name": "Aggregate tests events",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"delta\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"pc90\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc98\",\n        \"metric\": \"<string>\",\n        \"order\": \"desc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc90\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/ci/tests/analytics/aggregate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"ci",
								"tests",
								"analytics",
								"aggregate"
							]
						},
						"description": "The API endpoint to aggregate CI Visibility test events into buckets of computed metrics and timeseries."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"delta\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"pc90\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc98\",\n        \"metric\": \"<string>\",\n        \"order\": \"desc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc90\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/tests/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"tests",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"buckets\": [\n      {\n        \"by\": {\n          \"adipisicing_68\": {\n            \"description\": \"The values for each group-by.\"\n          },\n          \"cupidatat7c\": {\n            \"description\": \"The values for each group-by.\"\n          }\n        },\n        \"computes\": {\n          \"Lorem_8\": \"<string>\"\n        }\n      },\n      {\n        \"by\": {\n          \"inb\": {\n            \"description\": \"The values for each group-by.\"\n          },\n          \"inf\": {\n            \"description\": \"The values for each group-by.\"\n          }\n        },\n        \"computes\": {\n          \"dolore98_\": \"<string>\"\n        }\n      }\n    ]\n  },\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"timeout\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"delta\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"pc90\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc98\",\n        \"metric\": \"<string>\",\n        \"order\": \"desc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc90\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/tests/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"tests",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"delta\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"pc90\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc98\",\n        \"metric\": \"<string>\",\n        \"order\": \"desc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc90\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/tests/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"tests",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"delta\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"pc90\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc98\",\n        \"metric\": \"<string>\",\n        \"order\": \"desc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc90\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/tests/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"tests",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a list of tests events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/ci/tests/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"ci",
								"tests",
								"events"
							],
							"query": [
								{
									"key": "filter[query]",
									"value": "<string>",
									"description": "Search query following log syntax."
								},
								{
									"key": "filter[from]",
									"value": "<dateTime>",
									"description": "Minimum timestamp for requested events."
								},
								{
									"key": "filter[to]",
									"value": "<dateTime>",
									"description": "Maximum timestamp for requested events."
								},
								{
									"key": "sort",
									"value": "-timestamp",
									"description": "Order of events in results."
								},
								{
									"key": "page[cursor]",
									"value": "<string>",
									"description": "List following results with a cursor provided in the previous query."
								},
								{
									"key": "page[limit]",
									"value": "10",
									"description": "Maximum number of events in the response."
								}
							]
						},
						"description": "List endpoint returns CI Visibility test events that match a [log search query](https://docs.datadoghq.com/logs/explorer/search_syntax/).\n[Results are paginated similarly to logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).\n\nUse this endpoint to see your latest test events."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/tests/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"tests",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following log syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"incididunt_3ac\": {}\n        },\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"test_level\": \"session\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"citest\"\n    },\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"officia_5\": {}\n        },\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"test_level\": \"module\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"citest\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"done\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/tests/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"tests",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following log syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/tests/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"tests",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following log syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/tests/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"tests",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following log syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Search tests events",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/ci/tests/events/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"ci",
								"tests",
								"events",
								"search"
							]
						},
						"description": "List endpoint returns CI Visibility test events that match a [log search query](https://docs.datadoghq.com/logs/explorer/search_syntax/).\n[Results are paginated similarly to logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).\n\nUse this endpoint to build complex events filtering and search."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/tests/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"tests",
										"events",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"incididunt_3ac\": {}\n        },\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"test_level\": \"session\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"citest\"\n    },\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"officia_5\": {}\n        },\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"test_level\": \"module\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"citest\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"done\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/tests/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"tests",
										"events",
										"search"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/tests/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"tests",
										"events",
										"search"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ci/tests/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ci",
										"tests",
										"events",
										"search"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Search or aggregate your CI Visibility test events over HTTP."
		},
		{
			"name": "Cloud Workload Security",
			"item": [
				{
					"name": "Get the latest Cloud Workload Security policy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/yaml"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security/cloud_workload/policy/download",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security",
								"cloud_workload",
								"policy",
								"download"
							]
						},
						"description": "The download endpoint generates a Cloud Workload Security policy file from your currently active\nCloud Workload Security rules, and downloads them as a .policy file. This file can then be deployed to\nyour Agents to update the policy running in your environment."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/yaml"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security/cloud_workload/policy/download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security",
										"cloud_workload",
										"policy",
										"download"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/yaml"
								}
							],
							"cookie": [],
							"body": "<string>"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security/cloud_workload/policy/download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security",
										"cloud_workload",
										"policy",
										"download"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security/cloud_workload/policy/download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security",
										"cloud_workload",
										"policy",
										"download"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all Cloud Workload Security Agent rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"cloud_workload_security",
								"agent_rules"
							]
						},
						"description": "Get the list of Agent rules."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"agentConstraint\": \"<string>\",\n        \"category\": \"<string>\",\n        \"creationAuthorUuId\": \"<string>\",\n        \"creationDate\": \"<long>\",\n        \"creator\": {\n          \"handle\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"defaultRule\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"expression\": \"<string>\",\n        \"name\": \"<string>\",\n        \"updateAuthorUuId\": \"<string>\",\n        \"updateDate\": \"<long>\",\n        \"updatedAt\": \"<long>\",\n        \"updater\": {\n          \"handle\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"version\": \"<long>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"agent_rule\"\n    },\n    {\n      \"attributes\": {\n        \"agentConstraint\": \"<string>\",\n        \"category\": \"<string>\",\n        \"creationAuthorUuId\": \"<string>\",\n        \"creationDate\": \"<long>\",\n        \"creator\": {\n          \"handle\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"defaultRule\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"expression\": \"<string>\",\n        \"name\": \"<string>\",\n        \"updateAuthorUuId\": \"<string>\",\n        \"updateDate\": \"<long>\",\n        \"updatedAt\": \"<long>\",\n        \"updater\": {\n          \"handle\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"version\": \"<long>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"agent_rule\"\n    }\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a Cloud Workload Security Agent rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"expression\": \"<string>\",\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    \"type\": \"agent_rule\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"cloud_workload_security",
								"agent_rules"
							]
						},
						"description": "Create a new Agent rule with the given parameters."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"expression\": \"<string>\",\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    \"type\": \"agent_rule\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"agentConstraint\": \"<string>\",\n      \"category\": \"<string>\",\n      \"creationAuthorUuId\": \"<string>\",\n      \"creationDate\": \"<long>\",\n      \"creator\": {\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"defaultRule\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"expression\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updateAuthorUuId\": \"<string>\",\n      \"updateDate\": \"<long>\",\n      \"updatedAt\": \"<long>\",\n      \"updater\": {\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<long>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"agent_rule\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"expression\": \"<string>\",\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    \"type\": \"agent_rule\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"expression\": \"<string>\",\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    \"type\": \"agent_rule\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"expression\": \"<string>\",\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    \"type\": \"agent_rule\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"expression\": \"<string>\",\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    \"type\": \"agent_rule\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a Cloud Workload Security Agent rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"cloud_workload_security",
								"agent_rules",
								":agent_rule_id"
							],
							"variable": [
								{
									"key": "agent_rule_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a specific Agent rule."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules",
										":agent_rule_id"
									],
									"variable": [
										{
											"key": "agent_rule_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules",
										":agent_rule_id"
									],
									"variable": [
										{
											"key": "agent_rule_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules",
										":agent_rule_id"
									],
									"variable": [
										{
											"key": "agent_rule_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules",
										":agent_rule_id"
									],
									"variable": [
										{
											"key": "agent_rule_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a Cloud Workload Security Agent rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"cloud_workload_security",
								"agent_rules",
								":agent_rule_id"
							],
							"variable": [
								{
									"key": "agent_rule_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get the details of a specific Agent rule."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules",
										":agent_rule_id"
									],
									"variable": [
										{
											"key": "agent_rule_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"agentConstraint\": \"<string>\",\n      \"category\": \"<string>\",\n      \"creationAuthorUuId\": \"<string>\",\n      \"creationDate\": \"<long>\",\n      \"creator\": {\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"defaultRule\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"expression\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updateAuthorUuId\": \"<string>\",\n      \"updateDate\": \"<long>\",\n      \"updatedAt\": \"<long>\",\n      \"updater\": {\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<long>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"agent_rule\"\n  }\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules",
										":agent_rule_id"
									],
									"variable": [
										{
											"key": "agent_rule_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules",
										":agent_rule_id"
									],
									"variable": [
										{
											"key": "agent_rule_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules",
										":agent_rule_id"
									],
									"variable": [
										{
											"key": "agent_rule_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a Cloud Workload Security Agent rule",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"expression\": \"<string>\"\n    },\n    \"type\": \"agent_rule\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"cloud_workload_security",
								"agent_rules",
								":agent_rule_id"
							],
							"variable": [
								{
									"key": "agent_rule_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a specific Agent rule.\nReturns the Agent rule object when the request is successful."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"expression\": \"<string>\"\n    },\n    \"type\": \"agent_rule\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules",
										":agent_rule_id"
									],
									"variable": [
										{
											"key": "agent_rule_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"agentConstraint\": \"<string>\",\n      \"category\": \"<string>\",\n      \"creationAuthorUuId\": \"<string>\",\n      \"creationDate\": \"<long>\",\n      \"creator\": {\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"defaultRule\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"expression\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updateAuthorUuId\": \"<string>\",\n      \"updateDate\": \"<long>\",\n      \"updatedAt\": \"<long>\",\n      \"updater\": {\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<long>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"agent_rule\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"expression\": \"<string>\"\n    },\n    \"type\": \"agent_rule\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules",
										":agent_rule_id"
									],
									"variable": [
										{
											"key": "agent_rule_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"expression\": \"<string>\"\n    },\n    \"type\": \"agent_rule\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules",
										":agent_rule_id"
									],
									"variable": [
										{
											"key": "agent_rule_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"expression\": \"<string>\"\n    },\n    \"type\": \"agent_rule\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules",
										":agent_rule_id"
									],
									"variable": [
										{
											"key": "agent_rule_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Concurrent Modification",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"expression\": \"<string>\"\n    },\n    \"type\": \"agent_rule\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules",
										":agent_rule_id"
									],
									"variable": [
										{
											"key": "agent_rule_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"expression\": \"<string>\"\n    },\n    \"type\": \"agent_rule\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/cloud_workload_security/agent_rules/:agent_rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"cloud_workload_security",
										"agent_rules",
										":agent_rule_id"
									],
									"variable": [
										{
											"key": "agent_rule_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Workload activity security rules for generating events using the Datadog security Agent."
		},
		{
			"name": "Cloudflare Integration",
			"item": [
				{
					"name": "List Cloudflare accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"cloudflare",
								"accounts"
							]
						},
						"description": "List Cloudflare accounts."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"name\": \"<string>\",\n        \"email\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"cloudflare-accounts\"\n    },\n    {\n      \"attributes\": {\n        \"name\": \"<string>\",\n        \"email\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"cloudflare-accounts\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Add Cloudflare account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"type\": \"cloudflare-accounts\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"cloudflare",
								"accounts"
							]
						},
						"description": "Create a Cloudflare account."
					},
					"response": [
						{
							"name": "CREATED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"type\": \"cloudflare-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"cloudflare-accounts\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"type\": \"cloudflare-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"type\": \"cloudflare-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"type\": \"cloudflare-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"type\": \"cloudflare-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete Cloudflare account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"cloudflare",
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a Cloudflare account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Cloudflare account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"cloudflare",
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a Cloudflare account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"cloudflare-accounts\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update Cloudflare account",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"type\": \"cloudflare-accounts\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"cloudflare",
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a Cloudflare account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"type\": \"cloudflare-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"cloudflare-accounts\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"type\": \"cloudflare-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"type\": \"cloudflare-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"type\": \"cloudflare-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"type\": \"cloudflare-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/cloudflare/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"cloudflare",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Configure your Datadog Cloudflare integration directly through the Datadog API."
		},
		{
			"name": "Confluent Cloud",
			"item": [
				{
					"name": "List Confluent accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"confluent-cloud",
								"accounts"
							]
						},
						"description": "List Confluent accounts."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"api_key\": \"<string>\",\n        \"resources\": [\n          {\n            \"resource_type\": \"<string>\",\n            \"enable_custom_metrics\": false,\n            \"id\": \"<string>\",\n            \"tags\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          {\n            \"resource_type\": \"<string>\",\n            \"enable_custom_metrics\": false,\n            \"id\": \"<string>\",\n            \"tags\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        ],\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"confluent-cloud-accounts\"\n    },\n    {\n      \"attributes\": {\n        \"api_key\": \"<string>\",\n        \"resources\": [\n          {\n            \"resource_type\": \"<string>\",\n            \"enable_custom_metrics\": false,\n            \"id\": \"<string>\",\n            \"tags\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          {\n            \"resource_type\": \"<string>\",\n            \"enable_custom_metrics\": false,\n            \"id\": \"<string>\",\n            \"tags\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        ],\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"confluent-cloud-accounts\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Add Confluent account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"api_secret\": \"<string>\",\n      \"resources\": [\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"confluent-cloud",
								"accounts"
							]
						},
						"description": "Create a Confluent account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"api_secret\": \"<string>\",\n      \"resources\": [\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"resources\": [\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"api_secret\": \"<string>\",\n      \"resources\": [\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"api_secret\": \"<string>\",\n      \"resources\": [\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"api_secret\": \"<string>\",\n      \"resources\": [\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"api_secret\": \"<string>\",\n      \"resources\": [\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete Confluent account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"confluent-cloud",
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a Confluent account with the provided account ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Confluent account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"confluent-cloud",
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get the Confluent account with the provided account ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"resources\": [\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update Confluent account",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"api_secret\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"confluent-cloud",
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update the Confluent account with the provided account ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"api_secret\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"resources\": [\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"resource_type\": \"<string>\",\n          \"enable_custom_metrics\": false,\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"api_secret\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"api_secret\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"api_secret\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"api_secret\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List Confluent Account resources",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"confluent-cloud",
								"accounts",
								":account_id",
								"resources"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a Confluent resource for the account associated with the provided ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"resource_type\": \"<string>\",\n        \"enable_custom_metrics\": false,\n        \"id\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"type\": \"confluent-cloud-resources\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"attributes\": {\n        \"resource_type\": \"<string>\",\n        \"enable_custom_metrics\": false,\n        \"id\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"type\": \"confluent-cloud-resources\",\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Add resource to Confluent account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"confluent-cloud",
								"accounts",
								":account_id",
								"resources"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Create a Confluent resource for the account associated with the provided ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"id\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete resource from Confluent account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"confluent-cloud",
								"accounts",
								":account_id",
								"resources",
								":resource_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								},
								{
									"key": "resource_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a Confluent resource with the provided resource id for the account associated with the provided account ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get resource from Confluent account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"confluent-cloud",
								"accounts",
								":account_id",
								"resources",
								":resource_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								},
								{
									"key": "resource_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a Confluent resource with the provided resource id for the account associated with the provided account ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"id\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update resource in Confluent account",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"confluent-cloud",
								"accounts",
								":account_id",
								"resources",
								":resource_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								},
								{
									"key": "resource_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a Confluent resource with the provided resource id for the account associated with the provided account ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"id\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_type\": \"<string>\",\n      \"enable_custom_metrics\": false,\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"confluent-cloud-resources\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/confluent-cloud/accounts/:account_id/resources/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"confluent-cloud",
										"accounts",
										":account_id",
										"resources",
										":resource_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Configure your Datadog Confluent Cloud integration directly through the Datadog API."
		},
		{
			"name": "Dashboards",
			"item": [
				{
					"name": "Delete dashboards",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": \"123-abc-456\",\n      \"type\": \"dashboard\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard"
							]
						},
						"description": "Delete dashboards using the specified IDs. If there are any failures, no dashboards will be deleted (partial success is not allowed)."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"id\": \"123-abc-456\",\n      \"type\": \"dashboard\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"id\": \"123-abc-456\",\n      \"type\": \"dashboard\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"id\": \"123-abc-456\",\n      \"type\": \"dashboard\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Dashboards Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"id\": \"123-abc-456\",\n      \"type\": \"dashboard\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"id\": \"123-abc-456\",\n      \"type\": \"dashboard\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all dashboards",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard?filter[shared]=false&filter[deleted]=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard"
							],
							"query": [
								{
									"key": "filter[shared]",
									"value": "false",
									"description": "When `true`, this query only returns shared custom created\nor cloned dashboards."
								},
								{
									"key": "filter[deleted]",
									"value": "false",
									"description": "When `true`, this query returns only deleted custom-created\nor cloned dashboards. This parameter is incompatible with `filter[shared]`."
								}
							]
						},
						"description": "Get all dashboards.\n\n**Note**: This query will only return custom created or cloned dashboards.\nThis query will not return preset dashboards."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard?filter[shared]=false&filter[deleted]=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									],
									"query": [
										{
											"key": "filter[shared]",
											"value": "false",
											"description": "When `true`, this query only returns shared custom created\nor cloned dashboards."
										},
										{
											"key": "filter[deleted]",
											"value": "false",
											"description": "When `true`, this query returns only deleted custom-created\nor cloned dashboards. This parameter is incompatible with `filter[shared]`."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"dashboards\": [\n    {\n      \"author_handle\": \"Duis tempor ex\",\n      \"created_at\": \"1963-12-20T01:10:02.870Z\",\n      \"description\": \"esse cillum laboris\",\n      \"id\": \"do Ut\",\n      \"is_read_only\": true,\n      \"layout_type\": \"ordered\",\n      \"modified_at\": \"1958-09-05T14:28:29.291Z\",\n      \"title\": \"nulla velit tempor\",\n      \"url\": \"quis laboris irure id\"\n    },\n    {\n      \"author_handle\": \"cup\",\n      \"created_at\": \"1992-05-21T18:14:01.464Z\",\n      \"description\": \"proident incididunt dolore\",\n      \"id\": \"in deserunt irure\",\n      \"is_read_only\": false,\n      \"layout_type\": \"ordered\",\n      \"modified_at\": \"1971-12-02T02:50:20.074Z\",\n      \"title\": \"ut dolor in consequat fugiat\",\n      \"url\": \"culpa Duis mollit\"\n    }\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard?filter[shared]=false&filter[deleted]=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									],
									"query": [
										{
											"key": "filter[shared]",
											"value": "false",
											"description": "When `true`, this query only returns shared custom created\nor cloned dashboards."
										},
										{
											"key": "filter[deleted]",
											"value": "false",
											"description": "When `true`, this query returns only deleted custom-created\nor cloned dashboards. This parameter is incompatible with `filter[shared]`."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard?filter[shared]=false&filter[deleted]=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									],
									"query": [
										{
											"key": "filter[shared]",
											"value": "false",
											"description": "When `true`, this query only returns shared custom created\nor cloned dashboards."
										},
										{
											"key": "filter[deleted]",
											"value": "false",
											"description": "When `true`, this query returns only deleted custom-created\nor cloned dashboards. This parameter is incompatible with `filter[shared]`."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Restore deleted dashboards",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": \"123-abc-456\",\n      \"type\": \"dashboard\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard"
							]
						},
						"description": "Restore dashboards using the specified IDs. If there are any failures, no dashboards will be restored (partial success is not allowed)."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"id\": \"123-abc-456\",\n      \"type\": \"dashboard\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"id\": \"123-abc-456\",\n      \"type\": \"dashboard\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"id\": \"123-abc-456\",\n      \"type\": \"dashboard\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Dashboards Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"id\": \"123-abc-456\",\n      \"type\": \"dashboard\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"id\": \"123-abc-456\",\n      \"type\": \"dashboard\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a new dashboard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"\",\n  \"layout_type\": \"ordered\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"nisi et cupidatat sunt\",\n        \"title_align\": \"right\",\n        \"title_size\": \"officia anim occaecat aliq\"\n      },\n      \"id\": 45068649,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": true\n      }\n    },\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"laborum dolor cillum ad\",\n        \"title_align\": \"center\",\n        \"title_size\": \"et\"\n      },\n      \"id\": -40196020,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": false\n      }\n    }\n  ],\n  \"author_handle\": \"test@datadoghq.com\",\n  \"author_name\": \"John Doe\",\n  \"created_at\": \"2017-08-17T07:10:36.438Z\",\n  \"description\": \"eiusmod do est velit enim\",\n  \"id\": \"123-abc-456\",\n  \"is_read_only\": false,\n  \"modified_at\": \"1996-07-08T08:32:43.112Z\",\n  \"notify_list\": [\n    \"commodo voluptate eu\",\n    \"consectetur amet\"\n  ],\n  \"reflow_type\": \"fixed\",\n  \"restricted_roles\": [\n    \"id cupidatat\",\n    \"quis ullamco\"\n  ],\n  \"tags\": [\n    \"quis qui mollit ex\",\n    \"ullamco enim cupidatat\"\n  ],\n  \"template_variable_presets\": [\n    {\n      \"name\": \"Lorem ex enim\",\n      \"template_variables\": [\n        {\n          \"name\": \"sed \",\n          \"value\": \"quis eu\",\n          \"values\": [\n            \"in\"\n          ]\n        },\n        {\n          \"name\": \"non\",\n          \"value\": \"ea dolore esse elit Lorem\",\n          \"values\": [\n            \"sed voluptate nulla\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"est \",\n      \"template_variables\": [\n        {\n          \"name\": \"ullamco sint\",\n          \"value\": \"ad ex irure\",\n          \"values\": [\n            \"Duis elit dolor\"\n          ]\n        },\n        {\n          \"name\": \"proident adipisicing culpa cons\",\n          \"value\": \"occaecat\",\n          \"values\": [\n            \"esse fugiat\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"template_variables\": [\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    },\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    }\n  ],\n  \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard"
							]
						},
						"description": "Create a dashboard using the specified options. When defining queries in your widgets, take note of which queries should have the `as_count()` or `as_rate()` modifiers appended.\nRefer to the following [documentation](https://docs.datadoghq.com/developers/metrics/type_modifiers/?tab=count#in-application-modifiers) for more information on these modifiers."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"\",\n  \"layout_type\": \"ordered\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"nisi et cupidatat sunt\",\n        \"title_align\": \"right\",\n        \"title_size\": \"officia anim occaecat aliq\"\n      },\n      \"id\": 45068649,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": true\n      }\n    },\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"laborum dolor cillum ad\",\n        \"title_align\": \"center\",\n        \"title_size\": \"et\"\n      },\n      \"id\": -40196020,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": false\n      }\n    }\n  ],\n  \"author_handle\": \"test@datadoghq.com\",\n  \"author_name\": \"John Doe\",\n  \"created_at\": \"2017-08-17T07:10:36.438Z\",\n  \"description\": \"eiusmod do est velit enim\",\n  \"id\": \"123-abc-456\",\n  \"is_read_only\": false,\n  \"modified_at\": \"1996-07-08T08:32:43.112Z\",\n  \"notify_list\": [\n    \"commodo voluptate eu\",\n    \"consectetur amet\"\n  ],\n  \"reflow_type\": \"fixed\",\n  \"restricted_roles\": [\n    \"id cupidatat\",\n    \"quis ullamco\"\n  ],\n  \"tags\": [\n    \"quis qui mollit ex\",\n    \"ullamco enim cupidatat\"\n  ],\n  \"template_variable_presets\": [\n    {\n      \"name\": \"Lorem ex enim\",\n      \"template_variables\": [\n        {\n          \"name\": \"sed \",\n          \"value\": \"quis eu\",\n          \"values\": [\n            \"in\"\n          ]\n        },\n        {\n          \"name\": \"non\",\n          \"value\": \"ea dolore esse elit Lorem\",\n          \"values\": [\n            \"sed voluptate nulla\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"est \",\n      \"template_variables\": [\n        {\n          \"name\": \"ullamco sint\",\n          \"value\": \"ad ex irure\",\n          \"values\": [\n            \"Duis elit dolor\"\n          ]\n        },\n        {\n          \"name\": \"proident adipisicing culpa cons\",\n          \"value\": \"occaecat\",\n          \"values\": [\n            \"esse fugiat\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"template_variables\": [\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    },\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    }\n  ],\n  \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"title\": \"\",\n  \"layout_type\": \"ordered\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"nisi et cupidatat sunt\",\n        \"title_align\": \"right\",\n        \"title_size\": \"officia anim occaecat aliq\"\n      },\n      \"id\": 45068649,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": true\n      }\n    },\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"laborum dolor cillum ad\",\n        \"title_align\": \"center\",\n        \"title_size\": \"et\"\n      },\n      \"id\": -40196020,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": false\n      }\n    }\n  ],\n  \"author_handle\": \"test@datadoghq.com\",\n  \"author_name\": \"John Doe\",\n  \"created_at\": \"2017-08-17T07:10:36.438Z\",\n  \"description\": \"eiusmod do est velit enim\",\n  \"id\": \"123-abc-456\",\n  \"is_read_only\": false,\n  \"modified_at\": \"1996-07-08T08:32:43.112Z\",\n  \"notify_list\": [\n    \"commodo voluptate eu\",\n    \"consectetur amet\"\n  ],\n  \"reflow_type\": \"fixed\",\n  \"restricted_roles\": [\n    \"id cupidatat\",\n    \"quis ullamco\"\n  ],\n  \"tags\": [\n    \"quis qui mollit ex\",\n    \"ullamco enim cupidatat\"\n  ],\n  \"template_variable_presets\": [\n    {\n      \"name\": \"Lorem ex enim\",\n      \"template_variables\": [\n        {\n          \"name\": \"sed \",\n          \"value\": \"quis eu\",\n          \"values\": [\n            \"in\"\n          ]\n        },\n        {\n          \"name\": \"non\",\n          \"value\": \"ea dolore esse elit Lorem\",\n          \"values\": [\n            \"sed voluptate nulla\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"est \",\n      \"template_variables\": [\n        {\n          \"name\": \"ullamco sint\",\n          \"value\": \"ad ex irure\",\n          \"values\": [\n            \"Duis elit dolor\"\n          ]\n        },\n        {\n          \"name\": \"proident adipisicing culpa cons\",\n          \"value\": \"occaecat\",\n          \"values\": [\n            \"esse fugiat\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"template_variables\": [\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    },\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    }\n  ],\n  \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"\",\n  \"layout_type\": \"ordered\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"nisi et cupidatat sunt\",\n        \"title_align\": \"right\",\n        \"title_size\": \"officia anim occaecat aliq\"\n      },\n      \"id\": 45068649,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": true\n      }\n    },\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"laborum dolor cillum ad\",\n        \"title_align\": \"center\",\n        \"title_size\": \"et\"\n      },\n      \"id\": -40196020,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": false\n      }\n    }\n  ],\n  \"author_handle\": \"test@datadoghq.com\",\n  \"author_name\": \"John Doe\",\n  \"created_at\": \"2017-08-17T07:10:36.438Z\",\n  \"description\": \"eiusmod do est velit enim\",\n  \"id\": \"123-abc-456\",\n  \"is_read_only\": false,\n  \"modified_at\": \"1996-07-08T08:32:43.112Z\",\n  \"notify_list\": [\n    \"commodo voluptate eu\",\n    \"consectetur amet\"\n  ],\n  \"reflow_type\": \"fixed\",\n  \"restricted_roles\": [\n    \"id cupidatat\",\n    \"quis ullamco\"\n  ],\n  \"tags\": [\n    \"quis qui mollit ex\",\n    \"ullamco enim cupidatat\"\n  ],\n  \"template_variable_presets\": [\n    {\n      \"name\": \"Lorem ex enim\",\n      \"template_variables\": [\n        {\n          \"name\": \"sed \",\n          \"value\": \"quis eu\",\n          \"values\": [\n            \"in\"\n          ]\n        },\n        {\n          \"name\": \"non\",\n          \"value\": \"ea dolore esse elit Lorem\",\n          \"values\": [\n            \"sed voluptate nulla\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"est \",\n      \"template_variables\": [\n        {\n          \"name\": \"ullamco sint\",\n          \"value\": \"ad ex irure\",\n          \"values\": [\n            \"Duis elit dolor\"\n          ]\n        },\n        {\n          \"name\": \"proident adipisicing culpa cons\",\n          \"value\": \"occaecat\",\n          \"values\": [\n            \"esse fugiat\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"template_variables\": [\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    },\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    }\n  ],\n  \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"\",\n  \"layout_type\": \"ordered\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"nisi et cupidatat sunt\",\n        \"title_align\": \"right\",\n        \"title_size\": \"officia anim occaecat aliq\"\n      },\n      \"id\": 45068649,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": true\n      }\n    },\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"laborum dolor cillum ad\",\n        \"title_align\": \"center\",\n        \"title_size\": \"et\"\n      },\n      \"id\": -40196020,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": false\n      }\n    }\n  ],\n  \"author_handle\": \"test@datadoghq.com\",\n  \"author_name\": \"John Doe\",\n  \"created_at\": \"2017-08-17T07:10:36.438Z\",\n  \"description\": \"eiusmod do est velit enim\",\n  \"id\": \"123-abc-456\",\n  \"is_read_only\": false,\n  \"modified_at\": \"1996-07-08T08:32:43.112Z\",\n  \"notify_list\": [\n    \"commodo voluptate eu\",\n    \"consectetur amet\"\n  ],\n  \"reflow_type\": \"fixed\",\n  \"restricted_roles\": [\n    \"id cupidatat\",\n    \"quis ullamco\"\n  ],\n  \"tags\": [\n    \"quis qui mollit ex\",\n    \"ullamco enim cupidatat\"\n  ],\n  \"template_variable_presets\": [\n    {\n      \"name\": \"Lorem ex enim\",\n      \"template_variables\": [\n        {\n          \"name\": \"sed \",\n          \"value\": \"quis eu\",\n          \"values\": [\n            \"in\"\n          ]\n        },\n        {\n          \"name\": \"non\",\n          \"value\": \"ea dolore esse elit Lorem\",\n          \"values\": [\n            \"sed voluptate nulla\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"est \",\n      \"template_variables\": [\n        {\n          \"name\": \"ullamco sint\",\n          \"value\": \"ad ex irure\",\n          \"values\": [\n            \"Duis elit dolor\"\n          ]\n        },\n        {\n          \"name\": \"proident adipisicing culpa cons\",\n          \"value\": \"occaecat\",\n          \"values\": [\n            \"esse fugiat\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"template_variables\": [\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    },\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    }\n  ],\n  \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"\",\n  \"layout_type\": \"ordered\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"nisi et cupidatat sunt\",\n        \"title_align\": \"right\",\n        \"title_size\": \"officia anim occaecat aliq\"\n      },\n      \"id\": 45068649,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": true\n      }\n    },\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"laborum dolor cillum ad\",\n        \"title_align\": \"center\",\n        \"title_size\": \"et\"\n      },\n      \"id\": -40196020,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": false\n      }\n    }\n  ],\n  \"author_handle\": \"test@datadoghq.com\",\n  \"author_name\": \"John Doe\",\n  \"created_at\": \"2017-08-17T07:10:36.438Z\",\n  \"description\": \"eiusmod do est velit enim\",\n  \"id\": \"123-abc-456\",\n  \"is_read_only\": false,\n  \"modified_at\": \"1996-07-08T08:32:43.112Z\",\n  \"notify_list\": [\n    \"commodo voluptate eu\",\n    \"consectetur amet\"\n  ],\n  \"reflow_type\": \"fixed\",\n  \"restricted_roles\": [\n    \"id cupidatat\",\n    \"quis ullamco\"\n  ],\n  \"tags\": [\n    \"quis qui mollit ex\",\n    \"ullamco enim cupidatat\"\n  ],\n  \"template_variable_presets\": [\n    {\n      \"name\": \"Lorem ex enim\",\n      \"template_variables\": [\n        {\n          \"name\": \"sed \",\n          \"value\": \"quis eu\",\n          \"values\": [\n            \"in\"\n          ]\n        },\n        {\n          \"name\": \"non\",\n          \"value\": \"ea dolore esse elit Lorem\",\n          \"values\": [\n            \"sed voluptate nulla\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"est \",\n      \"template_variables\": [\n        {\n          \"name\": \"ullamco sint\",\n          \"value\": \"ad ex irure\",\n          \"values\": [\n            \"Duis elit dolor\"\n          ]\n        },\n        {\n          \"name\": \"proident adipisicing culpa cons\",\n          \"value\": \"occaecat\",\n          \"values\": [\n            \"esse fugiat\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"template_variables\": [\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    },\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    }\n  ],\n  \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a shared dashboard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dashboard_id\": \"123-abc-456\",\n  \"dashboard_type\": \"custom_timeboard\",\n  \"share_type\": \"open\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/public",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"public"
							]
						},
						"description": "Share a specified private dashboard, generating a URL at which it can be publicly viewed."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboard_id\": \"123-abc-456\",\n  \"dashboard_type\": \"custom_timeboard\",\n  \"share_type\": \"open\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"dashboard_id\": \"123-abc-456\",\n  \"dashboard_type\": \"custom_timeboard\",\n  \"author\": {\n    \"handle\": \"test@datadoghq.com\",\n    \"name\": \"consequat irure sit\"\n  },\n  \"created_at\": \"2008-04-06T04:45:45.510Z\",\n  \"global_time\": {\n    \"live_span\": \"1h\"\n  },\n  \"global_time_selectable_enabled\": false,\n  \"public_url\": \"fugiat esse mollit adipisicing\",\n  \"selectable_template_vars\": [\n    {\n      \"default_value\": \"*\",\n      \"name\": \"exampleVar\",\n      \"prefix\": \"test\",\n      \"visible_tags\": [\n        \"selectableValue1\",\n        \"selectableValue2\"\n      ]\n    }\n  ],\n  \"share_list\": [\n    \"test@datadoghq.com\",\n    \"test2@email.com\"\n  ],\n  \"share_type\": \"open\",\n  \"token\": \"dolor fugiat consectetur ex\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboard_id\": \"123-abc-456\",\n  \"dashboard_type\": \"custom_timeboard\",\n  \"share_type\": \"open\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboard_id\": \"123-abc-456\",\n  \"dashboard_type\": \"custom_timeboard\",\n  \"share_type\": \"open\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Dashboard Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboard_id\": \"123-abc-456\",\n  \"dashboard_type\": \"custom_timeboard\",\n  \"share_type\": \"open\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboard_id\": \"123-abc-456\",\n  \"dashboard_type\": \"custom_timeboard\",\n  \"share_type\": \"open\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Revoke a shared dashboard URL",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"public",
								":token"
							],
							"variable": [
								{
									"key": "token",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Revoke the public URL for a dashboard (rendering it private) associated with the specified token."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deleted_public_dashboard_token\": \"sunt proident magna veniam\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Shared Dashboard Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a shared dashboard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"public",
								":token"
							],
							"variable": [
								{
									"key": "token",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Fetch an existing shared dashboard's sharing metadata associated with the specified token."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"dashboard_id\": \"123-abc-456\",\n  \"dashboard_type\": \"custom_timeboard\",\n  \"author\": {\n    \"handle\": \"test@datadoghq.com\",\n    \"name\": \"consequat irure sit\"\n  },\n  \"created_at\": \"2008-04-06T04:45:45.510Z\",\n  \"global_time\": {\n    \"live_span\": \"1h\"\n  },\n  \"global_time_selectable_enabled\": false,\n  \"public_url\": \"fugiat esse mollit adipisicing\",\n  \"selectable_template_vars\": [\n    {\n      \"default_value\": \"*\",\n      \"name\": \"exampleVar\",\n      \"prefix\": \"test\",\n      \"visible_tags\": [\n        \"selectableValue1\",\n        \"selectableValue2\"\n      ]\n    }\n  ],\n  \"share_list\": [\n    \"test@datadoghq.com\",\n    \"test2@email.com\"\n  ],\n  \"share_type\": \"open\",\n  \"token\": \"dolor fugiat consectetur ex\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Shared Dashboard Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a shared dashboard",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"global_time\": {\n    \"live_span\": \"1h\"\n  },\n  \"share_list\": [\n    \"test@datadoghq.com\",\n    \"test2@datadoghq.com\"\n  ],\n  \"share_type\": \"invite\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"public",
								":token"
							],
							"variable": [
								{
									"key": "token",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Update a shared dashboard associated with the specified token."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"global_time\": {\n    \"live_span\": \"1h\"\n  },\n  \"share_list\": [\n    \"test@datadoghq.com\",\n    \"test2@datadoghq.com\"\n  ],\n  \"share_type\": \"invite\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"dashboard_id\": \"123-abc-456\",\n  \"dashboard_type\": \"custom_timeboard\",\n  \"author\": {\n    \"handle\": \"test@datadoghq.com\",\n    \"name\": \"consequat irure sit\"\n  },\n  \"created_at\": \"2008-04-06T04:45:45.510Z\",\n  \"global_time\": {\n    \"live_span\": \"1h\"\n  },\n  \"global_time_selectable_enabled\": false,\n  \"public_url\": \"fugiat esse mollit adipisicing\",\n  \"selectable_template_vars\": [\n    {\n      \"default_value\": \"*\",\n      \"name\": \"exampleVar\",\n      \"prefix\": \"test\",\n      \"visible_tags\": [\n        \"selectableValue1\",\n        \"selectableValue2\"\n      ]\n    }\n  ],\n  \"share_list\": [\n    \"test@datadoghq.com\",\n    \"test2@email.com\"\n  ],\n  \"share_type\": \"open\",\n  \"token\": \"dolor fugiat consectetur ex\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"global_time\": {\n    \"live_span\": \"1h\"\n  },\n  \"share_list\": [\n    \"test@datadoghq.com\",\n    \"test2@datadoghq.com\"\n  ],\n  \"share_type\": \"invite\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"global_time\": {\n    \"live_span\": \"1h\"\n  },\n  \"share_list\": [\n    \"test@datadoghq.com\",\n    \"test2@datadoghq.com\"\n  ],\n  \"share_type\": \"invite\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"global_time\": {\n    \"live_span\": \"1h\"\n  },\n  \"share_list\": [\n    \"test@datadoghq.com\",\n    \"test2@datadoghq.com\"\n  ],\n  \"share_type\": \"invite\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"global_time\": {\n    \"live_span\": \"1h\"\n  },\n  \"share_list\": [\n    \"test@datadoghq.com\",\n    \"test2@datadoghq.com\"\n  ],\n  \"share_type\": \"invite\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Revoke shared dashboard invitations",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"email\": \"test@datadoghq.com\"\n      },\n      \"type\": \"public_dashboard_invitation\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"public",
								":token",
								"invitation"
							],
							"variable": [
								{
									"key": "token",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Revoke previously sent invitation emails and active sessions used to access a given shared dashboard for specific email addresses."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"email\": \"test@datadoghq.com\"\n      },\n      \"type\": \"public_dashboard_invitation\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"email\": \"test@datadoghq.com\"\n      },\n      \"type\": \"public_dashboard_invitation\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"email\": \"test@datadoghq.com\"\n      },\n      \"type\": \"public_dashboard_invitation\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"email\": \"test@datadoghq.com\"\n      },\n      \"type\": \"public_dashboard_invitation\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all invitations for a shared dashboard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation?page_size=-62147425&page_number=-62147425",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"public",
								":token",
								"invitation"
							],
							"query": [
								{
									"key": "page_size",
									"value": "-62147425",
									"description": "The number of records to return in a single request."
								},
								{
									"key": "page_number",
									"value": "-62147425",
									"description": "The page to access (base 0)."
								}
							],
							"variable": [
								{
									"key": "token",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Describe the invitations that exist for the given shared dashboard (paginated)."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation?page_size=-62147425&page_number=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"query": [
										{
											"key": "page_size",
											"value": "-62147425",
											"description": "The number of records to return in a single request."
										},
										{
											"key": "page_number",
											"value": "-62147425",
											"description": "The page to access (base 0)."
										}
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"email\": \"test@datadoghq.com\"\n      },\n      \"type\": \"public_dashboard_invitation\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation?page_size=-62147425&page_number=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"query": [
										{
											"key": "page_size",
											"value": "-62147425",
											"description": "The number of records to return in a single request."
										},
										{
											"key": "page_number",
											"value": "-62147425",
											"description": "The page to access (base 0)."
										}
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation?page_size=-62147425&page_number=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"query": [
										{
											"key": "page_size",
											"value": "-62147425",
											"description": "The number of records to return in a single request."
										},
										{
											"key": "page_number",
											"value": "-62147425",
											"description": "The page to access (base 0)."
										}
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation?page_size=-62147425&page_number=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"query": [
										{
											"key": "page_size",
											"value": "-62147425",
											"description": "The number of records to return in a single request."
										},
										{
											"key": "page_number",
											"value": "-62147425",
											"description": "The page to access (base 0)."
										}
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Send shared dashboard invitation email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"email\": \"test@datadoghq.com\"\n      },\n      \"type\": \"public_dashboard_invitation\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"public",
								":token",
								"invitation"
							],
							"variable": [
								{
									"key": "token",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Send emails to specified email addresses containing links to access a given authenticated shared dashboard. Email addresses must already belong to the authenticated shared dashboard's share_list."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"email\": \"test@datadoghq.com\"\n      },\n      \"type\": \"public_dashboard_invitation\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"email\": \"test@datadoghq.com\"\n      },\n      \"type\": \"public_dashboard_invitation\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"email\": \"test@datadoghq.com\"\n      },\n      \"type\": \"public_dashboard_invitation\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"email\": \"test@datadoghq.com\"\n      },\n      \"type\": \"public_dashboard_invitation\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"email\": \"test@datadoghq.com\"\n      },\n      \"type\": \"public_dashboard_invitation\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"email\": \"test@datadoghq.com\"\n      },\n      \"type\": \"public_dashboard_invitation\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a dashboard",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":dashboard_id"
							],
							"variable": [
								{
									"key": "dashboard_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Delete a dashboard using the specified ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deleted_dashboard_id\": \"exercitation\"\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Dashboards Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a dashboard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":dashboard_id"
							],
							"variable": [
								{
									"key": "dashboard_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get a dashboard using the specified ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"title\": \"\",\n  \"layout_type\": \"ordered\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"nisi et cupidatat sunt\",\n        \"title_align\": \"right\",\n        \"title_size\": \"officia anim occaecat aliq\"\n      },\n      \"id\": 45068649,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": true\n      }\n    },\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"laborum dolor cillum ad\",\n        \"title_align\": \"center\",\n        \"title_size\": \"et\"\n      },\n      \"id\": -40196020,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": false\n      }\n    }\n  ],\n  \"author_handle\": \"test@datadoghq.com\",\n  \"author_name\": \"John Doe\",\n  \"created_at\": \"2017-08-17T07:10:36.438Z\",\n  \"description\": \"eiusmod do est velit enim\",\n  \"id\": \"123-abc-456\",\n  \"is_read_only\": false,\n  \"modified_at\": \"1996-07-08T08:32:43.112Z\",\n  \"notify_list\": [\n    \"commodo voluptate eu\",\n    \"consectetur amet\"\n  ],\n  \"reflow_type\": \"fixed\",\n  \"restricted_roles\": [\n    \"id cupidatat\",\n    \"quis ullamco\"\n  ],\n  \"tags\": [\n    \"quis qui mollit ex\",\n    \"ullamco enim cupidatat\"\n  ],\n  \"template_variable_presets\": [\n    {\n      \"name\": \"Lorem ex enim\",\n      \"template_variables\": [\n        {\n          \"name\": \"sed \",\n          \"value\": \"quis eu\",\n          \"values\": [\n            \"in\"\n          ]\n        },\n        {\n          \"name\": \"non\",\n          \"value\": \"ea dolore esse elit Lorem\",\n          \"values\": [\n            \"sed voluptate nulla\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"est \",\n      \"template_variables\": [\n        {\n          \"name\": \"ullamco sint\",\n          \"value\": \"ad ex irure\",\n          \"values\": [\n            \"Duis elit dolor\"\n          ]\n        },\n        {\n          \"name\": \"proident adipisicing culpa cons\",\n          \"value\": \"occaecat\",\n          \"values\": [\n            \"esse fugiat\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"template_variables\": [\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    },\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    }\n  ],\n  \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a dashboard",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"\",\n  \"layout_type\": \"ordered\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"nisi et cupidatat sunt\",\n        \"title_align\": \"right\",\n        \"title_size\": \"officia anim occaecat aliq\"\n      },\n      \"id\": 45068649,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": true\n      }\n    },\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"laborum dolor cillum ad\",\n        \"title_align\": \"center\",\n        \"title_size\": \"et\"\n      },\n      \"id\": -40196020,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": false\n      }\n    }\n  ],\n  \"author_handle\": \"test@datadoghq.com\",\n  \"author_name\": \"John Doe\",\n  \"created_at\": \"2017-08-17T07:10:36.438Z\",\n  \"description\": \"eiusmod do est velit enim\",\n  \"id\": \"123-abc-456\",\n  \"is_read_only\": false,\n  \"modified_at\": \"1996-07-08T08:32:43.112Z\",\n  \"notify_list\": [\n    \"commodo voluptate eu\",\n    \"consectetur amet\"\n  ],\n  \"reflow_type\": \"fixed\",\n  \"restricted_roles\": [\n    \"id cupidatat\",\n    \"quis ullamco\"\n  ],\n  \"tags\": [\n    \"quis qui mollit ex\",\n    \"ullamco enim cupidatat\"\n  ],\n  \"template_variable_presets\": [\n    {\n      \"name\": \"Lorem ex enim\",\n      \"template_variables\": [\n        {\n          \"name\": \"sed \",\n          \"value\": \"quis eu\",\n          \"values\": [\n            \"in\"\n          ]\n        },\n        {\n          \"name\": \"non\",\n          \"value\": \"ea dolore esse elit Lorem\",\n          \"values\": [\n            \"sed voluptate nulla\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"est \",\n      \"template_variables\": [\n        {\n          \"name\": \"ullamco sint\",\n          \"value\": \"ad ex irure\",\n          \"values\": [\n            \"Duis elit dolor\"\n          ]\n        },\n        {\n          \"name\": \"proident adipisicing culpa cons\",\n          \"value\": \"occaecat\",\n          \"values\": [\n            \"esse fugiat\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"template_variables\": [\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    },\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    }\n  ],\n  \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":dashboard_id"
							],
							"variable": [
								{
									"key": "dashboard_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Update a dashboard using the specified ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"\",\n  \"layout_type\": \"ordered\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"nisi et cupidatat sunt\",\n        \"title_align\": \"right\",\n        \"title_size\": \"officia anim occaecat aliq\"\n      },\n      \"id\": 45068649,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": true\n      }\n    },\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"laborum dolor cillum ad\",\n        \"title_align\": \"center\",\n        \"title_size\": \"et\"\n      },\n      \"id\": -40196020,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": false\n      }\n    }\n  ],\n  \"author_handle\": \"test@datadoghq.com\",\n  \"author_name\": \"John Doe\",\n  \"created_at\": \"2017-08-17T07:10:36.438Z\",\n  \"description\": \"eiusmod do est velit enim\",\n  \"id\": \"123-abc-456\",\n  \"is_read_only\": false,\n  \"modified_at\": \"1996-07-08T08:32:43.112Z\",\n  \"notify_list\": [\n    \"commodo voluptate eu\",\n    \"consectetur amet\"\n  ],\n  \"reflow_type\": \"fixed\",\n  \"restricted_roles\": [\n    \"id cupidatat\",\n    \"quis ullamco\"\n  ],\n  \"tags\": [\n    \"quis qui mollit ex\",\n    \"ullamco enim cupidatat\"\n  ],\n  \"template_variable_presets\": [\n    {\n      \"name\": \"Lorem ex enim\",\n      \"template_variables\": [\n        {\n          \"name\": \"sed \",\n          \"value\": \"quis eu\",\n          \"values\": [\n            \"in\"\n          ]\n        },\n        {\n          \"name\": \"non\",\n          \"value\": \"ea dolore esse elit Lorem\",\n          \"values\": [\n            \"sed voluptate nulla\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"est \",\n      \"template_variables\": [\n        {\n          \"name\": \"ullamco sint\",\n          \"value\": \"ad ex irure\",\n          \"values\": [\n            \"Duis elit dolor\"\n          ]\n        },\n        {\n          \"name\": \"proident adipisicing culpa cons\",\n          \"value\": \"occaecat\",\n          \"values\": [\n            \"esse fugiat\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"template_variables\": [\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    },\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    }\n  ],\n  \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"title\": \"\",\n  \"layout_type\": \"ordered\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"nisi et cupidatat sunt\",\n        \"title_align\": \"right\",\n        \"title_size\": \"officia anim occaecat aliq\"\n      },\n      \"id\": 45068649,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": true\n      }\n    },\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"laborum dolor cillum ad\",\n        \"title_align\": \"center\",\n        \"title_size\": \"et\"\n      },\n      \"id\": -40196020,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": false\n      }\n    }\n  ],\n  \"author_handle\": \"test@datadoghq.com\",\n  \"author_name\": \"John Doe\",\n  \"created_at\": \"2017-08-17T07:10:36.438Z\",\n  \"description\": \"eiusmod do est velit enim\",\n  \"id\": \"123-abc-456\",\n  \"is_read_only\": false,\n  \"modified_at\": \"1996-07-08T08:32:43.112Z\",\n  \"notify_list\": [\n    \"commodo voluptate eu\",\n    \"consectetur amet\"\n  ],\n  \"reflow_type\": \"fixed\",\n  \"restricted_roles\": [\n    \"id cupidatat\",\n    \"quis ullamco\"\n  ],\n  \"tags\": [\n    \"quis qui mollit ex\",\n    \"ullamco enim cupidatat\"\n  ],\n  \"template_variable_presets\": [\n    {\n      \"name\": \"Lorem ex enim\",\n      \"template_variables\": [\n        {\n          \"name\": \"sed \",\n          \"value\": \"quis eu\",\n          \"values\": [\n            \"in\"\n          ]\n        },\n        {\n          \"name\": \"non\",\n          \"value\": \"ea dolore esse elit Lorem\",\n          \"values\": [\n            \"sed voluptate nulla\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"est \",\n      \"template_variables\": [\n        {\n          \"name\": \"ullamco sint\",\n          \"value\": \"ad ex irure\",\n          \"values\": [\n            \"Duis elit dolor\"\n          ]\n        },\n        {\n          \"name\": \"proident adipisicing culpa cons\",\n          \"value\": \"occaecat\",\n          \"values\": [\n            \"esse fugiat\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"template_variables\": [\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    },\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    }\n  ],\n  \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"\",\n  \"layout_type\": \"ordered\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"nisi et cupidatat sunt\",\n        \"title_align\": \"right\",\n        \"title_size\": \"officia anim occaecat aliq\"\n      },\n      \"id\": 45068649,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": true\n      }\n    },\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"laborum dolor cillum ad\",\n        \"title_align\": \"center\",\n        \"title_size\": \"et\"\n      },\n      \"id\": -40196020,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": false\n      }\n    }\n  ],\n  \"author_handle\": \"test@datadoghq.com\",\n  \"author_name\": \"John Doe\",\n  \"created_at\": \"2017-08-17T07:10:36.438Z\",\n  \"description\": \"eiusmod do est velit enim\",\n  \"id\": \"123-abc-456\",\n  \"is_read_only\": false,\n  \"modified_at\": \"1996-07-08T08:32:43.112Z\",\n  \"notify_list\": [\n    \"commodo voluptate eu\",\n    \"consectetur amet\"\n  ],\n  \"reflow_type\": \"fixed\",\n  \"restricted_roles\": [\n    \"id cupidatat\",\n    \"quis ullamco\"\n  ],\n  \"tags\": [\n    \"quis qui mollit ex\",\n    \"ullamco enim cupidatat\"\n  ],\n  \"template_variable_presets\": [\n    {\n      \"name\": \"Lorem ex enim\",\n      \"template_variables\": [\n        {\n          \"name\": \"sed \",\n          \"value\": \"quis eu\",\n          \"values\": [\n            \"in\"\n          ]\n        },\n        {\n          \"name\": \"non\",\n          \"value\": \"ea dolore esse elit Lorem\",\n          \"values\": [\n            \"sed voluptate nulla\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"est \",\n      \"template_variables\": [\n        {\n          \"name\": \"ullamco sint\",\n          \"value\": \"ad ex irure\",\n          \"values\": [\n            \"Duis elit dolor\"\n          ]\n        },\n        {\n          \"name\": \"proident adipisicing culpa cons\",\n          \"value\": \"occaecat\",\n          \"values\": [\n            \"esse fugiat\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"template_variables\": [\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    },\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    }\n  ],\n  \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"\",\n  \"layout_type\": \"ordered\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"nisi et cupidatat sunt\",\n        \"title_align\": \"right\",\n        \"title_size\": \"officia anim occaecat aliq\"\n      },\n      \"id\": 45068649,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": true\n      }\n    },\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"laborum dolor cillum ad\",\n        \"title_align\": \"center\",\n        \"title_size\": \"et\"\n      },\n      \"id\": -40196020,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": false\n      }\n    }\n  ],\n  \"author_handle\": \"test@datadoghq.com\",\n  \"author_name\": \"John Doe\",\n  \"created_at\": \"2017-08-17T07:10:36.438Z\",\n  \"description\": \"eiusmod do est velit enim\",\n  \"id\": \"123-abc-456\",\n  \"is_read_only\": false,\n  \"modified_at\": \"1996-07-08T08:32:43.112Z\",\n  \"notify_list\": [\n    \"commodo voluptate eu\",\n    \"consectetur amet\"\n  ],\n  \"reflow_type\": \"fixed\",\n  \"restricted_roles\": [\n    \"id cupidatat\",\n    \"quis ullamco\"\n  ],\n  \"tags\": [\n    \"quis qui mollit ex\",\n    \"ullamco enim cupidatat\"\n  ],\n  \"template_variable_presets\": [\n    {\n      \"name\": \"Lorem ex enim\",\n      \"template_variables\": [\n        {\n          \"name\": \"sed \",\n          \"value\": \"quis eu\",\n          \"values\": [\n            \"in\"\n          ]\n        },\n        {\n          \"name\": \"non\",\n          \"value\": \"ea dolore esse elit Lorem\",\n          \"values\": [\n            \"sed voluptate nulla\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"est \",\n      \"template_variables\": [\n        {\n          \"name\": \"ullamco sint\",\n          \"value\": \"ad ex irure\",\n          \"values\": [\n            \"Duis elit dolor\"\n          ]\n        },\n        {\n          \"name\": \"proident adipisicing culpa cons\",\n          \"value\": \"occaecat\",\n          \"values\": [\n            \"esse fugiat\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"template_variables\": [\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    },\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    }\n  ],\n  \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"\",\n  \"layout_type\": \"ordered\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"nisi et cupidatat sunt\",\n        \"title_align\": \"right\",\n        \"title_size\": \"officia anim occaecat aliq\"\n      },\n      \"id\": 45068649,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": true\n      }\n    },\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"laborum dolor cillum ad\",\n        \"title_align\": \"center\",\n        \"title_size\": \"et\"\n      },\n      \"id\": -40196020,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": false\n      }\n    }\n  ],\n  \"author_handle\": \"test@datadoghq.com\",\n  \"author_name\": \"John Doe\",\n  \"created_at\": \"2017-08-17T07:10:36.438Z\",\n  \"description\": \"eiusmod do est velit enim\",\n  \"id\": \"123-abc-456\",\n  \"is_read_only\": false,\n  \"modified_at\": \"1996-07-08T08:32:43.112Z\",\n  \"notify_list\": [\n    \"commodo voluptate eu\",\n    \"consectetur amet\"\n  ],\n  \"reflow_type\": \"fixed\",\n  \"restricted_roles\": [\n    \"id cupidatat\",\n    \"quis ullamco\"\n  ],\n  \"tags\": [\n    \"quis qui mollit ex\",\n    \"ullamco enim cupidatat\"\n  ],\n  \"template_variable_presets\": [\n    {\n      \"name\": \"Lorem ex enim\",\n      \"template_variables\": [\n        {\n          \"name\": \"sed \",\n          \"value\": \"quis eu\",\n          \"values\": [\n            \"in\"\n          ]\n        },\n        {\n          \"name\": \"non\",\n          \"value\": \"ea dolore esse elit Lorem\",\n          \"values\": [\n            \"sed voluptate nulla\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"est \",\n      \"template_variables\": [\n        {\n          \"name\": \"ullamco sint\",\n          \"value\": \"ad ex irure\",\n          \"values\": [\n            \"Duis elit dolor\"\n          ]\n        },\n        {\n          \"name\": \"proident adipisicing culpa cons\",\n          \"value\": \"occaecat\",\n          \"values\": [\n            \"esse fugiat\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"template_variables\": [\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    },\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    }\n  ],\n  \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"\",\n  \"layout_type\": \"ordered\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"nisi et cupidatat sunt\",\n        \"title_align\": \"right\",\n        \"title_size\": \"officia anim occaecat aliq\"\n      },\n      \"id\": 45068649,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": true\n      }\n    },\n    {\n      \"definition\": {\n        \"type\": \"alert_graph\",\n        \"alert_id\": \"\",\n        \"viz_type\": \"timeseries\",\n        \"time\": {\n          \"live_span\": \"5m\"\n        },\n        \"title\": \"laborum dolor cillum ad\",\n        \"title_align\": \"center\",\n        \"title_size\": \"et\"\n      },\n      \"id\": -40196020,\n      \"layout\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 0,\n        \"height\": 0,\n        \"is_column_break\": false\n      }\n    }\n  ],\n  \"author_handle\": \"test@datadoghq.com\",\n  \"author_name\": \"John Doe\",\n  \"created_at\": \"2017-08-17T07:10:36.438Z\",\n  \"description\": \"eiusmod do est velit enim\",\n  \"id\": \"123-abc-456\",\n  \"is_read_only\": false,\n  \"modified_at\": \"1996-07-08T08:32:43.112Z\",\n  \"notify_list\": [\n    \"commodo voluptate eu\",\n    \"consectetur amet\"\n  ],\n  \"reflow_type\": \"fixed\",\n  \"restricted_roles\": [\n    \"id cupidatat\",\n    \"quis ullamco\"\n  ],\n  \"tags\": [\n    \"quis qui mollit ex\",\n    \"ullamco enim cupidatat\"\n  ],\n  \"template_variable_presets\": [\n    {\n      \"name\": \"Lorem ex enim\",\n      \"template_variables\": [\n        {\n          \"name\": \"sed \",\n          \"value\": \"quis eu\",\n          \"values\": [\n            \"in\"\n          ]\n        },\n        {\n          \"name\": \"non\",\n          \"value\": \"ea dolore esse elit Lorem\",\n          \"values\": [\n            \"sed voluptate nulla\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"est \",\n      \"template_variables\": [\n        {\n          \"name\": \"ullamco sint\",\n          \"value\": \"ad ex irure\",\n          \"values\": [\n            \"Duis elit dolor\"\n          ]\n        },\n        {\n          \"name\": \"proident adipisicing culpa cons\",\n          \"value\": \"occaecat\",\n          \"values\": [\n            \"esse fugiat\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"template_variables\": [\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    },\n    {\n      \"name\": \"host1\",\n      \"available_values\": [\n        \"my-host\",\n        \"host1\",\n        \"host2\"\n      ],\n      \"default\": \"my-host\",\n      \"defaults\": [\n        \"my-host-1\",\n        \"my-host-2\"\n      ],\n      \"prefix\": \"host\"\n    }\n  ],\n  \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Interact with your dashboard lists through the API to make it easier to organize,\nfind, and share all of your dashboards with your team and organization."
		},
		{
			"name": "Dashboard Lists",
			"item": [
				{
					"name": "Delete items from a dashboard list",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"host_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"integration_screenboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dashboard",
								"lists",
								"manual",
								":dashboard_list_id",
								"dashboards"
							],
							"variable": [
								{
									"key": "dashboard_list_id",
									"value": "<long>"
								}
							]
						},
						"description": "Delete dashboards from an existing dashboard list."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"host_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"integration_screenboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deleted_dashboards_from_list\": [\n    {\n      \"type\": \"custom_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"host_timeboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"host_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"integration_screenboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"host_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"integration_screenboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"host_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"integration_screenboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"host_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"integration_screenboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get items of a Dashboard List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dashboard",
								"lists",
								"manual",
								":dashboard_list_id",
								"dashboards"
							],
							"variable": [
								{
									"key": "dashboard_list_id",
									"value": "<long>"
								}
							]
						},
						"description": "Fetch the dashboard list’s dashboard definitions."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"dashboards\": [\n    {\n      \"type\": \"host_timeboard\",\n      \"id\": \"<string>\",\n      \"author\": {\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"created\": \"<dateTime>\",\n      \"icon\": \"<string>\",\n      \"integration_id\": \"<string>\",\n      \"is_favorite\": \"<boolean>\",\n      \"is_read_only\": \"<boolean>\",\n      \"is_shared\": \"<boolean>\",\n      \"modified\": \"<dateTime>\",\n      \"popularity\": \"<integer>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"title\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"type\": \"custom_screenboard\",\n      \"id\": \"<string>\",\n      \"author\": {\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"created\": \"<dateTime>\",\n      \"icon\": \"<string>\",\n      \"integration_id\": \"<string>\",\n      \"is_favorite\": \"<boolean>\",\n      \"is_read_only\": \"<boolean>\",\n      \"is_shared\": \"<boolean>\",\n      \"modified\": \"<dateTime>\",\n      \"popularity\": \"<integer>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"title\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"total\": \"<long>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Add Items to a Dashboard List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"custom_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"integration_timeboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dashboard",
								"lists",
								"manual",
								":dashboard_list_id",
								"dashboards"
							],
							"variable": [
								{
									"key": "dashboard_list_id",
									"value": "<long>"
								}
							]
						},
						"description": "Add dashboards to an existing dashboard list."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"custom_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"integration_timeboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"added_dashboards_to_list\": [\n    {\n      \"type\": \"integration_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"custom_timeboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"custom_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"integration_timeboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"custom_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"integration_timeboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"custom_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"integration_timeboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"custom_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"integration_timeboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update items of a dashboard list",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"integration_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"custom_screenboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dashboard",
								"lists",
								"manual",
								":dashboard_list_id",
								"dashboards"
							],
							"variable": [
								{
									"key": "dashboard_list_id",
									"value": "<long>"
								}
							]
						},
						"description": "Update dashboards of an existing dashboard list."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"integration_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"custom_screenboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"dashboards\": [\n    {\n      \"type\": \"custom_screenboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"host_timeboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"integration_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"custom_screenboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"integration_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"custom_screenboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"integration_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"custom_screenboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboards\": [\n    {\n      \"type\": \"integration_timeboard\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"custom_screenboard\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all dashboard lists",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual"
							]
						},
						"description": "Fetch all of your existing dashboard list definitions."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"dashboard_lists\": [\n    {\n      \"name\": \"My Dashboard\",\n      \"author\": {\n        \"email\": \"reprehenderit nostrud\",\n        \"handle\": \"qui officia tempor\",\n        \"name\": \"ex\"\n      },\n      \"created\": \"1963-08-11T12:15:03.407Z\",\n      \"dashboard_count\": -63891965,\n      \"id\": -37288260,\n      \"is_favorite\": true,\n      \"modified\": \"1993-02-16T23:18:05.785Z\",\n      \"type\": \"manual_dashboard_list\"\n    },\n    {\n      \"name\": \"My Dashboard\",\n      \"author\": {\n        \"email\": \"Duis reprehenderit est\",\n        \"handle\": \"consequat qui esse incididunt\",\n        \"name\": \"qui non ad\"\n      },\n      \"created\": \"2012-05-31T22:35:18.125Z\",\n      \"dashboard_count\": -45121707,\n      \"id\": -45358157,\n      \"is_favorite\": false,\n      \"modified\": \"1966-04-15T02:24:29.676Z\",\n      \"type\": \"manual_dashboard_list\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a dashboard list",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"My Dashboard\",\n  \"author\": {\n    \"email\": \"Excepteur id tempor cillum\",\n    \"handle\": \"culpa nostrud pariatur\",\n    \"name\": \"cillum minim\"\n  },\n  \"created\": \"1966-02-10T07:56:34.100Z\",\n  \"dashboard_count\": 38191328,\n  \"id\": 17219875,\n  \"is_favorite\": false,\n  \"modified\": \"1943-12-25T04:37:37.575Z\",\n  \"type\": \"manual_dashboard_list\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual"
							]
						},
						"description": "Create an empty dashboard list."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"My Dashboard\",\n  \"author\": {\n    \"email\": \"Excepteur id tempor cillum\",\n    \"handle\": \"culpa nostrud pariatur\",\n    \"name\": \"cillum minim\"\n  },\n  \"created\": \"1966-02-10T07:56:34.100Z\",\n  \"dashboard_count\": 38191328,\n  \"id\": 17219875,\n  \"is_favorite\": false,\n  \"modified\": \"1943-12-25T04:37:37.575Z\",\n  \"type\": \"manual_dashboard_list\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"My Dashboard\",\n  \"author\": {\n    \"email\": \"Excepteur id tempor cillum\",\n    \"handle\": \"culpa nostrud pariatur\",\n    \"name\": \"cillum minim\"\n  },\n  \"created\": \"1966-02-10T07:56:34.100Z\",\n  \"dashboard_count\": 38191328,\n  \"id\": 17219875,\n  \"is_favorite\": false,\n  \"modified\": \"1943-12-25T04:37:37.575Z\",\n  \"type\": \"manual_dashboard_list\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"My Dashboard\",\n  \"author\": {\n    \"email\": \"Excepteur id tempor cillum\",\n    \"handle\": \"culpa nostrud pariatur\",\n    \"name\": \"cillum minim\"\n  },\n  \"created\": \"1966-02-10T07:56:34.100Z\",\n  \"dashboard_count\": 38191328,\n  \"id\": 17219875,\n  \"is_favorite\": false,\n  \"modified\": \"1943-12-25T04:37:37.575Z\",\n  \"type\": \"manual_dashboard_list\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"My Dashboard\",\n  \"author\": {\n    \"email\": \"Excepteur id tempor cillum\",\n    \"handle\": \"culpa nostrud pariatur\",\n    \"name\": \"cillum minim\"\n  },\n  \"created\": \"1966-02-10T07:56:34.100Z\",\n  \"dashboard_count\": 38191328,\n  \"id\": 17219875,\n  \"is_favorite\": false,\n  \"modified\": \"1943-12-25T04:37:37.575Z\",\n  \"type\": \"manual_dashboard_list\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"My Dashboard\",\n  \"author\": {\n    \"email\": \"Excepteur id tempor cillum\",\n    \"handle\": \"culpa nostrud pariatur\",\n    \"name\": \"cillum minim\"\n  },\n  \"created\": \"1966-02-10T07:56:34.100Z\",\n  \"dashboard_count\": 38191328,\n  \"id\": 17219875,\n  \"is_favorite\": false,\n  \"modified\": \"1943-12-25T04:37:37.575Z\",\n  \"type\": \"manual_dashboard_list\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a dashboard list",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":list_id"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "-62147425"
								}
							]
						},
						"description": "Delete a dashboard list."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deleted_dashboard_list_id\": 26111328\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a dashboard list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":list_id"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "-62147425"
								}
							]
						},
						"description": "Fetch an existing dashboard list's definition."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"My Dashboard\",\n  \"author\": {\n    \"email\": \"Excepteur id tempor cillum\",\n    \"handle\": \"culpa nostrud pariatur\",\n    \"name\": \"cillum minim\"\n  },\n  \"created\": \"1966-02-10T07:56:34.100Z\",\n  \"dashboard_count\": 38191328,\n  \"id\": 17219875,\n  \"is_favorite\": false,\n  \"modified\": \"1943-12-25T04:37:37.575Z\",\n  \"type\": \"manual_dashboard_list\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a dashboard list",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"My Dashboard\",\n  \"author\": {\n    \"email\": \"Excepteur id tempor cillum\",\n    \"handle\": \"culpa nostrud pariatur\",\n    \"name\": \"cillum minim\"\n  },\n  \"created\": \"1966-02-10T07:56:34.100Z\",\n  \"dashboard_count\": 38191328,\n  \"id\": 17219875,\n  \"is_favorite\": false,\n  \"modified\": \"1943-12-25T04:37:37.575Z\",\n  \"type\": \"manual_dashboard_list\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":list_id"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "-62147425"
								}
							]
						},
						"description": "Update the name of a dashboard list."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"My Dashboard\",\n  \"author\": {\n    \"email\": \"Excepteur id tempor cillum\",\n    \"handle\": \"culpa nostrud pariatur\",\n    \"name\": \"cillum minim\"\n  },\n  \"created\": \"1966-02-10T07:56:34.100Z\",\n  \"dashboard_count\": 38191328,\n  \"id\": 17219875,\n  \"is_favorite\": false,\n  \"modified\": \"1943-12-25T04:37:37.575Z\",\n  \"type\": \"manual_dashboard_list\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"My Dashboard\",\n  \"author\": {\n    \"email\": \"Excepteur id tempor cillum\",\n    \"handle\": \"culpa nostrud pariatur\",\n    \"name\": \"cillum minim\"\n  },\n  \"created\": \"1966-02-10T07:56:34.100Z\",\n  \"dashboard_count\": 38191328,\n  \"id\": 17219875,\n  \"is_favorite\": false,\n  \"modified\": \"1943-12-25T04:37:37.575Z\",\n  \"type\": \"manual_dashboard_list\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"My Dashboard\",\n  \"author\": {\n    \"email\": \"Excepteur id tempor cillum\",\n    \"handle\": \"culpa nostrud pariatur\",\n    \"name\": \"cillum minim\"\n  },\n  \"created\": \"1966-02-10T07:56:34.100Z\",\n  \"dashboard_count\": 38191328,\n  \"id\": 17219875,\n  \"is_favorite\": false,\n  \"modified\": \"1943-12-25T04:37:37.575Z\",\n  \"type\": \"manual_dashboard_list\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"My Dashboard\",\n  \"author\": {\n    \"email\": \"Excepteur id tempor cillum\",\n    \"handle\": \"culpa nostrud pariatur\",\n    \"name\": \"cillum minim\"\n  },\n  \"created\": \"1966-02-10T07:56:34.100Z\",\n  \"dashboard_count\": 38191328,\n  \"id\": 17219875,\n  \"is_favorite\": false,\n  \"modified\": \"1943-12-25T04:37:37.575Z\",\n  \"type\": \"manual_dashboard_list\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"My Dashboard\",\n  \"author\": {\n    \"email\": \"Excepteur id tempor cillum\",\n    \"handle\": \"culpa nostrud pariatur\",\n    \"name\": \"cillum minim\"\n  },\n  \"created\": \"1966-02-10T07:56:34.100Z\",\n  \"dashboard_count\": 38191328,\n  \"id\": 17219875,\n  \"is_favorite\": false,\n  \"modified\": \"1943-12-25T04:37:37.575Z\",\n  \"type\": \"manual_dashboard_list\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"My Dashboard\",\n  \"author\": {\n    \"email\": \"Excepteur id tempor cillum\",\n    \"handle\": \"culpa nostrud pariatur\",\n    \"name\": \"cillum minim\"\n  },\n  \"created\": \"1966-02-10T07:56:34.100Z\",\n  \"dashboard_count\": 38191328,\n  \"id\": 17219875,\n  \"is_favorite\": false,\n  \"modified\": \"1943-12-25T04:37:37.575Z\",\n  \"type\": \"manual_dashboard_list\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Interact with your dashboard lists through the API to\norganize, find, and share all of your dashboards with your team and\norganization."
		},
		{
			"name": "Downtimes",
			"item": [
				{
					"name": "Get all downtimes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/downtime?current_only=<boolean>&include=<string>&page[offset]=0&page[limit]=30",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"downtime"
							],
							"query": [
								{
									"key": "current_only",
									"value": "<boolean>",
									"description": "Only return downtimes that are active when the request is made."
								},
								{
									"key": "include",
									"value": "<string>",
									"description": "Comma-separated list of resource paths for related resources to include in the response. Supported resource\npaths are `created_by` and `monitor`."
								},
								{
									"key": "page[offset]",
									"value": "0",
									"description": "Specific offset to use as the beginning of the returned page."
								},
								{
									"key": "page[limit]",
									"value": "30",
									"description": "Maximum number of downtimes in the response."
								}
							]
						},
						"description": "Get all scheduled downtimes."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime?current_only=<boolean>&include=<string>&page[offset]=0&page[limit]=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime"
									],
									"query": [
										{
											"key": "current_only",
											"value": "<boolean>",
											"description": "Only return downtimes that are active when the request is made."
										},
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma-separated list of resource paths for related resources to include in the response. Supported resource\npaths are `created_by` and `monitor`."
										},
										{
											"key": "page[offset]",
											"value": "0",
											"description": "Specific offset to use as the beginning of the returned page."
										},
										{
											"key": "page[limit]",
											"value": "30",
											"description": "Maximum number of downtimes in the response."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"canceled\": \"<dateTime>\",\n        \"created\": \"<dateTime>\",\n        \"display_timezone\": \"UTC\",\n        \"message\": \"<string>\",\n        \"modified\": \"<dateTime>\",\n        \"monitor_identifier\": {\n          \"monitor_id\": \"<long>\"\n        },\n        \"mute_first_recovery_notification\": \"<boolean>\",\n        \"notify_end_states\": [\n          \"no data\",\n          \"no data\"\n        ],\n        \"notify_end_types\": [\n          \"canceled\",\n          \"canceled\"\n        ],\n        \"schedule\": {\n          \"recurrences\": [\n            {\n              \"duration\": \"<string>\",\n              \"rrule\": \"<string>\",\n              \"start\": \"<string>\"\n            }\n          ],\n          \"current_downtime\": {\n            \"end\": \"<dateTime>\",\n            \"start\": \"<dateTime>\"\n          },\n          \"timezone\": \"UTC\"\n        },\n        \"scope\": \"<string>\",\n        \"status\": \"active\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"created_by\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        },\n        \"monitor\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"monitors\"\n          }\n        }\n      },\n      \"type\": \"downtime\"\n    },\n    {\n      \"attributes\": {\n        \"canceled\": \"<dateTime>\",\n        \"created\": \"<dateTime>\",\n        \"display_timezone\": \"UTC\",\n        \"message\": \"<string>\",\n        \"modified\": \"<dateTime>\",\n        \"monitor_identifier\": {\n          \"monitor_id\": \"<long>\"\n        },\n        \"mute_first_recovery_notification\": \"<boolean>\",\n        \"notify_end_states\": [\n          \"warn\",\n          \"alert\"\n        ],\n        \"notify_end_types\": [\n          \"canceled\",\n          \"canceled\"\n        ],\n        \"schedule\": {\n          \"recurrences\": [\n            {\n              \"duration\": \"<string>\",\n              \"rrule\": \"<string>\",\n              \"start\": \"<string>\"\n            }\n          ],\n          \"current_downtime\": {\n            \"end\": \"<dateTime>\",\n            \"start\": \"<dateTime>\"\n          },\n          \"timezone\": \"UTC\"\n        },\n        \"scope\": \"<string>\",\n        \"status\": \"scheduled\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"created_by\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        },\n        \"monitor\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"monitors\"\n          }\n        }\n      },\n      \"type\": \"downtime\"\n    }\n  ],\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ],\n  \"meta\": {\n    \"page\": {\n      \"total_filtered_count\": \"<long>\"\n    }\n  }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime?current_only=<boolean>&include=<string>&page[offset]=0&page[limit]=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime"
									],
									"query": [
										{
											"key": "current_only",
											"value": "<boolean>",
											"description": "Only return downtimes that are active when the request is made."
										},
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma-separated list of resource paths for related resources to include in the response. Supported resource\npaths are `created_by` and `monitor`."
										},
										{
											"key": "page[offset]",
											"value": "0",
											"description": "Specific offset to use as the beginning of the returned page."
										},
										{
											"key": "page[limit]",
											"value": "30",
											"description": "Maximum number of downtimes in the response."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime?current_only=<boolean>&include=<string>&page[offset]=0&page[limit]=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime"
									],
									"query": [
										{
											"key": "current_only",
											"value": "<boolean>",
											"description": "Only return downtimes that are active when the request is made."
										},
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma-separated list of resource paths for related resources to include in the response. Supported resource\npaths are `created_by` and `monitor`."
										},
										{
											"key": "page[offset]",
											"value": "0",
											"description": "Specific offset to use as the beginning of the returned page."
										},
										{
											"key": "page[limit]",
											"value": "30",
											"description": "Maximum number of downtimes in the response."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Schedule a downtime",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"downtime\",\n    \"attributes\": {\n      \"scope\": \"<string>\",\n      \"monitor_identifier\": {\n        \"monitor_id\": \"<long>\"\n      },\n      \"display_timezone\": \"UTC\",\n      \"message\": \"<string>\",\n      \"mute_first_recovery_notification\": \"<boolean>\",\n      \"notify_end_states\": [\n        \"warn\",\n        \"warn\"\n      ],\n      \"notify_end_types\": [\n        \"expired\",\n        \"expired\"\n      ],\n      \"schedule\": {\n        \"recurrences\": [\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          },\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          }\n        ],\n        \"timezone\": \"UTC\"\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/downtime",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"downtime"
							]
						},
						"description": "Schedule a downtime."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"downtime\",\n    \"attributes\": {\n      \"scope\": \"<string>\",\n      \"monitor_identifier\": {\n        \"monitor_id\": \"<long>\"\n      },\n      \"display_timezone\": \"UTC\",\n      \"message\": \"<string>\",\n      \"mute_first_recovery_notification\": \"<boolean>\",\n      \"notify_end_states\": [\n        \"warn\",\n        \"warn\"\n      ],\n      \"notify_end_types\": [\n        \"expired\",\n        \"expired\"\n      ],\n      \"schedule\": {\n        \"recurrences\": [\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          },\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          }\n        ],\n        \"timezone\": \"UTC\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"canceled\": \"<dateTime>\",\n      \"created\": \"<dateTime>\",\n      \"display_timezone\": \"UTC\",\n      \"message\": \"<string>\",\n      \"modified\": \"<dateTime>\",\n      \"monitor_identifier\": {\n        \"monitor_id\": \"<long>\"\n      },\n      \"mute_first_recovery_notification\": \"<boolean>\",\n      \"notify_end_states\": [\n        \"alert\",\n        \"alert\"\n      ],\n      \"notify_end_types\": [\n        \"canceled\",\n        \"expired\"\n      ],\n      \"schedule\": {\n        \"recurrences\": [\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          }\n        ],\n        \"current_downtime\": {\n          \"end\": \"<dateTime>\",\n          \"start\": \"<dateTime>\"\n        },\n        \"timezone\": \"UTC\"\n      },\n      \"scope\": \"<string>\",\n      \"status\": \"scheduled\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"created_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      },\n      \"monitor\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"monitors\"\n        }\n      }\n    },\n    \"type\": \"downtime\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"downtime\",\n    \"attributes\": {\n      \"scope\": \"<string>\",\n      \"monitor_identifier\": {\n        \"monitor_id\": \"<long>\"\n      },\n      \"display_timezone\": \"UTC\",\n      \"message\": \"<string>\",\n      \"mute_first_recovery_notification\": \"<boolean>\",\n      \"notify_end_states\": [\n        \"warn\",\n        \"warn\"\n      ],\n      \"notify_end_types\": [\n        \"expired\",\n        \"expired\"\n      ],\n      \"schedule\": {\n        \"recurrences\": [\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          },\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          }\n        ],\n        \"timezone\": \"UTC\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"downtime\",\n    \"attributes\": {\n      \"scope\": \"<string>\",\n      \"monitor_identifier\": {\n        \"monitor_id\": \"<long>\"\n      },\n      \"display_timezone\": \"UTC\",\n      \"message\": \"<string>\",\n      \"mute_first_recovery_notification\": \"<boolean>\",\n      \"notify_end_states\": [\n        \"warn\",\n        \"warn\"\n      ],\n      \"notify_end_types\": [\n        \"expired\",\n        \"expired\"\n      ],\n      \"schedule\": {\n        \"recurrences\": [\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          },\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          }\n        ],\n        \"timezone\": \"UTC\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"downtime\",\n    \"attributes\": {\n      \"scope\": \"<string>\",\n      \"monitor_identifier\": {\n        \"monitor_id\": \"<long>\"\n      },\n      \"display_timezone\": \"UTC\",\n      \"message\": \"<string>\",\n      \"mute_first_recovery_notification\": \"<boolean>\",\n      \"notify_end_states\": [\n        \"warn\",\n        \"warn\"\n      ],\n      \"notify_end_types\": [\n        \"expired\",\n        \"expired\"\n      ],\n      \"schedule\": {\n        \"recurrences\": [\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          },\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          }\n        ],\n        \"timezone\": \"UTC\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Cancel a downtime",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"downtime",
								":downtime_id"
							],
							"variable": [
								{
									"key": "downtime_id",
									"value": "<string>"
								}
							]
						},
						"description": "Cancel a downtime."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Downtime not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a downtime",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id?include=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"downtime",
								":downtime_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>",
									"description": "Comma-separated list of resource paths for related resources to include in the response. Supported resource\npaths are `created_by` and `monitor`."
								}
							],
							"variable": [
								{
									"key": "downtime_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get downtime detail by `downtime_id`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime",
										":downtime_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma-separated list of resource paths for related resources to include in the response. Supported resource\npaths are `created_by` and `monitor`."
										}
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"canceled\": \"<dateTime>\",\n      \"created\": \"<dateTime>\",\n      \"display_timezone\": \"UTC\",\n      \"message\": \"<string>\",\n      \"modified\": \"<dateTime>\",\n      \"monitor_identifier\": {\n        \"monitor_id\": \"<long>\"\n      },\n      \"mute_first_recovery_notification\": \"<boolean>\",\n      \"notify_end_states\": [\n        \"alert\",\n        \"alert\"\n      ],\n      \"notify_end_types\": [\n        \"canceled\",\n        \"expired\"\n      ],\n      \"schedule\": {\n        \"recurrences\": [\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          }\n        ],\n        \"current_downtime\": {\n          \"end\": \"<dateTime>\",\n          \"start\": \"<dateTime>\"\n        },\n        \"timezone\": \"UTC\"\n      },\n      \"scope\": \"<string>\",\n      \"status\": \"scheduled\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"created_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      },\n      \"monitor\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"monitors\"\n        }\n      }\n    },\n    \"type\": \"downtime\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime",
										":downtime_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma-separated list of resource paths for related resources to include in the response. Supported resource\npaths are `created_by` and `monitor`."
										}
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime",
										":downtime_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma-separated list of resource paths for related resources to include in the response. Supported resource\npaths are `created_by` and `monitor`."
										}
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime",
										":downtime_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma-separated list of resource paths for related resources to include in the response. Supported resource\npaths are `created_by` and `monitor`."
										}
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime",
										":downtime_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma-separated list of resource paths for related resources to include in the response. Supported resource\npaths are `created_by` and `monitor`."
										}
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a downtime",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"downtime\",\n    \"attributes\": {\n      \"display_timezone\": \"UTC\",\n      \"message\": \"<string>\",\n      \"monitor_identifier\": {\n        \"monitor_id\": \"<long>\"\n      },\n      \"mute_first_recovery_notification\": \"<boolean>\",\n      \"notify_end_states\": [\n        \"alert\",\n        \"no data\"\n      ],\n      \"notify_end_types\": [\n        \"canceled\",\n        \"expired\"\n      ],\n      \"schedule\": {\n        \"recurrences\": [\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          },\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          }\n        ],\n        \"timezone\": \"UTC\"\n      },\n      \"scope\": \"<string>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"downtime",
								":downtime_id"
							],
							"variable": [
								{
									"key": "downtime_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a downtime by `downtime_id`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"downtime\",\n    \"attributes\": {\n      \"display_timezone\": \"UTC\",\n      \"message\": \"<string>\",\n      \"monitor_identifier\": {\n        \"monitor_id\": \"<long>\"\n      },\n      \"mute_first_recovery_notification\": \"<boolean>\",\n      \"notify_end_states\": [\n        \"alert\",\n        \"no data\"\n      ],\n      \"notify_end_types\": [\n        \"canceled\",\n        \"expired\"\n      ],\n      \"schedule\": {\n        \"recurrences\": [\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          },\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          }\n        ],\n        \"timezone\": \"UTC\"\n      },\n      \"scope\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"canceled\": \"<dateTime>\",\n      \"created\": \"<dateTime>\",\n      \"display_timezone\": \"UTC\",\n      \"message\": \"<string>\",\n      \"modified\": \"<dateTime>\",\n      \"monitor_identifier\": {\n        \"monitor_id\": \"<long>\"\n      },\n      \"mute_first_recovery_notification\": \"<boolean>\",\n      \"notify_end_states\": [\n        \"alert\",\n        \"alert\"\n      ],\n      \"notify_end_types\": [\n        \"canceled\",\n        \"expired\"\n      ],\n      \"schedule\": {\n        \"recurrences\": [\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          }\n        ],\n        \"current_downtime\": {\n          \"end\": \"<dateTime>\",\n          \"start\": \"<dateTime>\"\n        },\n        \"timezone\": \"UTC\"\n      },\n      \"scope\": \"<string>\",\n      \"status\": \"scheduled\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"created_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      },\n      \"monitor\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"monitors\"\n        }\n      }\n    },\n    \"type\": \"downtime\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"downtime\",\n    \"attributes\": {\n      \"display_timezone\": \"UTC\",\n      \"message\": \"<string>\",\n      \"monitor_identifier\": {\n        \"monitor_id\": \"<long>\"\n      },\n      \"mute_first_recovery_notification\": \"<boolean>\",\n      \"notify_end_states\": [\n        \"alert\",\n        \"no data\"\n      ],\n      \"notify_end_types\": [\n        \"canceled\",\n        \"expired\"\n      ],\n      \"schedule\": {\n        \"recurrences\": [\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          },\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          }\n        ],\n        \"timezone\": \"UTC\"\n      },\n      \"scope\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"downtime\",\n    \"attributes\": {\n      \"display_timezone\": \"UTC\",\n      \"message\": \"<string>\",\n      \"monitor_identifier\": {\n        \"monitor_id\": \"<long>\"\n      },\n      \"mute_first_recovery_notification\": \"<boolean>\",\n      \"notify_end_states\": [\n        \"alert\",\n        \"no data\"\n      ],\n      \"notify_end_types\": [\n        \"canceled\",\n        \"expired\"\n      ],\n      \"schedule\": {\n        \"recurrences\": [\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          },\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          }\n        ],\n        \"timezone\": \"UTC\"\n      },\n      \"scope\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Downtime not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"downtime\",\n    \"attributes\": {\n      \"display_timezone\": \"UTC\",\n      \"message\": \"<string>\",\n      \"monitor_identifier\": {\n        \"monitor_id\": \"<long>\"\n      },\n      \"mute_first_recovery_notification\": \"<boolean>\",\n      \"notify_end_states\": [\n        \"alert\",\n        \"no data\"\n      ],\n      \"notify_end_types\": [\n        \"canceled\",\n        \"expired\"\n      ],\n      \"schedule\": {\n        \"recurrences\": [\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          },\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          }\n        ],\n        \"timezone\": \"UTC\"\n      },\n      \"scope\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"downtime\",\n    \"attributes\": {\n      \"display_timezone\": \"UTC\",\n      \"message\": \"<string>\",\n      \"monitor_identifier\": {\n        \"monitor_id\": \"<long>\"\n      },\n      \"mute_first_recovery_notification\": \"<boolean>\",\n      \"notify_end_states\": [\n        \"alert\",\n        \"no data\"\n      ],\n      \"notify_end_types\": [\n        \"canceled\",\n        \"expired\"\n      ],\n      \"schedule\": {\n        \"recurrences\": [\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          },\n          {\n            \"duration\": \"<string>\",\n            \"rrule\": \"<string>\",\n            \"start\": \"<string>\"\n          }\n        ],\n        \"timezone\": \"UTC\"\n      },\n      \"scope\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get active downtimes for a monitor",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/monitor/:monitor_id/downtime_matches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"monitor",
								":monitor_id",
								"downtime_matches"
							],
							"variable": [
								{
									"key": "monitor_id",
									"value": "<long>"
								}
							]
						},
						"description": "Get all active downtimes for the specified monitor."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/:monitor_id/downtime_matches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										":monitor_id",
										"downtime_matches"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"end\": \"<dateTime>\",\n        \"groups\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scope\": \"<string>\",\n        \"start\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"downtime_match\"\n    },\n    {\n      \"attributes\": {\n        \"end\": \"<dateTime>\",\n        \"groups\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"scope\": \"<string>\",\n        \"start\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"downtime_match\"\n    }\n  ],\n  \"meta\": {\n    \"page\": {\n      \"total_filtered_count\": \"<long>\"\n    }\n  }\n}"
						},
						{
							"name": "Monitor Not Found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/:monitor_id/downtime_matches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										":monitor_id",
										"downtime_matches"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/:monitor_id/downtime_matches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										":monitor_id",
										"downtime_matches"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Cancel downtimes by scope",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"scope\": \"host:myserver\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/downtime/cancel/by_scope",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								"cancel",
								"by_scope"
							]
						},
						"description": "Delete all downtimes that match the scope of `X`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"scope\": \"host:myserver\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/cancel/by_scope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										"cancel",
										"by_scope"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"cancelled_ids\": [\n    123456789,\n    123456790\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"scope\": \"host:myserver\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/cancel/by_scope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										"cancel",
										"by_scope"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"scope\": \"host:myserver\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/cancel/by_scope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										"cancel",
										"by_scope"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Downtimes not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"scope\": \"host:myserver\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/cancel/by_scope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										"cancel",
										"by_scope"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"scope\": \"host:myserver\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/cancel/by_scope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										"cancel",
										"by_scope"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "**Note**: Downtime V2 is currently in private beta. To request access, contact [Datadog support](https://docs.datadoghq.com/help/).\n\n[Downtiming](https://docs.datadoghq.com/monitors/notify/downtimes) gives\nyou greater control over monitor notifications by allowing you to globally exclude\nscopes from alerting. Downtime settings, which can be scheduled with start and\nend times, prevent all alerting related to specified Datadog tags."
		},
		{
			"name": "Embeddable Graphs",
			"item": [
				{
					"name": "Get all embeds",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/graph/embed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed"
							]
						},
						"description": "Gets a list of previously created embeddable graphs."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"embedded_graphs\": [\n    {\n      \"dash_name\": \"commodo ea occaecat tempor\",\n      \"dash_url\": \"dolore laboris ex cupidatat\",\n      \"embed_id\": \"minim incididunt\",\n      \"graph_title\": \"cillum labore\",\n      \"html\": \"commodo mollit deserunt occaecat\",\n      \"revoked\": false,\n      \"shared_by\": -60341639\n    },\n    {\n      \"dash_name\": \"tempor officia ipsum\",\n      \"dash_url\": \"pariatur cillum\",\n      \"embed_id\": \"ea\",\n      \"graph_title\": \"quis consequat nisi\",\n      \"html\": \"est consequat ad\",\n      \"revoked\": false,\n      \"shared_by\": 86823065\n    }\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create embed",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"graph_json\": \"\",\n  \"legend\": \"no\",\n  \"size\": \"medium\",\n  \"timeframe\": \"1_hour\",\n  \"title\": \"Embed created through API\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/graph/embed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed"
							]
						},
						"description": "Creates a new embeddable graph.\n\nNote: If an embed already exists for the exact same query in a given organization,\nthe older embed is returned instead of creating a new embed.\n\nIf you are interested in using template variables, see\n[Embeddable Graphs with Template Variables](https://docs.datadoghq.com/dashboards/faq/embeddable-graphs-with-template-variables)."
					},
					"response": [
						{
							"name": "Payload accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"graph_json\": \"\",\n  \"legend\": \"no\",\n  \"size\": \"medium\",\n  \"timeframe\": \"1_hour\",\n  \"title\": \"Embed created through API\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"dash_name\": \"proident ut commodo\",\n  \"dash_url\": \"sint elit\",\n  \"embed_id\": \"velit\",\n  \"graph_title\": \"Excepteur ea consectetur sunt sint\",\n  \"html\": \"non cupidatat in veniam\",\n  \"revoked\": false,\n  \"shared_by\": 76702863\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"graph_json\": \"\",\n  \"legend\": \"no\",\n  \"size\": \"medium\",\n  \"timeframe\": \"1_hour\",\n  \"title\": \"Embed created through API\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"graph_json\": \"\",\n  \"legend\": \"no\",\n  \"size\": \"medium\",\n  \"timeframe\": \"1_hour\",\n  \"title\": \"Embed created through API\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"graph_json\": \"\",\n  \"legend\": \"no\",\n  \"size\": \"medium\",\n  \"timeframe\": \"1_hour\",\n  \"title\": \"Embed created through API\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get specific embed",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":embed_id"
							],
							"variable": [
								{
									"key": "embed_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get the HTML fragment for a previously generated embed with `embed_id`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"dash_name\": \"proident ut commodo\",\n  \"dash_url\": \"sint elit\",\n  \"embed_id\": \"velit\",\n  \"graph_title\": \"Excepteur ea consectetur sunt sint\",\n  \"html\": \"non cupidatat in veniam\",\n  \"revoked\": false,\n  \"shared_by\": 76702863\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Enable embed",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/enable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":embed_id",
								"enable"
							],
							"variable": [
								{
									"key": "embed_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Enable a specified embed."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id",
										"enable"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": \"Embed 00000000000 successfully enabled.\"\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id",
										"enable"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id",
										"enable"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id",
										"enable"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Revoke embed",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/revoke",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":embed_id",
								"revoke"
							],
							"variable": [
								{
									"key": "embed_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Revoke a specified embed."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id",
										"revoke"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": \"Embed 0000000000000 successfully revoked.\"\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id",
										"revoke"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id",
										"revoke"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id",
										"revoke"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Interact with embeddable graphs through the API."
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Get a list of events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/events?start=-62147425&end=-62147425&priority=normal&sources=tempor Ut sed velit&tags=host:host0&unaggregated=true&exclude_aggregate=true&page=-90656756",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events"
							],
							"query": [
								{
									"key": "start",
									"value": "-62147425",
									"description": "(Required) POSIX timestamp."
								},
								{
									"key": "end",
									"value": "-62147425",
									"description": "(Required) POSIX timestamp."
								},
								{
									"key": "priority",
									"value": "normal",
									"description": "Priority of your events, either `low` or `normal`."
								},
								{
									"key": "sources",
									"value": "tempor Ut sed velit",
									"description": "A comma separated string of sources."
								},
								{
									"key": "tags",
									"value": "host:host0",
									"description": "A comma separated list indicating what tags, if any, should be used to filter the list of events."
								},
								{
									"key": "unaggregated",
									"value": "true",
									"description": "Set unaggregated to `true` to return all events within the specified [`start`,`end`] timeframe.\nOtherwise if an event is aggregated to a parent event with a timestamp outside of the timeframe,\nit won't be available in the output. Aggregated events with `is_aggregate=true` in the response will still be returned unless exclude_aggregate is set to `true.`"
								},
								{
									"key": "exclude_aggregate",
									"value": "true",
									"description": "Set `exclude_aggregate` to `true` to only return unaggregated events where `is_aggregate=false` in the response. If the `exclude_aggregate` parameter is set to `true`,\nthen the unaggregated parameter is ignored and will be `true` by default."
								},
								{
									"key": "page",
									"value": "-90656756",
									"description": "By default 1000 results are returned per request. Set page to the number of the page to return with `0` being the first page. The page parameter can only be used\nwhen either unaggregated or exclude_aggregate is set to `true.`"
								}
							]
						},
						"description": "The event stream can be queried and filtered by time, priority, sources and tags.\n\n**Notes**:\n- If the event you’re querying contains markdown formatting of any kind,\nyou may see characters such as `%`,`\\`,`n` in your output.\n\n- This endpoint returns a maximum of `1000` most recent results. To return additional results,\nidentify the last timestamp of the last result and set that as the `end` query time to\npaginate the results. You can also use the page parameter to specify which set of `1000` results to return."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events?start=-62147425&end=-62147425&priority=normal&sources=tempor Ut sed velit&tags=host:host0&unaggregated=true&exclude_aggregate=true&page=-90656756",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "start",
											"value": "-62147425",
											"description": "(Required) POSIX timestamp."
										},
										{
											"key": "end",
											"value": "-62147425",
											"description": "(Required) POSIX timestamp."
										},
										{
											"key": "priority",
											"value": "normal",
											"description": "Priority of your events, either `low` or `normal`."
										},
										{
											"key": "sources",
											"value": "tempor Ut sed velit",
											"description": "A comma separated string of sources."
										},
										{
											"key": "tags",
											"value": "host:host0",
											"description": "A comma separated list indicating what tags, if any, should be used to filter the list of events."
										},
										{
											"key": "unaggregated",
											"value": "true",
											"description": "Set unaggregated to `true` to return all events within the specified [`start`,`end`] timeframe.\nOtherwise if an event is aggregated to a parent event with a timestamp outside of the timeframe,\nit won't be available in the output. Aggregated events with `is_aggregate=true` in the response will still be returned unless exclude_aggregate is set to `true.`"
										},
										{
											"key": "exclude_aggregate",
											"value": "true",
											"description": "Set `exclude_aggregate` to `true` to only return unaggregated events where `is_aggregate=false` in the response. If the `exclude_aggregate` parameter is set to `true`,\nthen the unaggregated parameter is ignored and will be `true` by default."
										},
										{
											"key": "page",
											"value": "-90656756",
											"description": "By default 1000 results are returned per request. Set page to the number of the page to return with `0` being the first page. The page parameter can only be used\nwhen either unaggregated or exclude_aggregate is set to `true.`"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"events\": [\n    {\n      \"alert_type\": \"info\",\n      \"date_happened\": -60006686,\n      \"device_name\": \"dolore\",\n      \"host\": \"proident in\",\n      \"id\": -22759649,\n      \"id_str\": \"quis labore cupidatat minim\",\n      \"payload\": \"{}\",\n      \"priority\": \"normal\",\n      \"source_type_name\": \"nulla aute\",\n      \"tags\": [\n        \"environment:test\"\n      ],\n      \"text\": \"Oh boy!\",\n      \"title\": \"Did you hear the news today?\",\n      \"url\": \"ex\"\n    },\n    {\n      \"alert_type\": \"info\",\n      \"date_happened\": 12830805,\n      \"device_name\": \"incididunt\",\n      \"host\": \"ex Excepteur eu magna\",\n      \"id\": -86397972,\n      \"id_str\": \"Duis\",\n      \"payload\": \"{}\",\n      \"priority\": \"normal\",\n      \"source_type_name\": \"quis amet voluptate fugiat enim\",\n      \"tags\": [\n        \"environment:test\"\n      ],\n      \"text\": \"Oh boy!\",\n      \"title\": \"Did you hear the news today?\",\n      \"url\": \"tempor\"\n    }\n  ],\n  \"status\": \"laborum consequat\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events?start=-62147425&end=-62147425&priority=normal&sources=tempor Ut sed velit&tags=host:host0&unaggregated=true&exclude_aggregate=true&page=-90656756",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "start",
											"value": "-62147425",
											"description": "(Required) POSIX timestamp."
										},
										{
											"key": "end",
											"value": "-62147425",
											"description": "(Required) POSIX timestamp."
										},
										{
											"key": "priority",
											"value": "normal",
											"description": "Priority of your events, either `low` or `normal`."
										},
										{
											"key": "sources",
											"value": "tempor Ut sed velit",
											"description": "A comma separated string of sources."
										},
										{
											"key": "tags",
											"value": "host:host0",
											"description": "A comma separated list indicating what tags, if any, should be used to filter the list of events."
										},
										{
											"key": "unaggregated",
											"value": "true",
											"description": "Set unaggregated to `true` to return all events within the specified [`start`,`end`] timeframe.\nOtherwise if an event is aggregated to a parent event with a timestamp outside of the timeframe,\nit won't be available in the output. Aggregated events with `is_aggregate=true` in the response will still be returned unless exclude_aggregate is set to `true.`"
										},
										{
											"key": "exclude_aggregate",
											"value": "true",
											"description": "Set `exclude_aggregate` to `true` to only return unaggregated events where `is_aggregate=false` in the response. If the `exclude_aggregate` parameter is set to `true`,\nthen the unaggregated parameter is ignored and will be `true` by default."
										},
										{
											"key": "page",
											"value": "-90656756",
											"description": "By default 1000 results are returned per request. Set page to the number of the page to return with `0` being the first page. The page parameter can only be used\nwhen either unaggregated or exclude_aggregate is set to `true.`"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events?start=-62147425&end=-62147425&priority=normal&sources=tempor Ut sed velit&tags=host:host0&unaggregated=true&exclude_aggregate=true&page=-90656756",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "start",
											"value": "-62147425",
											"description": "(Required) POSIX timestamp."
										},
										{
											"key": "end",
											"value": "-62147425",
											"description": "(Required) POSIX timestamp."
										},
										{
											"key": "priority",
											"value": "normal",
											"description": "Priority of your events, either `low` or `normal`."
										},
										{
											"key": "sources",
											"value": "tempor Ut sed velit",
											"description": "A comma separated string of sources."
										},
										{
											"key": "tags",
											"value": "host:host0",
											"description": "A comma separated list indicating what tags, if any, should be used to filter the list of events."
										},
										{
											"key": "unaggregated",
											"value": "true",
											"description": "Set unaggregated to `true` to return all events within the specified [`start`,`end`] timeframe.\nOtherwise if an event is aggregated to a parent event with a timestamp outside of the timeframe,\nit won't be available in the output. Aggregated events with `is_aggregate=true` in the response will still be returned unless exclude_aggregate is set to `true.`"
										},
										{
											"key": "exclude_aggregate",
											"value": "true",
											"description": "Set `exclude_aggregate` to `true` to only return unaggregated events where `is_aggregate=false` in the response. If the `exclude_aggregate` parameter is set to `true`,\nthen the unaggregated parameter is ignored and will be `true` by default."
										},
										{
											"key": "page",
											"value": "-90656756",
											"description": "By default 1000 results are returned per request. Set page to the number of the page to return with `0` being the first page. The page parameter can only be used\nwhen either unaggregated or exclude_aggregate is set to `true.`"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events?start=-62147425&end=-62147425&priority=normal&sources=tempor Ut sed velit&tags=host:host0&unaggregated=true&exclude_aggregate=true&page=-90656756",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "start",
											"value": "-62147425",
											"description": "(Required) POSIX timestamp."
										},
										{
											"key": "end",
											"value": "-62147425",
											"description": "(Required) POSIX timestamp."
										},
										{
											"key": "priority",
											"value": "normal",
											"description": "Priority of your events, either `low` or `normal`."
										},
										{
											"key": "sources",
											"value": "tempor Ut sed velit",
											"description": "A comma separated string of sources."
										},
										{
											"key": "tags",
											"value": "host:host0",
											"description": "A comma separated list indicating what tags, if any, should be used to filter the list of events."
										},
										{
											"key": "unaggregated",
											"value": "true",
											"description": "Set unaggregated to `true` to return all events within the specified [`start`,`end`] timeframe.\nOtherwise if an event is aggregated to a parent event with a timestamp outside of the timeframe,\nit won't be available in the output. Aggregated events with `is_aggregate=true` in the response will still be returned unless exclude_aggregate is set to `true.`"
										},
										{
											"key": "exclude_aggregate",
											"value": "true",
											"description": "Set `exclude_aggregate` to `true` to only return unaggregated events where `is_aggregate=false` in the response. If the `exclude_aggregate` parameter is set to `true`,\nthen the unaggregated parameter is ignored and will be `true` by default."
										},
										{
											"key": "page",
											"value": "-90656756",
											"description": "By default 1000 results are returned per request. Set page to the number of the page to return with `0` being the first page. The page parameter can only be used\nwhen either unaggregated or exclude_aggregate is set to `true.`"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Post an event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Did you hear the news today?\",\n  \"text\": \"Oh boy!\",\n  \"aggregation_key\": \"officia ex veniam\",\n  \"alert_type\": \"info\",\n  \"date_happened\": 73027040,\n  \"device_name\": \"ut eu fugiat cul\",\n  \"host\": \"i\",\n  \"priority\": \"normal\",\n  \"related_event_id\": -43026196,\n  \"source_type_name\": \"Lorem Ut\",\n  \"tags\": [\n    \"environment:test\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events"
							]
						},
						"description": "This endpoint allows you to post events to the stream.\nTag them, set priority and event aggregate them with other events."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Did you hear the news today?\",\n  \"text\": \"Oh boy!\",\n  \"aggregation_key\": \"officia ex veniam\",\n  \"alert_type\": \"info\",\n  \"date_happened\": 73027040,\n  \"device_name\": \"ut eu fugiat cul\",\n  \"host\": \"i\",\n  \"priority\": \"normal\",\n  \"related_event_id\": -43026196,\n  \"source_type_name\": \"Lorem Ut\",\n  \"tags\": [\n    \"environment:test\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"event\": {\n    \"alert_type\": \"info\",\n    \"date_happened\": -7687934,\n    \"device_name\": \"labore aliquip dolor\",\n    \"host\": \"incididunt sunt\",\n    \"id\": -98412440,\n    \"id_str\": \"incididunt laborum\",\n    \"payload\": \"{}\",\n    \"priority\": \"normal\",\n    \"source_type_name\": \"commodo cupidatat ea\",\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"text\": \"Oh boy!\",\n    \"title\": \"Did you hear the news today?\",\n    \"url\": \"non\"\n  },\n  \"status\": \"sit in\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Did you hear the news today?\",\n  \"text\": \"Oh boy!\",\n  \"aggregation_key\": \"officia ex veniam\",\n  \"alert_type\": \"info\",\n  \"date_happened\": 73027040,\n  \"device_name\": \"ut eu fugiat cul\",\n  \"host\": \"i\",\n  \"priority\": \"normal\",\n  \"related_event_id\": -43026196,\n  \"source_type_name\": \"Lorem Ut\",\n  \"tags\": [\n    \"environment:test\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Did you hear the news today?\",\n  \"text\": \"Oh boy!\",\n  \"aggregation_key\": \"officia ex veniam\",\n  \"alert_type\": \"info\",\n  \"date_happened\": 73027040,\n  \"device_name\": \"ut eu fugiat cul\",\n  \"host\": \"i\",\n  \"priority\": \"normal\",\n  \"related_event_id\": -43026196,\n  \"source_type_name\": \"Lorem Ut\",\n  \"tags\": [\n    \"environment:test\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get an event",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/events/:event_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events",
								":event_id"
							],
							"variable": [
								{
									"key": "event_id",
									"value": "-62147425"
								}
							]
						},
						"description": "This endpoint allows you to query for event details.\n\n**Note**: If the event you’re querying contains markdown formatting of any kind,\nyou may see characters such as `%`,`\\`,`n` in your output."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events/:event_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events",
										":event_id"
									],
									"variable": [
										{
											"key": "event_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"event\": {\n    \"alert_type\": \"info\",\n    \"date_happened\": -7687934,\n    \"device_name\": \"labore aliquip dolor\",\n    \"host\": \"incididunt sunt\",\n    \"id\": -98412440,\n    \"id_str\": \"incididunt laborum\",\n    \"payload\": \"{}\",\n    \"priority\": \"normal\",\n    \"source_type_name\": \"commodo cupidatat ea\",\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"text\": \"Oh boy!\",\n    \"title\": \"Did you hear the news today?\",\n    \"url\": \"non\"\n  },\n  \"status\": \"sit in\"\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events/:event_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events",
										":event_id"
									],
									"variable": [
										{
											"key": "event_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events/:event_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events",
										":event_id"
									],
									"variable": [
										{
											"key": "event_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events/:event_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events",
										":event_id"
									],
									"variable": [
										{
											"key": "event_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "The events service allows you to programmatically post events to the event stream\nand fetch events from the event stream. Events are limited to 4000 characters.\nIf an event is sent out with a message containing more than 4000 characters, only the\nfirst 4000 characters are displayed."
		},
		{
			"name": "Fastly Integration",
			"item": [
				{
					"name": "List Fastly accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"fastly",
								"accounts"
							]
						},
						"description": "List Fastly accounts."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"name\": \"<string>\",\n        \"services\": [\n          {\n            \"id\": \"<string>\",\n            \"tags\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          {\n            \"id\": \"<string>\",\n            \"tags\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"fastly-accounts\"\n    },\n    {\n      \"attributes\": {\n        \"name\": \"<string>\",\n        \"services\": [\n          {\n            \"id\": \"<string>\",\n            \"tags\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          {\n            \"id\": \"<string>\",\n            \"tags\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"fastly-accounts\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Add Fastly account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"services\": [\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"type\": \"fastly-accounts\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"fastly",
								"accounts"
							]
						},
						"description": "Create a Fastly account."
					},
					"response": [
						{
							"name": "CREATED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"services\": [\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"type\": \"fastly-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"services\": [\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"fastly-accounts\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"services\": [\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"type\": \"fastly-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"services\": [\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"type\": \"fastly-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"services\": [\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"type\": \"fastly-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\",\n      \"name\": \"<string>\",\n      \"services\": [\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"type\": \"fastly-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete Fastly account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"fastly",
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a Fastly account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Fastly account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"fastly",
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a Fastly account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"services\": [\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"fastly-accounts\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update Fastly account",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\"\n    },\n    \"type\": \"fastly-accounts\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"fastly",
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a Fastly account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\"\n    },\n    \"type\": \"fastly-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"services\": [\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"fastly-accounts\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\"\n    },\n    \"type\": \"fastly-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\"\n    },\n    \"type\": \"fastly-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\"\n    },\n    \"type\": \"fastly-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"api_key\": \"<string>\"\n    },\n    \"type\": \"fastly-accounts\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List Fastly services",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"fastly",
								"accounts",
								":account_id",
								"services"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "List Fastly services for an account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"fastly-services\",\n        \"attributes\": {\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    },\n    {\n      \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"fastly-services\",\n        \"attributes\": {\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Add Fastly service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"fastly",
								"accounts",
								":account_id",
								"services"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Create a Fastly service for an account."
					},
					"response": [
						{
							"name": "CREATED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete Fastly service",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"fastly",
								"accounts",
								":account_id",
								"services",
								":service_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								},
								{
									"key": "service_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a Fastly service for an account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Fastly service",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"fastly",
								"accounts",
								":account_id",
								"services",
								":service_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								},
								{
									"key": "service_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a Fastly service for an account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update Fastly service",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integrations",
								"fastly",
								"accounts",
								":account_id",
								"services",
								":service_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								},
								{
									"key": "service_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a Fastly service for an account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"fastly-services\",\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/fastly/accounts/:account_id/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										"fastly",
										"accounts",
										":account_id",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "account_id"
										},
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Configure your Datadog Fastly integration directly through the Datadog API."
		},
		{
			"name": "GCP Integration",
			"item": [
				{
					"name": "List all GCP STS-enabled service accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integration",
								"gcp",
								"accounts"
							]
						},
						"description": "List all GCP STS-enabled service accounts configured in your Datadog account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"automute\": \"<boolean>\",\n        \"client_email\": \"<string>\",\n        \"host_filters\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"is_cspm_enabled\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"meta\": {\n        \"accessible_projects\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"type\": \"gcp_service_account\"\n    },\n    {\n      \"attributes\": {\n        \"automute\": \"<boolean>\",\n        \"client_email\": \"<string>\",\n        \"host_filters\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"is_cspm_enabled\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"meta\": {\n        \"accessible_projects\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"type\": \"gcp_service_account\"\n    }\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a new entry for your service account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"type\": \"gcp_service_account\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integration",
								"gcp",
								"accounts"
							]
						},
						"description": "Create a new entry within Datadog for your STS enabled service account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"type\": \"gcp_service_account\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"meta\": {\n      \"accessible_projects\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"gcp_service_account\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"type\": \"gcp_service_account\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"type\": \"gcp_service_account\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"type\": \"gcp_service_account\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"type\": \"gcp_service_account\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"type\": \"gcp_service_account\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete an STS enabled GCP Account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integration",
								"gcp",
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete an STS enabled GCP account from within Datadog."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update STS Service Account",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"gcp_service_account\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integration",
								"gcp",
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update an STS enabled service account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"gcp_service_account\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"meta\": {\n      \"accessible_projects\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"gcp_service_account\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"gcp_service_account\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"gcp_service_account\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"gcp_service_account\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"automute\": \"<boolean>\",\n      \"client_email\": \"<string>\",\n      \"host_filters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_cspm_enabled\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"gcp_service_account\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List delegate account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integration/gcp/sts_delegate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integration",
								"gcp",
								"sts_delegate"
							]
						},
						"description": "List your Datadog-GCP STS delegate account configured in your Datadog account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/sts_delegate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"sts_delegate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"delegate_account_email\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"gcp_sts_delegate\"\n  }\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/sts_delegate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"sts_delegate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/sts_delegate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"sts_delegate"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a Datadog GCP principal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integration/gcp/sts_delegate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integration",
								"gcp",
								"sts_delegate"
							]
						},
						"description": "Create a Datadog GCP principal."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/sts_delegate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"sts_delegate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"delegate_account_email\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"gcp_sts_delegate\"\n  }\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/sts_delegate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"sts_delegate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/sts_delegate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"sts_delegate"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/gcp/sts_delegate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"gcp",
										"sts_delegate"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Configure your Datadog-Google Cloud Platform (GCP) integration directly\nthrough the Datadog API. Read more about the [Datadog-Google Cloud Platform integration](https://docs.datadoghq.com/integrations/google_cloud_platform)."
		},
		{
			"name": "Hosts",
			"item": [
				{
					"name": "Mute a host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"end\": 1579098130,\n  \"message\": \"Muting this host for a test!\",\n  \"override\": false\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/host/:host_name/mute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"host",
								":host_name",
								"mute"
							],
							"variable": [
								{
									"key": "host_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Mute a host."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"end\": 1579098130,\n  \"message\": \"Muting this host for a test!\",\n  \"override\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/host/:host_name/mute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"host",
										":host_name",
										"mute"
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"action\": \"Muted\",\n  \"end\": 1579098130,\n  \"hostname\": \"test.host\",\n  \"message\": \"Muting this host for a test!\"\n}"
						},
						{
							"name": "Invalid Parameter Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"end\": 1579098130,\n  \"message\": \"Muting this host for a test!\",\n  \"override\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/host/:host_name/mute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"host",
										":host_name",
										"mute"
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"end\": 1579098130,\n  \"message\": \"Muting this host for a test!\",\n  \"override\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/host/:host_name/mute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"host",
										":host_name",
										"mute"
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"end\": 1579098130,\n  \"message\": \"Muting this host for a test!\",\n  \"override\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/host/:host_name/mute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"host",
										":host_name",
										"mute"
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Unmute a host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/host/:host_name/unmute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"host",
								":host_name",
								"unmute"
							],
							"variable": [
								{
									"key": "host_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Unmutes a host. This endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/host/:host_name/unmute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"host",
										":host_name",
										"unmute"
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"action\": \"Muted\",\n  \"end\": 1579098130,\n  \"hostname\": \"test.host\",\n  \"message\": \"Muting this host for a test!\"\n}"
						},
						{
							"name": "Invalid Parameter Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/host/:host_name/unmute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"host",
										":host_name",
										"unmute"
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/host/:host_name/unmute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"host",
										":host_name",
										"unmute"
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/host/:host_name/unmute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"host",
										":host_name",
										"unmute"
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all hosts for your organization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/hosts?filter=tempor Ut sed velit&sort_field=tempor Ut sed velit&sort_dir=tempor Ut sed velit&start=-62147425&count=-62147425&from=-62147425&include_muted_hosts_data=true&include_hosts_metadata=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"hosts"
							],
							"query": [
								{
									"key": "filter",
									"value": "tempor Ut sed velit",
									"description": "String to filter search results."
								},
								{
									"key": "sort_field",
									"value": "tempor Ut sed velit",
									"description": "Sort hosts by this field."
								},
								{
									"key": "sort_dir",
									"value": "tempor Ut sed velit",
									"description": "Direction of sort. Options include `asc` and `desc`."
								},
								{
									"key": "start",
									"value": "-62147425",
									"description": "Host result to start search from."
								},
								{
									"key": "count",
									"value": "-62147425",
									"description": "Number of hosts to return. Max 1000."
								},
								{
									"key": "from",
									"value": "-62147425",
									"description": "Number of seconds since UNIX epoch from which you want to search your hosts."
								},
								{
									"key": "include_muted_hosts_data",
									"value": "true",
									"description": "Include information on the muted status of hosts and when the mute expires."
								},
								{
									"key": "include_hosts_metadata",
									"value": "true",
									"description": "Include additional metadata about the hosts (agent_version, machine, platform, processor, etc.)."
								}
							]
						},
						"description": "This endpoint allows searching for hosts by name, alias, or tag.\nHosts live within the past 3 hours are included by default.\nRetention is 7 days.\nResults are paginated with a max of 1000 results at a time."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hosts?filter=tempor Ut sed velit&sort_field=tempor Ut sed velit&sort_dir=tempor Ut sed velit&start=-62147425&count=-62147425&from=-62147425&include_muted_hosts_data=true&include_hosts_metadata=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hosts"
									],
									"query": [
										{
											"key": "filter",
											"value": "tempor Ut sed velit",
											"description": "String to filter search results."
										},
										{
											"key": "sort_field",
											"value": "tempor Ut sed velit",
											"description": "Sort hosts by this field."
										},
										{
											"key": "sort_dir",
											"value": "tempor Ut sed velit",
											"description": "Direction of sort. Options include `asc` and `desc`."
										},
										{
											"key": "start",
											"value": "-62147425",
											"description": "Host result to start search from."
										},
										{
											"key": "count",
											"value": "-62147425",
											"description": "Number of hosts to return. Max 1000."
										},
										{
											"key": "from",
											"value": "-62147425",
											"description": "Number of seconds since UNIX epoch from which you want to search your hosts."
										},
										{
											"key": "include_muted_hosts_data",
											"value": "true",
											"description": "Include information on the muted status of hosts and when the mute expires."
										},
										{
											"key": "include_hosts_metadata",
											"value": "true",
											"description": "Include additional metadata about the hosts (agent_version, machine, platform, processor, etc.)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"host_list\": [\n    {\n      \"aliases\": [\n        \"mycoolhost-1\",\n        \"mycoolhost-1\"\n      ],\n      \"apps\": [\n        \"agent\",\n        \"agent\"\n      ],\n      \"aws_name\": \"mycoolhost-1\",\n      \"host_name\": \"i-deadbeef\",\n      \"id\": 123456,\n      \"is_muted\": false,\n      \"last_reported_time\": 1565000000,\n      \"meta\": {\n        \"agent_checks\": [\n          [\n            \"ntp\",\n            \"ntp\",\n            \"ntp:d884b5186b651429\",\n            \"OK\",\n            \"\",\n            \"\"\n          ],\n          [\n            \"ntp\",\n            \"ntp\",\n            \"ntp:d884b5186b651429\",\n            \"OK\",\n            \"\",\n            \"\"\n          ]\n        ],\n        \"agent_version\": \"7.32.3\",\n        \"cpuCores\": 1,\n        \"fbsdV\": [\n          \"FreeBSD\",\n          \"FreeBSD\"\n        ],\n        \"gohai\": \"{\\\"cpu\\\":{\\\"cache_size\\\":\\\"8192 KB\\\",\\\"cpu_cores\\\":\\\"1\\\",\\\"cpu_logical_processors\\\":\\\"1\\\",\\\"family\\\":\\\"6\\\",\\\"mhz\\\":\\\"2712.000\\\",\\\"model\\\":\\\"142\\\",\\\"model_name\\\":\\\"Intel(R) Core(TM) i7-8559U CPU @ 2.70GHz\\\",\\\"stepping\\\":\\\"10\\\",\\\"vendor_id\\\":\\\"GenuineIntel\\\"},\\\"filesystem\\\":[{\\\"kb_size\\\":\\\"3966896\\\",\\\"mounted_on\\\":\\\"/dev\\\",\\\"name\\\":\\\"udev\\\"},{\\\"kb_size\\\":\\\"797396\\\",\\\"mounted_on\\\":\\\"/run\\\",\\\"name\\\":\\\"tmpfs\\\"},{\\\"kb_size\\\":\\\"64800356\\\",\\\"mounted_on\\\":\\\"/\\\",\\\"name\\\":\\\"/dev/mapper/vagrant--vg-root\\\"},{\\\"kb_size\\\":\\\"3986972\\\",\\\"mounted_on\\\":\\\"/dev/shm\\\",\\\"name\\\":\\\"tmpfs\\\"},{\\\"kb_size\\\":\\\"5120\\\",\\\"mounted_on\\\":\\\"/run/lock\\\",\\\"name\\\":\\\"tmpfs\\\"},{\\\"kb_size\\\":\\\"3986972\\\",\\\"mounted_on\\\":\\\"/sys/fs/cgroup\\\",\\\"name\\\":\\\"tmpfs\\\"},{\\\"kb_size\\\":\\\"488245288\\\",\\\"mounted_on\\\":\\\"/vagrant\\\",\\\"name\\\":\\\"vagrant\\\"},{\\\"kb_size\\\":\\\"797392\\\",\\\"mounted_on\\\":\\\"/run/user/1000\\\",\\\"name\\\":\\\"tmpfs\\\"}],\\\"memory\\\":{\\\"swap_total\\\":\\\"1003516kB\\\",\\\"total\\\":\\\"7973944kB\\\"},\\\"network\\\":{\\\"interfaces\\\":[{\\\"ipv4\\\":\\\"10.0.2.15\\\",\\\"ipv4-network\\\":\\\"10.0.2.0/24\\\",\\\"ipv6\\\":\\\"fe80::a00:27ff:fec2:be11\\\",\\\"ipv6-network\\\":\\\"fe80::/64\\\",\\\"macaddress\\\":\\\"08:00:27:c2:be:11\\\",\\\"name\\\":\\\"eth0\\\"},{\\\"ipv4\\\":\\\"192.168.122.1\\\",\\\"ipv4-network\\\":\\\"192.168.122.0/24\\\",\\\"macaddress\\\":\\\"52:54:00:6f:1c:bf\\\",\\\"name\\\":\\\"virbr0\\\"}],\\\"ipaddress\\\":\\\"10.0.2.15\\\",\\\"ipaddressv6\\\":\\\"fe80::a00:27ff:fec2:be11\\\",\\\"macaddress\\\":\\\"08:00:27:c2:be:11\\\"},\\\"platform\\\":{\\\"GOOARCH\\\":\\\"amd64\\\",\\\"GOOS\\\":\\\"linux\\\",\\\"goV\\\":\\\"1.16.7\\\",\\\"hardware_platform\\\":\\\"x86_64\\\",\\\"hostname\\\":\\\"vagrant\\\",\\\"kernel_name\\\":\\\"Linux\\\",\\\"kernel_release\\\":\\\"4.15.0-29-generic\\\",\\\"kernel_version\\\":\\\"#31-Ubuntu SMP Tue Jul 17 15:39:52 UTC 2018\\\",\\\"machine\\\":\\\"x86_64\\\",\\\"os\\\":\\\"GNU/Linux\\\",\\\"processor\\\":\\\"x86_64\\\",\\\"pythonV\\\":\\\"2.7.15rc1\\\"}}\",\n        \"install_method\": {\n          \"installer_version\": \"install_script-1.7.1\",\n          \"tool\": \"install_script\",\n          \"tool_version\": \"install_script\"\n        },\n        \"macV\": [\n          \"Mac\",\n          \"Mac\"\n        ],\n        \"machine\": \"amd64\",\n        \"nixV\": [\n          \"Ubuntu\",\n          \"Ubuntu\"\n        ],\n        \"platform\": \"linux\",\n        \"processor\": \"Intel(R) Core(TM) i7-8559U CPU @ 2.70GHz\",\n        \"pythonV\": \"3.8.11\",\n        \"socket-fqdn\": \"vagrant.vm.\",\n        \"socket-hostname\": \"vagrant\",\n        \"winV\": [\n          \"Windows\",\n          \"Windows\"\n        ]\n      },\n      \"metrics\": {\n        \"cpu\": 99,\n        \"iowait\": 3.2,\n        \"load\": 0.5\n      },\n      \"mute_timeout\": 29442737,\n      \"name\": \"i-hostname\",\n      \"sources\": [\n        \"aws\",\n        \"aws\"\n      ],\n      \"tags_by_source\": {\n        \"magna_\": [\n          \"test.example.com.host\",\n          \"test.example.com.host\"\n        ]\n      },\n      \"up\": true\n    },\n    {\n      \"aliases\": [\n        \"mycoolhost-1\",\n        \"mycoolhost-1\"\n      ],\n      \"apps\": [\n        \"agent\",\n        \"agent\"\n      ],\n      \"aws_name\": \"mycoolhost-1\",\n      \"host_name\": \"i-deadbeef\",\n      \"id\": 123456,\n      \"is_muted\": false,\n      \"last_reported_time\": 1565000000,\n      \"meta\": {\n        \"agent_checks\": [\n          [\n            \"ntp\",\n            \"ntp\",\n            \"ntp:d884b5186b651429\",\n            \"OK\",\n            \"\",\n            \"\"\n          ],\n          [\n            \"ntp\",\n            \"ntp\",\n            \"ntp:d884b5186b651429\",\n            \"OK\",\n            \"\",\n            \"\"\n          ]\n        ],\n        \"agent_version\": \"7.32.3\",\n        \"cpuCores\": 1,\n        \"fbsdV\": [\n          \"FreeBSD\",\n          \"FreeBSD\"\n        ],\n        \"gohai\": \"{\\\"cpu\\\":{\\\"cache_size\\\":\\\"8192 KB\\\",\\\"cpu_cores\\\":\\\"1\\\",\\\"cpu_logical_processors\\\":\\\"1\\\",\\\"family\\\":\\\"6\\\",\\\"mhz\\\":\\\"2712.000\\\",\\\"model\\\":\\\"142\\\",\\\"model_name\\\":\\\"Intel(R) Core(TM) i7-8559U CPU @ 2.70GHz\\\",\\\"stepping\\\":\\\"10\\\",\\\"vendor_id\\\":\\\"GenuineIntel\\\"},\\\"filesystem\\\":[{\\\"kb_size\\\":\\\"3966896\\\",\\\"mounted_on\\\":\\\"/dev\\\",\\\"name\\\":\\\"udev\\\"},{\\\"kb_size\\\":\\\"797396\\\",\\\"mounted_on\\\":\\\"/run\\\",\\\"name\\\":\\\"tmpfs\\\"},{\\\"kb_size\\\":\\\"64800356\\\",\\\"mounted_on\\\":\\\"/\\\",\\\"name\\\":\\\"/dev/mapper/vagrant--vg-root\\\"},{\\\"kb_size\\\":\\\"3986972\\\",\\\"mounted_on\\\":\\\"/dev/shm\\\",\\\"name\\\":\\\"tmpfs\\\"},{\\\"kb_size\\\":\\\"5120\\\",\\\"mounted_on\\\":\\\"/run/lock\\\",\\\"name\\\":\\\"tmpfs\\\"},{\\\"kb_size\\\":\\\"3986972\\\",\\\"mounted_on\\\":\\\"/sys/fs/cgroup\\\",\\\"name\\\":\\\"tmpfs\\\"},{\\\"kb_size\\\":\\\"488245288\\\",\\\"mounted_on\\\":\\\"/vagrant\\\",\\\"name\\\":\\\"vagrant\\\"},{\\\"kb_size\\\":\\\"797392\\\",\\\"mounted_on\\\":\\\"/run/user/1000\\\",\\\"name\\\":\\\"tmpfs\\\"}],\\\"memory\\\":{\\\"swap_total\\\":\\\"1003516kB\\\",\\\"total\\\":\\\"7973944kB\\\"},\\\"network\\\":{\\\"interfaces\\\":[{\\\"ipv4\\\":\\\"10.0.2.15\\\",\\\"ipv4-network\\\":\\\"10.0.2.0/24\\\",\\\"ipv6\\\":\\\"fe80::a00:27ff:fec2:be11\\\",\\\"ipv6-network\\\":\\\"fe80::/64\\\",\\\"macaddress\\\":\\\"08:00:27:c2:be:11\\\",\\\"name\\\":\\\"eth0\\\"},{\\\"ipv4\\\":\\\"192.168.122.1\\\",\\\"ipv4-network\\\":\\\"192.168.122.0/24\\\",\\\"macaddress\\\":\\\"52:54:00:6f:1c:bf\\\",\\\"name\\\":\\\"virbr0\\\"}],\\\"ipaddress\\\":\\\"10.0.2.15\\\",\\\"ipaddressv6\\\":\\\"fe80::a00:27ff:fec2:be11\\\",\\\"macaddress\\\":\\\"08:00:27:c2:be:11\\\"},\\\"platform\\\":{\\\"GOOARCH\\\":\\\"amd64\\\",\\\"GOOS\\\":\\\"linux\\\",\\\"goV\\\":\\\"1.16.7\\\",\\\"hardware_platform\\\":\\\"x86_64\\\",\\\"hostname\\\":\\\"vagrant\\\",\\\"kernel_name\\\":\\\"Linux\\\",\\\"kernel_release\\\":\\\"4.15.0-29-generic\\\",\\\"kernel_version\\\":\\\"#31-Ubuntu SMP Tue Jul 17 15:39:52 UTC 2018\\\",\\\"machine\\\":\\\"x86_64\\\",\\\"os\\\":\\\"GNU/Linux\\\",\\\"processor\\\":\\\"x86_64\\\",\\\"pythonV\\\":\\\"2.7.15rc1\\\"}}\",\n        \"install_method\": {\n          \"installer_version\": \"install_script-1.7.1\",\n          \"tool\": \"install_script\",\n          \"tool_version\": \"install_script\"\n        },\n        \"macV\": [\n          \"Mac\",\n          \"Mac\"\n        ],\n        \"machine\": \"amd64\",\n        \"nixV\": [\n          \"Ubuntu\",\n          \"Ubuntu\"\n        ],\n        \"platform\": \"linux\",\n        \"processor\": \"Intel(R) Core(TM) i7-8559U CPU @ 2.70GHz\",\n        \"pythonV\": \"3.8.11\",\n        \"socket-fqdn\": \"vagrant.vm.\",\n        \"socket-hostname\": \"vagrant\",\n        \"winV\": [\n          \"Windows\",\n          \"Windows\"\n        ]\n      },\n      \"metrics\": {\n        \"cpu\": 99,\n        \"iowait\": 3.2,\n        \"load\": 0.5\n      },\n      \"mute_timeout\": 54283511,\n      \"name\": \"i-hostname\",\n      \"sources\": [\n        \"aws\",\n        \"aws\"\n      ],\n      \"tags_by_source\": {\n        \"non_4e8\": [\n          \"test.example.com.host\",\n          \"test.example.com.host\"\n        ],\n        \"officia__d4\": [\n          \"test.example.com.host\",\n          \"test.example.com.host\"\n        ]\n      },\n      \"up\": true\n    }\n  ],\n  \"total_matching\": 1,\n  \"total_returned\": 1\n}"
						},
						{
							"name": "Invalid Parameter Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hosts?filter=tempor Ut sed velit&sort_field=tempor Ut sed velit&sort_dir=tempor Ut sed velit&start=-62147425&count=-62147425&from=-62147425&include_muted_hosts_data=true&include_hosts_metadata=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hosts"
									],
									"query": [
										{
											"key": "filter",
											"value": "tempor Ut sed velit",
											"description": "String to filter search results."
										},
										{
											"key": "sort_field",
											"value": "tempor Ut sed velit",
											"description": "Sort hosts by this field."
										},
										{
											"key": "sort_dir",
											"value": "tempor Ut sed velit",
											"description": "Direction of sort. Options include `asc` and `desc`."
										},
										{
											"key": "start",
											"value": "-62147425",
											"description": "Host result to start search from."
										},
										{
											"key": "count",
											"value": "-62147425",
											"description": "Number of hosts to return. Max 1000."
										},
										{
											"key": "from",
											"value": "-62147425",
											"description": "Number of seconds since UNIX epoch from which you want to search your hosts."
										},
										{
											"key": "include_muted_hosts_data",
											"value": "true",
											"description": "Include information on the muted status of hosts and when the mute expires."
										},
										{
											"key": "include_hosts_metadata",
											"value": "true",
											"description": "Include additional metadata about the hosts (agent_version, machine, platform, processor, etc.)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hosts?filter=tempor Ut sed velit&sort_field=tempor Ut sed velit&sort_dir=tempor Ut sed velit&start=-62147425&count=-62147425&from=-62147425&include_muted_hosts_data=true&include_hosts_metadata=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hosts"
									],
									"query": [
										{
											"key": "filter",
											"value": "tempor Ut sed velit",
											"description": "String to filter search results."
										},
										{
											"key": "sort_field",
											"value": "tempor Ut sed velit",
											"description": "Sort hosts by this field."
										},
										{
											"key": "sort_dir",
											"value": "tempor Ut sed velit",
											"description": "Direction of sort. Options include `asc` and `desc`."
										},
										{
											"key": "start",
											"value": "-62147425",
											"description": "Host result to start search from."
										},
										{
											"key": "count",
											"value": "-62147425",
											"description": "Number of hosts to return. Max 1000."
										},
										{
											"key": "from",
											"value": "-62147425",
											"description": "Number of seconds since UNIX epoch from which you want to search your hosts."
										},
										{
											"key": "include_muted_hosts_data",
											"value": "true",
											"description": "Include information on the muted status of hosts and when the mute expires."
										},
										{
											"key": "include_hosts_metadata",
											"value": "true",
											"description": "Include additional metadata about the hosts (agent_version, machine, platform, processor, etc.)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hosts?filter=tempor Ut sed velit&sort_field=tempor Ut sed velit&sort_dir=tempor Ut sed velit&start=-62147425&count=-62147425&from=-62147425&include_muted_hosts_data=true&include_hosts_metadata=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hosts"
									],
									"query": [
										{
											"key": "filter",
											"value": "tempor Ut sed velit",
											"description": "String to filter search results."
										},
										{
											"key": "sort_field",
											"value": "tempor Ut sed velit",
											"description": "Sort hosts by this field."
										},
										{
											"key": "sort_dir",
											"value": "tempor Ut sed velit",
											"description": "Direction of sort. Options include `asc` and `desc`."
										},
										{
											"key": "start",
											"value": "-62147425",
											"description": "Host result to start search from."
										},
										{
											"key": "count",
											"value": "-62147425",
											"description": "Number of hosts to return. Max 1000."
										},
										{
											"key": "from",
											"value": "-62147425",
											"description": "Number of seconds since UNIX epoch from which you want to search your hosts."
										},
										{
											"key": "include_muted_hosts_data",
											"value": "true",
											"description": "Include information on the muted status of hosts and when the mute expires."
										},
										{
											"key": "include_hosts_metadata",
											"value": "true",
											"description": "Include additional metadata about the hosts (agent_version, machine, platform, processor, etc.)."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get the total number of active hosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/hosts/totals?from=-62147425",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"hosts",
								"totals"
							],
							"query": [
								{
									"key": "from",
									"value": "-62147425",
									"description": "Number of seconds from which you want to get total number of active hosts."
								}
							]
						},
						"description": "This endpoint returns the total number of active and up hosts in your Datadog account.\nActive means the host has reported in the past hour, and up means it has reported in the past two hours."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hosts/totals?from=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hosts",
										"totals"
									],
									"query": [
										{
											"key": "from",
											"value": "-62147425",
											"description": "Number of seconds from which you want to get total number of active hosts."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_active\": 70097963,\n  \"total_up\": 11529364\n}"
						},
						{
							"name": "Invalid Parameter Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hosts/totals?from=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hosts",
										"totals"
									],
									"query": [
										{
											"key": "from",
											"value": "-62147425",
											"description": "Number of seconds from which you want to get total number of active hosts."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hosts/totals?from=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hosts",
										"totals"
									],
									"query": [
										{
											"key": "from",
											"value": "-62147425",
											"description": "Number of seconds from which you want to get total number of active hosts."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hosts/totals?from=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hosts",
										"totals"
									],
									"query": [
										{
											"key": "from",
											"value": "-62147425",
											"description": "Number of seconds from which you want to get total number of active hosts."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Get information about your live hosts in Datadog."
		},
		{
			"name": "IP Allowlist",
			"item": [
				{
					"name": "Get IP Allowlist",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/ip_allowlist",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"ip_allowlist"
							]
						},
						"description": "Returns the IP allowlist and its enabled or disabled state."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/ip_allowlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ip_allowlist"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"type\": \"ip_allowlist\",\n    \"attributes\": {\n      \"enabled\": \"<boolean>\",\n      \"entries\": [\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        }\n      ]\n    },\n    \"id\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/ip_allowlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ip_allowlist"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/ip_allowlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ip_allowlist"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/ip_allowlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ip_allowlist"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update IP Allowlist",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"ip_allowlist\",\n    \"attributes\": {\n      \"enabled\": \"<boolean>\",\n      \"entries\": [\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        }\n      ]\n    },\n    \"id\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/ip_allowlist",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"ip_allowlist"
							]
						},
						"description": "Edit the entries in the IP allowlist, and enable or disable it."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"ip_allowlist\",\n    \"attributes\": {\n      \"enabled\": \"<boolean>\",\n      \"entries\": [\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        }\n      ]\n    },\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ip_allowlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ip_allowlist"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"type\": \"ip_allowlist\",\n    \"attributes\": {\n      \"enabled\": \"<boolean>\",\n      \"entries\": [\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        }\n      ]\n    },\n    \"id\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"ip_allowlist\",\n    \"attributes\": {\n      \"enabled\": \"<boolean>\",\n      \"entries\": [\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        }\n      ]\n    },\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ip_allowlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ip_allowlist"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"ip_allowlist\",\n    \"attributes\": {\n      \"enabled\": \"<boolean>\",\n      \"entries\": [\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        }\n      ]\n    },\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ip_allowlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ip_allowlist"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"ip_allowlist\",\n    \"attributes\": {\n      \"enabled\": \"<boolean>\",\n      \"entries\": [\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        }\n      ]\n    },\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ip_allowlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ip_allowlist"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"ip_allowlist\",\n    \"attributes\": {\n      \"enabled\": \"<boolean>\",\n      \"entries\": [\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"data\": {\n            \"type\": \"ip_allowlist_entry\",\n            \"attributes\": {\n              \"cidr_block\": \"<string>\",\n              \"created_at\": \"<dateTime>\",\n              \"modified_at\": \"<dateTime>\",\n              \"note\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n          }\n        }\n      ]\n    },\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/ip_allowlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"ip_allowlist"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "The IP allowlist API is used to manage the IP addresses that\ncan access the Datadog API and web UI. It does not block\naccess to intake APIs or public dashboards.\n\nThis is an enterprise-only feature. Request access by\ncontacting Datadog support."
		},
		{
			"name": "IP Ranges",
			"item": [
				{
					"name": "List IP Ranges",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{subdomain}}.{{site}}/",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{site}}"
							],
							"path": [
								""
							]
						},
						"description": "Get information about Datadog IP ranges."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "https://{{subdomain}}.{{site}}/",
									"protocol": "https",
									"host": [
										"{{subdomain}}",
										"{{site}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"agents\": {\n    \"prefixes_ipv4\": [\n      \"qui dolor\",\n      \"Ut in\"\n    ],\n    \"prefixes_ipv6\": [\n      \"irure occaecat Ut elit\",\n      \"Ut est voluptate\"\n    ]\n  },\n  \"api\": {\n    \"prefixes_ipv4\": [\n      \"do irure\",\n      \"id dolor magna consequat\"\n    ],\n    \"prefixes_ipv6\": [\n      \"non magna enim\",\n      \"dolor magna labore\"\n    ]\n  },\n  \"apm\": {\n    \"prefixes_ipv4\": [\n      \"enim dolo\",\n      \"incididunt sunt voluptate exercitati\"\n    ],\n    \"prefixes_ipv6\": [\n      \"Duis elit minim occaecat\",\n      \"qui sit \"\n    ]\n  },\n  \"logs\": {\n    \"prefixes_ipv4\": [\n      \"aute \",\n      \"ullamco commodo Ut Excepteur\"\n    ],\n    \"prefixes_ipv6\": [\n      \"veniam ex\",\n      \"incididunt consectetur dolor est\"\n    ]\n  },\n  \"modified\": \"2019-10-31-20-00-00\",\n  \"orchestrator\": {\n    \"prefixes_ipv4\": [\n      \"nulla adipisicing\",\n      \"nostrud do enim laborum\"\n    ],\n    \"prefixes_ipv6\": [\n      \"mollit sed ut\",\n      \"est\"\n    ]\n  },\n  \"process\": {\n    \"prefixes_ipv4\": [\n      \"Excepteur nulla mollit\",\n      \"labore nulla esse\"\n    ],\n    \"prefixes_ipv6\": [\n      \"nostrud laborum dolor\",\n      \"do sed nulla elit\"\n    ]\n  },\n  \"remote-configuration\": {\n    \"prefixes_ipv4\": [\n      \"sunt tempor\",\n      \"nostrud ipsum\"\n    ],\n    \"prefixes_ipv6\": [\n      \"sunt Dui\",\n      \"sit amet\"\n    ]\n  },\n  \"synthetics\": {\n    \"prefixes_ipv4\": [\n      \"in exercitation eu sunt\",\n      \"velit pariatur consecte\"\n    ],\n    \"prefixes_ipv4_by_location\": {\n      \"pariatur7\": [\n        \"elit adipisicing\",\n        \"reprehenderit eiusmod Duis\"\n      ]\n    },\n    \"prefixes_ipv6\": [\n      \"cupidatat magna enim minim\",\n      \"Excepteur in dolor do eiusmod\"\n    ],\n    \"prefixes_ipv6_by_location\": {\n      \"est1\": [\n        \"Ut\",\n        \"dolor sed nulla\"\n      ],\n      \"magna_3b\": [\n        \"tempor Lorem do qui enim\",\n        \"dolore eiusmod\"\n      ]\n    }\n  },\n  \"synthetics-private-locations\": {\n    \"prefixes_ipv4\": [\n      \"labo\",\n      \"s\"\n    ],\n    \"prefixes_ipv6\": [\n      \"nisi incididunt\",\n      \"l\"\n    ]\n  },\n  \"version\": 11,\n  \"webhooks\": {\n    \"prefixes_ipv4\": [\n      \"id ullamco deserunt\",\n      \"consequat sunt tempor minim\"\n    ],\n    \"prefixes_ipv6\": [\n      \"fugiat est dolore quis\",\n      \"proident sunt aliquip\"\n    ]\n  }\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "https://{{subdomain}}.{{site}}/",
									"protocol": "https",
									"host": [
										"{{subdomain}}",
										"{{site}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Get a list of IP prefixes belonging to Datadog."
		},
		{
			"name": "Key Management",
			"item": [
				{
					"name": "Create an application key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"hash\": \"1234512345123459cda4eb9ced49a3d84fd0138c\",\n  \"name\": \"example user\",\n  \"owner\": \"example.com\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/application_key",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"application_key"
							]
						},
						"description": "Create an application key with a given name."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"hash\": \"1234512345123459cda4eb9ced49a3d84fd0138c\",\n  \"name\": \"example user\",\n  \"owner\": \"example.com\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/application_key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"application_key"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"application_key\": {\n    \"hash\": \"1234512345123459cda4eb9ced49a3d84fd0138c\",\n    \"name\": \"app_key\",\n    \"owner\": \"test_user\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"hash\": \"1234512345123459cda4eb9ced49a3d84fd0138c\",\n  \"name\": \"example user\",\n  \"owner\": \"example.com\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/application_key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"application_key"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"hash\": \"1234512345123459cda4eb9ced49a3d84fd0138c\",\n  \"name\": \"example user\",\n  \"owner\": \"example.com\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/application_key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"application_key"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"hash\": \"1234512345123459cda4eb9ced49a3d84fd0138c\",\n  \"name\": \"example user\",\n  \"owner\": \"example.com\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/application_key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"application_key"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"hash\": \"1234512345123459cda4eb9ced49a3d84fd0138c\",\n  \"name\": \"example user\",\n  \"owner\": \"example.com\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/application_key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"application_key"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all API keys",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/api_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>&filter[modified_at][start]=<string>&filter[modified_at][end]=<string>&include=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"api_keys"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page. The maximum allowed value is 100."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "API key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter API keys by the specified string."
								},
								{
									"key": "filter[created_at][start]",
									"value": "<string>",
									"description": "Only include API keys created on or after the specified date."
								},
								{
									"key": "filter[created_at][end]",
									"value": "<string>",
									"description": "Only include API keys created on or before the specified date."
								},
								{
									"key": "filter[modified_at][start]",
									"value": "<string>",
									"description": "Only include API keys modified on or after the specified date."
								},
								{
									"key": "filter[modified_at][end]",
									"value": "<string>",
									"description": "Only include API keys modified on or before the specified date."
								},
								{
									"key": "include",
									"value": "<string>",
									"description": "Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`."
								}
							]
						},
						"description": "List all API keys available for your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>&filter[modified_at][start]=<string>&filter[modified_at][end]=<string>&include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "API key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter API keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include API keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include API keys created on or before the specified date."
										},
										{
											"key": "filter[modified_at][start]",
											"value": "<string>",
											"description": "Only include API keys modified on or after the specified date."
										},
										{
											"key": "filter[modified_at][end]",
											"value": "<string>",
											"description": "Only include API keys modified on or before the specified date."
										},
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"modified_at\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"created_by\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        },\n        \"modified_by\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      },\n      \"type\": \"api_keys\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"modified_at\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"created_by\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        },\n        \"modified_by\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      },\n      \"type\": \"api_keys\"\n    }\n  ],\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>&filter[modified_at][start]=<string>&filter[modified_at][end]=<string>&include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "API key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter API keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include API keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include API keys created on or before the specified date."
										},
										{
											"key": "filter[modified_at][start]",
											"value": "<string>",
											"description": "Only include API keys modified on or after the specified date."
										},
										{
											"key": "filter[modified_at][end]",
											"value": "<string>",
											"description": "Only include API keys modified on or before the specified date."
										},
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>&filter[modified_at][start]=<string>&filter[modified_at][end]=<string>&include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "API key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter API keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include API keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include API keys created on or before the specified date."
										},
										{
											"key": "filter[modified_at][start]",
											"value": "<string>",
											"description": "Only include API keys modified on or after the specified date."
										},
										{
											"key": "filter[modified_at][end]",
											"value": "<string>",
											"description": "Only include API keys modified on or before the specified date."
										},
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>&filter[modified_at][start]=<string>&filter[modified_at][end]=<string>&include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "API key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter API keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include API keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include API keys created on or before the specified date."
										},
										{
											"key": "filter[modified_at][start]",
											"value": "<string>",
											"description": "Only include API keys modified on or after the specified date."
										},
										{
											"key": "filter[modified_at][end]",
											"value": "<string>",
											"description": "Only include API keys modified on or before the specified date."
										},
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create an API key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\"\n    },\n    \"type\": \"api_keys\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/api_keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"api_keys"
							]
						},
						"description": "Create an API key."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\"\n    },\n    \"type\": \"api_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<string>\",\n      \"key\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"modified_at\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"created_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      },\n      \"modified_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    },\n    \"type\": \"api_keys\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\"\n    },\n    \"type\": \"api_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\"\n    },\n    \"type\": \"api_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\"\n    },\n    \"type\": \"api_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete an API key",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"api_keys",
								":api_key_id"
							],
							"variable": [
								{
									"key": "api_key_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete an API key."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get API key",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id?include=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"api_keys",
								":api_key_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>",
									"description": "Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`."
								}
							],
							"variable": [
								{
									"key": "api_key_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get an API key."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`."
										}
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<string>\",\n      \"key\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"modified_at\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"created_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      },\n      \"modified_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    },\n    \"type\": \"api_keys\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`."
										}
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`."
										}
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`."
										}
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Edit an API key",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"api_keys\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"api_keys",
								":api_key_id"
							],
							"variable": [
								{
									"key": "api_key_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update an API key."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"api_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<string>\",\n      \"key\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"modified_at\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"created_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      },\n      \"modified_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    },\n    \"type\": \"api_keys\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"api_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"api_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"api_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"api_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all application keys",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"application_keys"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page. The maximum allowed value is 100."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter application keys by the specified string."
								},
								{
									"key": "filter[created_at][start]",
									"value": "<string>",
									"description": "Only include application keys created on or after the specified date."
								},
								{
									"key": "filter[created_at][end]",
									"value": "<string>",
									"description": "Only include application keys created on or before the specified date."
								}
							]
						},
						"description": "List all application keys available for your org"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"name\": \"<string>\",\n        \"scopes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"owned_by\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      },\n      \"type\": \"application_keys\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"name\": \"<string>\",\n        \"scopes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"owned_by\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      },\n      \"type\": \"application_keys\"\n    }\n  ],\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete an application key",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "app_key_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete an application key"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get an application key",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id?include=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"application_keys",
								":app_key_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>",
									"description": "Resource path for related resources to include in the response. Only `owned_by` is supported."
								}
							],
							"variable": [
								{
									"key": "app_key_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get an application key for your org."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Resource path for related resources to include in the response. Only `owned_by` is supported."
										}
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<string>\",\n      \"key\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"owned_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    },\n    \"type\": \"application_keys\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Resource path for related resources to include in the response. Only `owned_by` is supported."
										}
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Resource path for related resources to include in the response. Only `owned_by` is supported."
										}
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Resource path for related resources to include in the response. Only `owned_by` is supported."
										}
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Resource path for related resources to include in the response. Only `owned_by` is supported."
										}
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Edit an application key",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "app_key_id",
									"value": "<string>"
								}
							]
						},
						"description": "Edit an application key"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<string>\",\n      \"key\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"owned_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    },\n    \"type\": \"application_keys\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all application keys owned by current user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/current_user/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"current_user",
								"application_keys"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page. The maximum allowed value is 100."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter application keys by the specified string."
								},
								{
									"key": "filter[created_at][start]",
									"value": "<string>",
									"description": "Only include application keys created on or after the specified date."
								},
								{
									"key": "filter[created_at][end]",
									"value": "<string>",
									"description": "Only include application keys created on or before the specified date."
								}
							]
						},
						"description": "List all application keys available for current user"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"name\": \"<string>\",\n        \"scopes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"owned_by\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      },\n      \"type\": \"application_keys\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"name\": \"<string>\",\n        \"scopes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"owned_by\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      },\n      \"type\": \"application_keys\"\n    }\n  ],\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create an application key for current user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"application_keys\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/current_user/application_keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"current_user",
								"application_keys"
							]
						},
						"description": "Create an application key for current user"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<string>\",\n      \"key\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"owned_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    },\n    \"type\": \"application_keys\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete an application key owned by current user",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"current_user",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "app_key_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete an application key owned by current user"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get one application key owned by current user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"current_user",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "app_key_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get an application key owned by current user"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<string>\",\n      \"key\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"owned_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    },\n    \"type\": \"application_keys\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Edit an application key owned by current user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"current_user",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "app_key_id",
									"value": "<string>"
								}
							]
						},
						"description": "Edit an application key owned by current user"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<string>\",\n      \"key\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"owned_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    },\n    \"type\": \"application_keys\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Manage your Datadog API and application keys. You need an API key and\nan application key for a user with the required permissions to interact\nwith these endpoints. The full list of API and application keys can be\nseen on your [Datadog API page](https://app.datadoghq.com/account/settings#api)."
		},
		{
			"name": "Logs",
			"item": [
				{
					"name": "Send logs",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "HTTP header used to compress the media-type.",
								"key": "Content-Encoding",
								"value": "identity"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  },\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  }\n]",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://http-intake.logs.{{site}}/api/v2/logs?ddtags=<string>",
							"protocol": "https",
							"host": [
								"http-intake",
								"logs",
								"{{site}}"
							],
							"path": [
								"api",
								"v2",
								"logs"
							],
							"query": [
								{
									"key": "ddtags",
									"value": "<string>",
									"description": "Log tags can be passed as query parameters with `text/plain` content type."
								}
							]
						},
						"description": "Send your logs to your Datadog platform over HTTP. Limits per HTTP request are:\n\n- Maximum content size per payload (uncompressed): 5MB\n- Maximum size for a single log: 1MB\n- Maximum array size if sending multiple logs in an array: 1000 entries\n\nAny log exceeding 1MB is accepted and truncated by Datadog:\n- For a single log request, the API truncates the log at 1MB and returns a 2xx.\n- For a multi-logs request, the API processes all logs, truncates only logs larger than 1MB, and returns a 2xx.\n\nDatadog recommends sending your logs compressed.\nAdd the `Content-Encoding: gzip` header to the request when sending compressed logs.\nLog events can be submitted with a timestamp that is up to 18 hours in the past.\n\nThe status codes answered by the HTTP API are:\n- 202: Accepted: the request has been accepted for processing\n- 400: Bad request (likely an issue in the payload formatting)\n- 401: Unauthorized (likely a missing API Key)\n- 403: Permission issue (likely using an invalid API Key)\n- 408: Request Timeout, request should be retried after some time\n- 413: Payload too large (batch is above 5MB uncompressed)\n- 429: Too Many Requests, request should be retried after some time\n- 500: Internal Server Error, the server encountered an unexpected condition that prevented it from fulfilling the request, request should be retried after some time\n- 503: Service Unavailable, the server is not ready to handle the request probably because it is overloaded, request should be retried after some time"
					},
					"response": [
						{
							"name": "Request accepted for processing (always 202 empty JSON).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "gzip"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  },\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{subdomain}}.{{site}}/api/v2/logs?ddtags=<string>",
									"protocol": "https",
									"host": [
										"{{subdomain}}",
										"{{site}}"
									],
									"path": [
										"api",
										"v2",
										"logs"
									],
									"query": [
										{
											"key": "ddtags",
											"value": "<string>",
											"description": "Log tags can be passed as query parameters with `text/plain` content type."
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "gzip"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  },\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{subdomain}}.{{site}}/api/v2/logs?ddtags=<string>",
									"protocol": "https",
									"host": [
										"{{subdomain}}",
										"{{site}}"
									],
									"path": [
										"api",
										"v2",
										"logs"
									],
									"query": [
										{
											"key": "ddtags",
											"value": "<string>",
											"description": "Log tags can be passed as query parameters with `text/plain` content type."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "gzip"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  },\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{subdomain}}.{{site}}/api/v2/logs?ddtags=<string>",
									"protocol": "https",
									"host": [
										"{{subdomain}}",
										"{{site}}"
									],
									"path": [
										"api",
										"v2",
										"logs"
									],
									"query": [
										{
											"key": "ddtags",
											"value": "<string>",
											"description": "Log tags can be passed as query parameters with `text/plain` content type."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "gzip"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  },\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{subdomain}}.{{site}}/api/v2/logs?ddtags=<string>",
									"protocol": "https",
									"host": [
										"{{subdomain}}",
										"{{site}}"
									],
									"path": [
										"api",
										"v2",
										"logs"
									],
									"query": [
										{
											"key": "ddtags",
											"value": "<string>",
											"description": "Log tags can be passed as query parameters with `text/plain` content type."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Request Timeout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "gzip"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  },\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{subdomain}}.{{site}}/api/v2/logs?ddtags=<string>",
									"protocol": "https",
									"host": [
										"{{subdomain}}",
										"{{site}}"
									],
									"path": [
										"api",
										"v2",
										"logs"
									],
									"query": [
										{
											"key": "ddtags",
											"value": "<string>",
											"description": "Log tags can be passed as query parameters with `text/plain` content type."
										}
									]
								}
							},
							"status": "Request Timeout",
							"code": 408,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Payload Too Large",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "gzip"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  },\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{subdomain}}.{{site}}/api/v2/logs?ddtags=<string>",
									"protocol": "https",
									"host": [
										"{{subdomain}}",
										"{{site}}"
									],
									"path": [
										"api",
										"v2",
										"logs"
									],
									"query": [
										{
											"key": "ddtags",
											"value": "<string>",
											"description": "Log tags can be passed as query parameters with `text/plain` content type."
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "gzip"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  },\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{subdomain}}.{{site}}/api/v2/logs?ddtags=<string>",
									"protocol": "https",
									"host": [
										"{{subdomain}}",
										"{{site}}"
									],
									"path": [
										"api",
										"v2",
										"logs"
									],
									"query": [
										{
											"key": "ddtags",
											"value": "<string>",
											"description": "Log tags can be passed as query parameters with `text/plain` content type."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "gzip"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  },\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{subdomain}}.{{site}}/api/v2/logs?ddtags=<string>",
									"protocol": "https",
									"host": [
										"{{subdomain}}",
										"{{site}}"
									],
									"path": [
										"api",
										"v2",
										"logs"
									],
									"query": [
										{
											"key": "ddtags",
											"value": "<string>",
											"description": "Log tags can be passed as query parameters with `text/plain` content type."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "gzip"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  },\n  {\n    \"message\": \"<string>\",\n    \"ddsource\": \"<string>\",\n    \"ddtags\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"service\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{subdomain}}.{{site}}/api/v2/logs?ddtags=<string>",
									"protocol": "https",
									"host": [
										"{{subdomain}}",
										"{{site}}"
									],
									"path": [
										"api",
										"v2",
										"logs"
									],
									"query": [
										{
											"key": "ddtags",
											"value": "<string>",
											"description": "Log tags can be passed as query parameters with `text/plain` content type."
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Aggregate events",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"indexes\": [\n      \"*\"\n    ],\n    \"query\": \"*\",\n    \"storage_tier\": \"indexes\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"median\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"cardinality\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"timeOffset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/analytics/aggregate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"analytics",
								"aggregate"
							]
						},
						"description": "The API endpoint to aggregate events into buckets and compute metrics and timeseries."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"indexes\": [\n      \"*\"\n    ],\n    \"query\": \"*\",\n    \"storage_tier\": \"indexes\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"median\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"cardinality\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"timeOffset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"buckets\": [\n      {\n        \"by\": {\n          \"in__11\": {\n            \"description\": \"The values for each group by\"\n          },\n          \"magna_c7\": {\n            \"description\": \"The values for each group by\"\n          }\n        },\n        \"computes\": {\n          \"id_3\": \"<string>\"\n        }\n      },\n      {\n        \"by\": {\n          \"cillum_d9\": {\n            \"description\": \"The values for each group by\"\n          },\n          \"est_ec\": {\n            \"description\": \"The values for each group by\"\n          },\n          \"in_5a4\": {\n            \"description\": \"The values for each group by\"\n          }\n        },\n        \"computes\": {\n          \"ex_b\": \"<string>\"\n        }\n      }\n    ]\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"done\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"indexes\": [\n      \"*\"\n    ],\n    \"query\": \"*\",\n    \"storage_tier\": \"indexes\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"median\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"cardinality\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"timeOffset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"indexes\": [\n      \"*\"\n    ],\n    \"query\": \"*\",\n    \"storage_tier\": \"indexes\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"median\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"cardinality\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"timeOffset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"indexes\": [\n      \"*\"\n    ],\n    \"query\": \"*\",\n    \"storage_tier\": \"indexes\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"median\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"cardinality\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"timeOffset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a list of logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/events?filter[query]=<string>&filter[indexes]=<string>,<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&filter[storage_tier]=indexes&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"events"
							],
							"query": [
								{
									"key": "filter[query]",
									"value": "<string>",
									"description": "Search query following logs syntax."
								},
								{
									"key": "filter[indexes]",
									"value": "<string>,<string>",
									"description": "For customers with multiple indexes, the indexes to search.\nDefaults to '*' which means all indexes"
								},
								{
									"key": "filter[from]",
									"value": "<dateTime>",
									"description": "Minimum timestamp for requested logs."
								},
								{
									"key": "filter[to]",
									"value": "<dateTime>",
									"description": "Maximum timestamp for requested logs."
								},
								{
									"key": "filter[storage_tier]",
									"value": "indexes",
									"description": "Specifies the storage type to be used"
								},
								{
									"key": "sort",
									"value": "-timestamp",
									"description": "Order of logs in results."
								},
								{
									"key": "page[cursor]",
									"value": "<string>",
									"description": "List following results with a cursor provided in the previous query."
								},
								{
									"key": "page[limit]",
									"value": "10",
									"description": "Maximum number of logs in the response."
								}
							]
						},
						"description": "List endpoint returns logs that match a log search query.\n[Results are paginated][1].\n\nUse this endpoint to see your latest logs.\n\n**If you are considering archiving logs for your organization,\nconsider use of the Datadog archive capabilities instead of the log list API.\nSee [Datadog Logs Archive documentation][2].**\n\n[1]: /logs/guide/collect-multiple-logs-with-pagination\n[2]: https://docs.datadoghq.com/logs/archives"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/events?filter[query]=<string>&filter[indexes]=<string>,<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&filter[storage_tier]=indexes&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following logs syntax."
										},
										{
											"key": "filter[indexes]",
											"value": "<string>,<string>",
											"description": "For customers with multiple indexes, the indexes to search.\nDefaults to '*' which means all indexes"
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested logs."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested logs."
										},
										{
											"key": "filter[storage_tier]",
											"value": "indexes",
											"description": "Specifies the storage type to be used"
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of logs in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of logs in the response."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"consectetur__9\": {},\n          \"aliquip_43\": {}\n        },\n        \"host\": \"<string>\",\n        \"message\": \"<string>\",\n        \"service\": \"<string>\",\n        \"status\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"log\"\n    },\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"nisia4a\": {},\n          \"dolor4\": {}\n        },\n        \"host\": \"<string>\",\n        \"message\": \"<string>\",\n        \"service\": \"<string>\",\n        \"status\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"log\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"done\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/events?filter[query]=<string>&filter[indexes]=<string>,<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&filter[storage_tier]=indexes&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following logs syntax."
										},
										{
											"key": "filter[indexes]",
											"value": "<string>,<string>",
											"description": "For customers with multiple indexes, the indexes to search.\nDefaults to '*' which means all indexes"
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested logs."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested logs."
										},
										{
											"key": "filter[storage_tier]",
											"value": "indexes",
											"description": "Specifies the storage type to be used"
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of logs in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of logs in the response."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/events?filter[query]=<string>&filter[indexes]=<string>,<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&filter[storage_tier]=indexes&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following logs syntax."
										},
										{
											"key": "filter[indexes]",
											"value": "<string>,<string>",
											"description": "For customers with multiple indexes, the indexes to search.\nDefaults to '*' which means all indexes"
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested logs."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested logs."
										},
										{
											"key": "filter[storage_tier]",
											"value": "indexes",
											"description": "Specifies the storage type to be used"
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of logs in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of logs in the response."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/events?filter[query]=<string>&filter[indexes]=<string>,<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&filter[storage_tier]=indexes&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following logs syntax."
										},
										{
											"key": "filter[indexes]",
											"value": "<string>,<string>",
											"description": "For customers with multiple indexes, the indexes to search.\nDefaults to '*' which means all indexes"
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested logs."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested logs."
										},
										{
											"key": "filter[storage_tier]",
											"value": "indexes",
											"description": "Specifies the storage type to be used"
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of logs in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of logs in the response."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Search logs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"indexes\": [\n      \"*\"\n    ],\n    \"query\": \"*\",\n    \"storage_tier\": \"indexes\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"timeOffset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"timestamp\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/events/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"events",
								"search"
							]
						},
						"description": "List endpoint returns logs that match a log search query.\n[Results are paginated][1].\n\nUse this endpoint to build complex logs filtering and search.\n\n**If you are considering archiving logs for your organization,\nconsider use of the Datadog archive capabilities instead of the log list API.\nSee [Datadog Logs Archive documentation][2].**\n\n[1]: /logs/guide/collect-multiple-logs-with-pagination\n[2]: https://docs.datadoghq.com/logs/archives"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"indexes\": [\n      \"*\"\n    ],\n    \"query\": \"*\",\n    \"storage_tier\": \"indexes\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"timeOffset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"events",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"consectetur__9\": {},\n          \"aliquip_43\": {}\n        },\n        \"host\": \"<string>\",\n        \"message\": \"<string>\",\n        \"service\": \"<string>\",\n        \"status\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"log\"\n    },\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"nisia4a\": {},\n          \"dolor4\": {}\n        },\n        \"host\": \"<string>\",\n        \"message\": \"<string>\",\n        \"service\": \"<string>\",\n        \"status\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"log\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"done\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"indexes\": [\n      \"*\"\n    ],\n    \"query\": \"*\",\n    \"storage_tier\": \"indexes\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"timeOffset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"events",
										"search"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"indexes\": [\n      \"*\"\n    ],\n    \"query\": \"*\",\n    \"storage_tier\": \"indexes\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"timeOffset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"events",
										"search"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"indexes\": [\n      \"*\"\n    ],\n    \"query\": \"*\",\n    \"storage_tier\": \"indexes\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"timeOffset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"events",
										"search"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Search your logs and send them to your Datadog platform over HTTP."
		},
		{
			"name": "Logs Archives",
			"item": [
				{
					"name": "Get archive order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archive-order"
							]
						},
						"description": "Get the current order of your archives.\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archive-order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"type\": \"archive_order\",\n    \"attributes\": {\n      \"archive_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archive-order"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archive-order"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update archive order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"archive_order\",\n    \"attributes\": {\n      \"archive_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archive-order"
							]
						},
						"description": "Update the order of your archives. Since logs are processed sequentially, reordering an archive may change\nthe structure and content of the data processed by other archives.\n\n**Note**: Using the `PUT` method updates your archive's order by replacing the current order\nwith the new one."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"archive_order\",\n    \"attributes\": {\n      \"archive_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archive-order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"type\": \"archive_order\",\n    \"attributes\": {\n      \"archive_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"archive_order\",\n    \"attributes\": {\n      \"archive_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archive-order"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"archive_order\",\n    \"attributes\": {\n      \"archive_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archive-order"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"archive_order\",\n    \"attributes\": {\n      \"archive_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archive-order"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"archive_order\",\n    \"attributes\": {\n      \"archive_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archive-order"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all archives",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives"
							]
						},
						"description": "Get the list of configured logs archives with their definitions."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"type\": \"archives\",\n      \"attributes\": {\n        \"name\": \"<string>\",\n        \"query\": \"<string>\",\n        \"destination\": {\n          \"storage_account\": \"<string>\",\n          \"container\": \"<string>\",\n          \"integration\": {\n            \"tenant_id\": \"<string>\",\n            \"client_id\": \"<string>\"\n          },\n          \"type\": \"azure\",\n          \"path\": \"<string>\",\n          \"region\": \"<string>\"\n        },\n        \"include_tags\": false,\n        \"rehydration_max_scan_size_in_gb\": \"<long>\",\n        \"rehydration_tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"state\": \"FAILING\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"archives\",\n      \"attributes\": {\n        \"name\": \"<string>\",\n        \"query\": \"<string>\",\n        \"destination\": {\n          \"storage_account\": \"<string>\",\n          \"container\": \"<string>\",\n          \"integration\": {\n            \"tenant_id\": \"<string>\",\n            \"client_id\": \"<string>\"\n          },\n          \"type\": \"azure\",\n          \"path\": \"<string>\",\n          \"region\": \"<string>\"\n        },\n        \"include_tags\": false,\n        \"rehydration_max_scan_size_in_gb\": \"<long>\",\n        \"rehydration_tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"state\": \"WORKING_AUTH_LEGACY\"\n      },\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create an archive",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"archives\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"destination\": {\n        \"storage_account\": \"<string>\",\n        \"container\": \"<string>\",\n        \"integration\": {\n          \"tenant_id\": \"<string>\",\n          \"client_id\": \"<string>\"\n        },\n        \"type\": \"azure\",\n        \"path\": \"<string>\",\n        \"region\": \"<string>\"\n      },\n      \"include_tags\": false,\n      \"rehydration_max_scan_size_in_gb\": \"<long>\",\n      \"rehydration_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives"
							]
						},
						"description": "Create an archive in your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"archives\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"destination\": {\n        \"storage_account\": \"<string>\",\n        \"container\": \"<string>\",\n        \"integration\": {\n          \"tenant_id\": \"<string>\",\n          \"client_id\": \"<string>\"\n        },\n        \"type\": \"azure\",\n        \"path\": \"<string>\",\n        \"region\": \"<string>\"\n      },\n      \"include_tags\": false,\n      \"rehydration_max_scan_size_in_gb\": \"<long>\",\n      \"rehydration_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"type\": \"archives\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"destination\": {\n        \"storage_account\": \"<string>\",\n        \"container\": \"<string>\",\n        \"integration\": {\n          \"tenant_id\": \"<string>\",\n          \"client_id\": \"<string>\"\n        },\n        \"type\": \"azure\",\n        \"path\": \"<string>\",\n        \"region\": \"<string>\"\n      },\n      \"include_tags\": false,\n      \"rehydration_max_scan_size_in_gb\": \"<long>\",\n      \"rehydration_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"state\": \"FAILING\"\n    },\n    \"id\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"archives\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"destination\": {\n        \"storage_account\": \"<string>\",\n        \"container\": \"<string>\",\n        \"integration\": {\n          \"tenant_id\": \"<string>\",\n          \"client_id\": \"<string>\"\n        },\n        \"type\": \"azure\",\n        \"path\": \"<string>\",\n        \"region\": \"<string>\"\n      },\n      \"include_tags\": false,\n      \"rehydration_max_scan_size_in_gb\": \"<long>\",\n      \"rehydration_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"archives\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"destination\": {\n        \"storage_account\": \"<string>\",\n        \"container\": \"<string>\",\n        \"integration\": {\n          \"tenant_id\": \"<string>\",\n          \"client_id\": \"<string>\"\n        },\n        \"type\": \"azure\",\n        \"path\": \"<string>\",\n        \"region\": \"<string>\"\n      },\n      \"include_tags\": false,\n      \"rehydration_max_scan_size_in_gb\": \"<long>\",\n      \"rehydration_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"archives\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"destination\": {\n        \"storage_account\": \"<string>\",\n        \"container\": \"<string>\",\n        \"integration\": {\n          \"tenant_id\": \"<string>\",\n          \"client_id\": \"<string>\"\n        },\n        \"type\": \"azure\",\n        \"path\": \"<string>\",\n        \"region\": \"<string>\"\n      },\n      \"include_tags\": false,\n      \"rehydration_max_scan_size_in_gb\": \"<long>\",\n      \"rehydration_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete an archive",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives",
								":archive_id"
							],
							"variable": [
								{
									"key": "archive_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a given archive from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get an archive",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives",
								":archive_id"
							],
							"variable": [
								{
									"key": "archive_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a specific archive from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"type\": \"archives\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"destination\": {\n        \"storage_account\": \"<string>\",\n        \"container\": \"<string>\",\n        \"integration\": {\n          \"tenant_id\": \"<string>\",\n          \"client_id\": \"<string>\"\n        },\n        \"type\": \"azure\",\n        \"path\": \"<string>\",\n        \"region\": \"<string>\"\n      },\n      \"include_tags\": false,\n      \"rehydration_max_scan_size_in_gb\": \"<long>\",\n      \"rehydration_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"state\": \"FAILING\"\n    },\n    \"id\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update an archive",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"archives\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"destination\": {\n        \"storage_account\": \"<string>\",\n        \"container\": \"<string>\",\n        \"integration\": {\n          \"tenant_id\": \"<string>\",\n          \"client_id\": \"<string>\"\n        },\n        \"type\": \"azure\",\n        \"path\": \"<string>\",\n        \"region\": \"<string>\"\n      },\n      \"include_tags\": false,\n      \"rehydration_max_scan_size_in_gb\": \"<long>\",\n      \"rehydration_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives",
								":archive_id"
							],
							"variable": [
								{
									"key": "archive_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a given archive configuration.\n\n**Note**: Using this method updates your archive configuration by **replacing**\nyour current configuration with the new one sent to your Datadog organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"archives\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"destination\": {\n        \"storage_account\": \"<string>\",\n        \"container\": \"<string>\",\n        \"integration\": {\n          \"tenant_id\": \"<string>\",\n          \"client_id\": \"<string>\"\n        },\n        \"type\": \"azure\",\n        \"path\": \"<string>\",\n        \"region\": \"<string>\"\n      },\n      \"include_tags\": false,\n      \"rehydration_max_scan_size_in_gb\": \"<long>\",\n      \"rehydration_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"type\": \"archives\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"destination\": {\n        \"storage_account\": \"<string>\",\n        \"container\": \"<string>\",\n        \"integration\": {\n          \"tenant_id\": \"<string>\",\n          \"client_id\": \"<string>\"\n        },\n        \"type\": \"azure\",\n        \"path\": \"<string>\",\n        \"region\": \"<string>\"\n      },\n      \"include_tags\": false,\n      \"rehydration_max_scan_size_in_gb\": \"<long>\",\n      \"rehydration_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"state\": \"FAILING\"\n    },\n    \"id\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"archives\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"destination\": {\n        \"storage_account\": \"<string>\",\n        \"container\": \"<string>\",\n        \"integration\": {\n          \"tenant_id\": \"<string>\",\n          \"client_id\": \"<string>\"\n        },\n        \"type\": \"azure\",\n        \"path\": \"<string>\",\n        \"region\": \"<string>\"\n      },\n      \"include_tags\": false,\n      \"rehydration_max_scan_size_in_gb\": \"<long>\",\n      \"rehydration_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"archives\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"destination\": {\n        \"storage_account\": \"<string>\",\n        \"container\": \"<string>\",\n        \"integration\": {\n          \"tenant_id\": \"<string>\",\n          \"client_id\": \"<string>\"\n        },\n        \"type\": \"azure\",\n        \"path\": \"<string>\",\n        \"region\": \"<string>\"\n      },\n      \"include_tags\": false,\n      \"rehydration_max_scan_size_in_gb\": \"<long>\",\n      \"rehydration_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"archives\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"destination\": {\n        \"storage_account\": \"<string>\",\n        \"container\": \"<string>\",\n        \"integration\": {\n          \"tenant_id\": \"<string>\",\n          \"client_id\": \"<string>\"\n        },\n        \"type\": \"azure\",\n        \"path\": \"<string>\",\n        \"region\": \"<string>\"\n      },\n      \"include_tags\": false,\n      \"rehydration_max_scan_size_in_gb\": \"<long>\",\n      \"rehydration_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"archives\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"destination\": {\n        \"storage_account\": \"<string>\",\n        \"container\": \"<string>\",\n        \"integration\": {\n          \"tenant_id\": \"<string>\",\n          \"client_id\": \"<string>\"\n        },\n        \"type\": \"azure\",\n        \"path\": \"<string>\",\n        \"region\": \"<string>\"\n      },\n      \"include_tags\": false,\n      \"rehydration_max_scan_size_in_gb\": \"<long>\",\n      \"rehydration_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Revoke role from an archive",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"roles\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives",
								":archive_id",
								"readers"
							],
							"variable": [
								{
									"key": "archive_id",
									"value": "<string>"
								}
							]
						},
						"description": "Removes a role from an archive. ([Roles API](https://docs.datadoghq.com/api/v2/roles/))"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"roles\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"roles\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"roles\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"roles\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"roles\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List read roles for an archive",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives",
								":archive_id",
								"readers"
							],
							"variable": [
								{
									"key": "archive_id",
									"value": "<string>"
								}
							]
						},
						"description": "Returns all read roles a given archive is restricted to."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"type\": \"roles\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"user_count\": \"<long>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"permissions\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"permissions\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"permissions\"\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"type\": \"roles\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"user_count\": \"<long>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"permissions\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"permissions\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"permissions\"\n            }\n          ]\n        }\n      }\n    }\n  ],\n  \"meta\": {\n    \"page\": {\n      \"total_count\": \"<long>\",\n      \"total_filtered_count\": \"<long>\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Grant role to an archive",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"roles\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives",
								":archive_id",
								"readers"
							],
							"variable": [
								{
									"key": "archive_id",
									"value": "<string>"
								}
							]
						},
						"description": "Adds a read role to an archive. ([Roles API](https://docs.datadoghq.com/api/v2/roles/))"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"roles\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"roles\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"roles\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"roles\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"roles\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Archives forward all the logs ingested to a cloud storage system.\n\nSee the [Archives Page](https://app.datadoghq.com/logs/pipelines/archives)\nfor a list of the archives currently configured in web UI."
		},
		{
			"name": "Logs Indexes",
			"item": [
				{
					"name": "Get indexes order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"index-order"
							]
						},
						"description": "Get the current order of your log indexes. This endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"index-order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"index_names\": [\n    \"main\",\n    \"payments\",\n    \"web\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"index-order"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"index-order"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update indexes order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"index_names\": [\n    \"main\",\n    \"payments\",\n    \"web\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"index-order"
							]
						},
						"description": "This endpoint updates the index order of your organization.\nIt returns the index order object passed in the request body when the request is successful."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"index_names\": [\n    \"main\",\n    \"payments\",\n    \"web\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"index-order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"index_names\": [\n    \"main\",\n    \"payments\",\n    \"web\"\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"index_names\": [\n    \"main\",\n    \"payments\",\n    \"web\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"index-order"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"index_names\": [\n    \"main\",\n    \"payments\",\n    \"web\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"index-order"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"index_names\": [\n    \"main\",\n    \"payments\",\n    \"web\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"index-order"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all indexes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"indexes"
							]
						},
						"description": "The Index object describes the configuration of a log index.\nThis endpoint returns an array of the `LogIndex` objects of your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"indexes\": [\n    {\n      \"name\": \"main\",\n      \"filter\": {\n        \"query\": \"source:python\"\n      },\n      \"daily_limit\": 300000000,\n      \"exclusion_filters\": [\n        {\n          \"name\": \"payment\",\n          \"filter\": {\n            \"sample_rate\": 1,\n            \"query\": \"*\"\n          },\n          \"is_enabled\": false\n        },\n        {\n          \"name\": \"payment\",\n          \"filter\": {\n            \"sample_rate\": 1,\n            \"query\": \"*\"\n          },\n          \"is_enabled\": false\n        }\n      ],\n      \"is_rate_limited\": false,\n      \"num_retention_days\": 15\n    },\n    {\n      \"name\": \"main\",\n      \"filter\": {\n        \"query\": \"source:python\"\n      },\n      \"daily_limit\": 300000000,\n      \"exclusion_filters\": [\n        {\n          \"name\": \"payment\",\n          \"filter\": {\n            \"sample_rate\": 1,\n            \"query\": \"*\"\n          },\n          \"is_enabled\": false\n        },\n        {\n          \"name\": \"payment\",\n          \"filter\": {\n            \"sample_rate\": 1,\n            \"query\": \"*\"\n          },\n          \"is_enabled\": false\n        }\n      ],\n      \"is_rate_limited\": false,\n      \"num_retention_days\": 15\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create an index",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"main\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"daily_limit\": 300000000,\n  \"exclusion_filters\": [\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": false\n    },\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": true\n    }\n  ],\n  \"is_rate_limited\": false,\n  \"num_retention_days\": 15\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"indexes"
							]
						},
						"description": "Creates a new index. Returns the Index object passed in the request body when the request is successful."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"main\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"daily_limit\": 300000000,\n  \"exclusion_filters\": [\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": false\n    },\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": true\n    }\n  ],\n  \"is_rate_limited\": false,\n  \"num_retention_days\": 15\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"main\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"daily_limit\": 300000000,\n  \"exclusion_filters\": [\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": false\n    },\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": true\n    }\n  ],\n  \"is_rate_limited\": false,\n  \"num_retention_days\": 15\n}"
						},
						{
							"name": "Invalid Parameter Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"main\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"daily_limit\": 300000000,\n  \"exclusion_filters\": [\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": false\n    },\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": true\n    }\n  ],\n  \"is_rate_limited\": false,\n  \"num_retention_days\": 15\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"main\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"daily_limit\": 300000000,\n  \"exclusion_filters\": [\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": false\n    },\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": true\n    }\n  ],\n  \"is_rate_limited\": false,\n  \"num_retention_days\": 15\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"main\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"daily_limit\": 300000000,\n  \"exclusion_filters\": [\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": false\n    },\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": true\n    }\n  ],\n  \"is_rate_limited\": false,\n  \"num_retention_days\": 15\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get an index",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"indexes",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get one log index from your organization. This endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"main\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"daily_limit\": 300000000,\n  \"exclusion_filters\": [\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": false\n    },\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": true\n    }\n  ],\n  \"is_rate_limited\": false,\n  \"num_retention_days\": 15\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update an index",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"daily_limit\": 300000000,\n  \"disable_daily_limit\": false,\n  \"exclusion_filters\": [\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": false\n    },\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": true\n    }\n  ],\n  \"num_retention_days\": 15\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"indexes",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Update an index as identified by its name.\nReturns the Index object passed in the request body when the request is successful.\n\nUsing the `PUT` method updates your index’s configuration by **replacing**\nyour current configuration with the new one sent to your Datadog organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"daily_limit\": 300000000,\n  \"disable_daily_limit\": false,\n  \"exclusion_filters\": [\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": false\n    },\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": true\n    }\n  ],\n  \"num_retention_days\": 15\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"main\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"daily_limit\": 300000000,\n  \"exclusion_filters\": [\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": false\n    },\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": true\n    }\n  ],\n  \"is_rate_limited\": false,\n  \"num_retention_days\": 15\n}"
						},
						{
							"name": "Invalid Parameter Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"daily_limit\": 300000000,\n  \"disable_daily_limit\": false,\n  \"exclusion_filters\": [\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": false\n    },\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": true\n    }\n  ],\n  \"num_retention_days\": 15\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"daily_limit\": 300000000,\n  \"disable_daily_limit\": false,\n  \"exclusion_filters\": [\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": false\n    },\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": true\n    }\n  ],\n  \"num_retention_days\": 15\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"daily_limit\": 300000000,\n  \"disable_daily_limit\": false,\n  \"exclusion_filters\": [\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": false\n    },\n    {\n      \"name\": \"payment\",\n      \"filter\": {\n        \"sample_rate\": 1,\n        \"query\": \"*\"\n      },\n      \"is_enabled\": true\n    }\n  ],\n  \"num_retention_days\": 15\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				}
			],
			"description": "Manage configuration of [log indexes](https://docs.datadoghq.com/logs/indexes/).\nYou need an API and application key with Admin rights to interact with this endpoint."
		},
		{
			"name": "Logs Metrics",
			"item": [
				{
					"name": "Get all log-based metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"metrics"
							]
						},
						"description": "Get the list of configured log-based metrics with their definitions."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"compute\": {\n          \"aggregation_type\": \"count\",\n          \"include_percentiles\": \"<boolean>\",\n          \"path\": \"<string>\"\n        },\n        \"filter\": {\n          \"query\": \"<string>\"\n        },\n        \"group_by\": [\n          {\n            \"path\": \"<string>\",\n            \"tag_name\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"tag_name\": \"<string>\"\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"logs_metrics\"\n    },\n    {\n      \"attributes\": {\n        \"compute\": {\n          \"aggregation_type\": \"distribution\",\n          \"include_percentiles\": \"<boolean>\",\n          \"path\": \"<string>\"\n        },\n        \"filter\": {\n          \"query\": \"<string>\"\n        },\n        \"group_by\": [\n          {\n            \"path\": \"<string>\",\n            \"tag_name\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"tag_name\": \"<string>\"\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"logs_metrics\"\n    }\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a log-based metric",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"logs_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"metrics"
							]
						},
						"description": "Create a metric based on your ingested logs in your organization.\nReturns the log-based metric object from the request body when the request is successful."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"logs_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"logs_metrics\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"logs_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"logs_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"logs_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"logs_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a log-based metric",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"metrics",
								":metric_id"
							],
							"variable": [
								{
									"key": "metric_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a specific log-based metric from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a log-based metric",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"metrics",
								":metric_id"
							],
							"variable": [
								{
									"key": "metric_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a specific log-based metric from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"logs_metrics\"\n  }\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a log-based metric",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"logs_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"include_percentiles\": \"<boolean>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"metrics",
								":metric_id"
							],
							"variable": [
								{
									"key": "metric_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a specific log-based metric from your organization.\nReturns the log-based metric object from the request body when the request is successful."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"logs_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"include_percentiles\": \"<boolean>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"logs_metrics\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"logs_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"include_percentiles\": \"<boolean>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"logs_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"include_percentiles\": \"<boolean>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"logs_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"include_percentiles\": \"<boolean>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"logs_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"include_percentiles\": \"<boolean>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Manage configuration of [log-based metrics](https://app.datadoghq.com/logs/pipelines/generate-metrics) for your organization."
		},
		{
			"name": "Logs Pipelines",
			"item": [
				{
					"name": "Get pipeline order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipeline-order"
							]
						},
						"description": "Get the current order of your pipelines.\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipeline-order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"pipeline_ids\": [\n    \"tags\",\n    \"org_ids\",\n    \"products\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipeline-order"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipeline-order"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update pipeline order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pipeline_ids\": [\n    \"tags\",\n    \"org_ids\",\n    \"products\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipeline-order"
							]
						},
						"description": "Update the order of your pipelines. Since logs are processed sequentially, reordering a pipeline may change\nthe structure and content of the data processed by other pipelines and their processors.\n\n**Note**: Using the `PUT` method updates your pipeline order by replacing your current order\nwith the new one sent to your Datadog organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pipeline_ids\": [\n    \"tags\",\n    \"org_ids\",\n    \"products\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipeline-order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"pipeline_ids\": [\n    \"tags\",\n    \"org_ids\",\n    \"products\"\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pipeline_ids\": [\n    \"tags\",\n    \"org_ids\",\n    \"products\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipeline-order"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pipeline_ids\": [\n    \"tags\",\n    \"org_ids\",\n    \"products\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipeline-order"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pipeline_ids\": [\n    \"tags\",\n    \"org_ids\",\n    \"products\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipeline-order"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pipeline_ids\": [\n    \"tags\",\n    \"org_ids\",\n    \"products\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipeline-order"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all pipelines",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines"
							]
						},
						"description": "Get all pipelines from your organization.\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"\",\n    \"filter\": {\n      \"query\": \"source:python\"\n    },\n    \"id\": \"enim nostrud in Lorem cillum\",\n    \"is_enabled\": true,\n    \"is_read_only\": true,\n    \"processors\": [\n      {\n        \"source\": \"message\",\n        \"grok\": {\n          \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n          \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n        },\n        \"type\": \"grok-parser\",\n        \"is_enabled\": false,\n        \"name\": \"commodo dolor et\",\n        \"samples\": [\n          \"qui commodo Duis sunt dolor\",\n          \"Duis dolore ipsum\"\n        ]\n      },\n      {\n        \"source\": \"message\",\n        \"grok\": {\n          \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n          \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n        },\n        \"type\": \"grok-parser\",\n        \"is_enabled\": false,\n        \"name\": \"quis\",\n        \"samples\": [\n          \"ut nisi in proident\",\n          \"magna esse occaecat\"\n        ]\n      }\n    ],\n    \"type\": \"pipeline\"\n  },\n  {\n    \"name\": \"\",\n    \"filter\": {\n      \"query\": \"source:python\"\n    },\n    \"id\": \"non enim mollit\",\n    \"is_enabled\": false,\n    \"is_read_only\": false,\n    \"processors\": [\n      {\n        \"source\": \"message\",\n        \"grok\": {\n          \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n          \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n        },\n        \"type\": \"grok-parser\",\n        \"is_enabled\": false,\n        \"name\": \"cupidatat consectetur\",\n        \"samples\": [\n          \"officia sunt\",\n          \"irure\"\n        ]\n      },\n      {\n        \"source\": \"message\",\n        \"grok\": {\n          \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n          \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n        },\n        \"type\": \"grok-parser\",\n        \"is_enabled\": false,\n        \"name\": \"in tempor id ullamco aute\",\n        \"samples\": [\n          \"culpa id ullamco\",\n          \"aute enim\"\n        ]\n      }\n    ],\n    \"type\": \"pipeline\"\n  }\n]"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a pipeline",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"id\": \"consequat elit non\",\n  \"is_enabled\": true,\n  \"is_read_only\": true,\n  \"processors\": [\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"nostrud Excepteur\",\n      \"samples\": [\n        \"sit ea ullamco\",\n        \"sunt est laboris\"\n      ]\n    },\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"exercitation do Ut\",\n      \"samples\": [\n        \"ut\",\n        \"nulla tempor amet\"\n      ]\n    }\n  ],\n  \"type\": \"pipeline\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines"
							]
						},
						"description": "Create a pipeline in your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"id\": \"consequat elit non\",\n  \"is_enabled\": true,\n  \"is_read_only\": true,\n  \"processors\": [\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"nostrud Excepteur\",\n      \"samples\": [\n        \"sit ea ullamco\",\n        \"sunt est laboris\"\n      ]\n    },\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"exercitation do Ut\",\n      \"samples\": [\n        \"ut\",\n        \"nulla tempor amet\"\n      ]\n    }\n  ],\n  \"type\": \"pipeline\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"id\": \"consequat elit non\",\n  \"is_enabled\": true,\n  \"is_read_only\": true,\n  \"processors\": [\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"nostrud Excepteur\",\n      \"samples\": [\n        \"sit ea ullamco\",\n        \"sunt est laboris\"\n      ]\n    },\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"exercitation do Ut\",\n      \"samples\": [\n        \"ut\",\n        \"nulla tempor amet\"\n      ]\n    }\n  ],\n  \"type\": \"pipeline\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"id\": \"consequat elit non\",\n  \"is_enabled\": true,\n  \"is_read_only\": true,\n  \"processors\": [\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"nostrud Excepteur\",\n      \"samples\": [\n        \"sit ea ullamco\",\n        \"sunt est laboris\"\n      ]\n    },\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"exercitation do Ut\",\n      \"samples\": [\n        \"ut\",\n        \"nulla tempor amet\"\n      ]\n    }\n  ],\n  \"type\": \"pipeline\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"id\": \"consequat elit non\",\n  \"is_enabled\": true,\n  \"is_read_only\": true,\n  \"processors\": [\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"nostrud Excepteur\",\n      \"samples\": [\n        \"sit ea ullamco\",\n        \"sunt est laboris\"\n      ]\n    },\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"exercitation do Ut\",\n      \"samples\": [\n        \"ut\",\n        \"nulla tempor amet\"\n      ]\n    }\n  ],\n  \"type\": \"pipeline\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"id\": \"consequat elit non\",\n  \"is_enabled\": true,\n  \"is_read_only\": true,\n  \"processors\": [\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"nostrud Excepteur\",\n      \"samples\": [\n        \"sit ea ullamco\",\n        \"sunt est laboris\"\n      ]\n    },\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"exercitation do Ut\",\n      \"samples\": [\n        \"ut\",\n        \"nulla tempor amet\"\n      ]\n    }\n  ],\n  \"type\": \"pipeline\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a pipeline",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines",
								":pipeline_id"
							],
							"variable": [
								{
									"key": "pipeline_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Delete a given pipeline from your organization.\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a pipeline",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines",
								":pipeline_id"
							],
							"variable": [
								{
									"key": "pipeline_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get a specific pipeline from your organization.\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"id\": \"consequat elit non\",\n  \"is_enabled\": true,\n  \"is_read_only\": true,\n  \"processors\": [\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"nostrud Excepteur\",\n      \"samples\": [\n        \"sit ea ullamco\",\n        \"sunt est laboris\"\n      ]\n    },\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"exercitation do Ut\",\n      \"samples\": [\n        \"ut\",\n        \"nulla tempor amet\"\n      ]\n    }\n  ],\n  \"type\": \"pipeline\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a pipeline",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"id\": \"consequat elit non\",\n  \"is_enabled\": true,\n  \"is_read_only\": true,\n  \"processors\": [\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"nostrud Excepteur\",\n      \"samples\": [\n        \"sit ea ullamco\",\n        \"sunt est laboris\"\n      ]\n    },\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"exercitation do Ut\",\n      \"samples\": [\n        \"ut\",\n        \"nulla tempor amet\"\n      ]\n    }\n  ],\n  \"type\": \"pipeline\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines",
								":pipeline_id"
							],
							"variable": [
								{
									"key": "pipeline_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Update a given pipeline configuration to change it’s processors or their order.\n\n**Note**: Using this method updates your pipeline configuration by **replacing**\nyour current configuration with the new one sent to your Datadog organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"id\": \"consequat elit non\",\n  \"is_enabled\": true,\n  \"is_read_only\": true,\n  \"processors\": [\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"nostrud Excepteur\",\n      \"samples\": [\n        \"sit ea ullamco\",\n        \"sunt est laboris\"\n      ]\n    },\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"exercitation do Ut\",\n      \"samples\": [\n        \"ut\",\n        \"nulla tempor amet\"\n      ]\n    }\n  ],\n  \"type\": \"pipeline\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"id\": \"consequat elit non\",\n  \"is_enabled\": true,\n  \"is_read_only\": true,\n  \"processors\": [\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"nostrud Excepteur\",\n      \"samples\": [\n        \"sit ea ullamco\",\n        \"sunt est laboris\"\n      ]\n    },\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"exercitation do Ut\",\n      \"samples\": [\n        \"ut\",\n        \"nulla tempor amet\"\n      ]\n    }\n  ],\n  \"type\": \"pipeline\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"id\": \"consequat elit non\",\n  \"is_enabled\": true,\n  \"is_read_only\": true,\n  \"processors\": [\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"nostrud Excepteur\",\n      \"samples\": [\n        \"sit ea ullamco\",\n        \"sunt est laboris\"\n      ]\n    },\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"exercitation do Ut\",\n      \"samples\": [\n        \"ut\",\n        \"nulla tempor amet\"\n      ]\n    }\n  ],\n  \"type\": \"pipeline\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"id\": \"consequat elit non\",\n  \"is_enabled\": true,\n  \"is_read_only\": true,\n  \"processors\": [\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"nostrud Excepteur\",\n      \"samples\": [\n        \"sit ea ullamco\",\n        \"sunt est laboris\"\n      ]\n    },\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"exercitation do Ut\",\n      \"samples\": [\n        \"ut\",\n        \"nulla tempor amet\"\n      ]\n    }\n  ],\n  \"type\": \"pipeline\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"\",\n  \"filter\": {\n    \"query\": \"source:python\"\n  },\n  \"id\": \"consequat elit non\",\n  \"is_enabled\": true,\n  \"is_read_only\": true,\n  \"processors\": [\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"nostrud Excepteur\",\n      \"samples\": [\n        \"sit ea ullamco\",\n        \"sunt est laboris\"\n      ]\n    },\n    {\n      \"source\": \"message\",\n      \"grok\": {\n        \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n        \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n      },\n      \"type\": \"grok-parser\",\n      \"is_enabled\": false,\n      \"name\": \"exercitation do Ut\",\n      \"samples\": [\n        \"ut\",\n        \"nulla tempor amet\"\n      ]\n    }\n  ],\n  \"type\": \"pipeline\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Pipelines and processors operate on incoming logs, parsing\nand transforming them into structured attributes for easier querying.\n\n- See the [pipelines configuration page](https://app.datadoghq.com/logs/pipelines)\n  for a list of the pipelines and processors currently configured in web UI.\n\n- Additional API-related information about processors can be found in the\n  [processors documentation](https://docs.datadoghq.com/logs/log_configuration/processors/?tab=api#lookup-processor).\n\n- For more information about Pipelines, see the\n  [pipeline documentation](https://docs.datadoghq.com/logs/log_configuration/pipelines).\n\n**Notes:**\n\nThese endpoints are only available for admin users.\nMake sure to use an application key created by an admin.\n\n**Grok parsing rules may effect JSON output and require\nreturned data to be configured before using in a request.**\nFor example, if you are using the data returned from a\nrequest for another request body, and have a parsing rule\nthat uses a regex pattern like `\\s` for spaces, you will\nneed to configure all escaped spaces as `%{space}` to use\nin the body data."
		},
		{
			"name": "Metrics",
			"item": [
				{
					"name": "Submit distribution points",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "HTTP header used to compress the media-type.",
								"key": "Content-Encoding",
								"value": "identity"
							},
							{
								"key": "Content-Type",
								"value": "text/json"
							},
							{
								"key": "Accept",
								"value": "text/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Post time-series data that can be graphed on Datadog’s dashboards.\",\n  \"externalValue\": \"examples/metrics/distribution-points.json.sh\",\n  \"summary\": \"Dynamic Points\",\n  \"x-variables\": {\n    \"NOW\": \"$(date +%s)\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/distribution_points",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"distribution_points"
							]
						},
						"description": "The distribution points end-point allows you to post distribution data that can be graphed on Datadog’s dashboards."
					},
					"response": [
						{
							"name": "Payload accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "deflate"
									},
									{
										"key": "Content-Type",
										"value": "text/json"
									},
									{
										"key": "Accept",
										"value": "text/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Post time-series data that can be graphed on Datadog’s dashboards.\",\n  \"externalValue\": \"examples/metrics/distribution-points.json.sh\",\n  \"summary\": \"Dynamic Points\",\n  \"x-variables\": {\n    \"NOW\": \"$(date +%s)\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/distribution_points",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"distribution_points"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"ok\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "deflate"
									},
									{
										"key": "Content-Type",
										"value": "text/json"
									},
									{
										"key": "Accept",
										"value": "text/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Post time-series data that can be graphed on Datadog’s dashboards.\",\n  \"externalValue\": \"examples/metrics/distribution-points.json.sh\",\n  \"summary\": \"Dynamic Points\",\n  \"x-variables\": {\n    \"NOW\": \"$(date +%s)\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/distribution_points",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"distribution_points"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "deflate"
									},
									{
										"key": "Content-Type",
										"value": "text/json"
									},
									{
										"key": "Accept",
										"value": "text/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Post time-series data that can be graphed on Datadog’s dashboards.\",\n  \"externalValue\": \"examples/metrics/distribution-points.json.sh\",\n  \"summary\": \"Dynamic Points\",\n  \"x-variables\": {\n    \"NOW\": \"$(date +%s)\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/distribution_points",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"distribution_points"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Request timeout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "deflate"
									},
									{
										"key": "Content-Type",
										"value": "text/json"
									},
									{
										"key": "Accept",
										"value": "text/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Post time-series data that can be graphed on Datadog’s dashboards.\",\n  \"externalValue\": \"examples/metrics/distribution-points.json.sh\",\n  \"summary\": \"Dynamic Points\",\n  \"x-variables\": {\n    \"NOW\": \"$(date +%s)\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/distribution_points",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"distribution_points"
									]
								}
							},
							"status": "Request Timeout",
							"code": 408,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Payload too large",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "deflate"
									},
									{
										"key": "Content-Type",
										"value": "text/json"
									},
									{
										"key": "Accept",
										"value": "text/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Post time-series data that can be graphed on Datadog’s dashboards.\",\n  \"externalValue\": \"examples/metrics/distribution-points.json.sh\",\n  \"summary\": \"Dynamic Points\",\n  \"x-variables\": {\n    \"NOW\": \"$(date +%s)\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/distribution_points",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"distribution_points"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "deflate"
									},
									{
										"key": "Content-Type",
										"value": "text/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Post time-series data that can be graphed on Datadog’s dashboards.\",\n  \"externalValue\": \"examples/metrics/distribution-points.json.sh\",\n  \"summary\": \"Dynamic Points\",\n  \"x-variables\": {\n    \"NOW\": \"$(date +%s)\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/distribution_points",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"distribution_points"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get active metrics list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/metrics?from=-62147425&host=tempor Ut sed velit&tag_filter=env IN (staging,test) AND service:web",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"metrics"
							],
							"query": [
								{
									"key": "from",
									"value": "-62147425",
									"description": "(Required) Seconds since the Unix epoch."
								},
								{
									"key": "host",
									"value": "tempor Ut sed velit",
									"description": "Hostname for filtering the list of metrics returned.\nIf set, metrics retrieved are those with the corresponding hostname tag."
								},
								{
									"key": "tag_filter",
									"value": "env IN (staging,test) AND service:web",
									"description": "Filter metrics that have been submitted with the given tags. Supports boolean and wildcard expressions.\nCannot be combined with other filters."
								}
							]
						},
						"description": "Get the list of actively reporting metrics from a given time until now."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics?from=-62147425&host=tempor Ut sed velit&tag_filter=env IN (staging,test) AND service:web",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics"
									],
									"query": [
										{
											"key": "from",
											"value": "-62147425",
											"description": "(Required) Seconds since the Unix epoch."
										},
										{
											"key": "host",
											"value": "tempor Ut sed velit",
											"description": "Hostname for filtering the list of metrics returned.\nIf set, metrics retrieved are those with the corresponding hostname tag."
										},
										{
											"key": "tag_filter",
											"value": "env IN (staging,test) AND service:web",
											"description": "Filter metrics that have been submitted with the given tags. Supports boolean and wildcard expressions.\nCannot be combined with other filters."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"from\": \"ullamco ut sed Duis\",\n  \"metrics\": [\n    \"sed\",\n    \"proident tempor eiusmod veniam\"\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics?from=-62147425&host=tempor Ut sed velit&tag_filter=env IN (staging,test) AND service:web",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics"
									],
									"query": [
										{
											"key": "from",
											"value": "-62147425",
											"description": "(Required) Seconds since the Unix epoch."
										},
										{
											"key": "host",
											"value": "tempor Ut sed velit",
											"description": "Hostname for filtering the list of metrics returned.\nIf set, metrics retrieved are those with the corresponding hostname tag."
										},
										{
											"key": "tag_filter",
											"value": "env IN (staging,test) AND service:web",
											"description": "Filter metrics that have been submitted with the given tags. Supports boolean and wildcard expressions.\nCannot be combined with other filters."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics?from=-62147425&host=tempor Ut sed velit&tag_filter=env IN (staging,test) AND service:web",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics"
									],
									"query": [
										{
											"key": "from",
											"value": "-62147425",
											"description": "(Required) Seconds since the Unix epoch."
										},
										{
											"key": "host",
											"value": "tempor Ut sed velit",
											"description": "Hostname for filtering the list of metrics returned.\nIf set, metrics retrieved are those with the corresponding hostname tag."
										},
										{
											"key": "tag_filter",
											"value": "env IN (staging,test) AND service:web",
											"description": "Filter metrics that have been submitted with the given tags. Supports boolean and wildcard expressions.\nCannot be combined with other filters."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics?from=-62147425&host=tempor Ut sed velit&tag_filter=env IN (staging,test) AND service:web",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics"
									],
									"query": [
										{
											"key": "from",
											"value": "-62147425",
											"description": "(Required) Seconds since the Unix epoch."
										},
										{
											"key": "host",
											"value": "tempor Ut sed velit",
											"description": "Hostname for filtering the list of metrics returned.\nIf set, metrics retrieved are those with the corresponding hostname tag."
										},
										{
											"key": "tag_filter",
											"value": "env IN (staging,test) AND service:web",
											"description": "Filter metrics that have been submitted with the given tags. Supports boolean and wildcard expressions.\nCannot be combined with other filters."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get metric metadata",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								":metric_name"
							],
							"variable": [
								{
									"key": "metric_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get metadata about a specific metric."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"description\": \"exercitation ea ullamco occaecat\",\n  \"integration\": \"nulla aute in\",\n  \"per_unit\": \"second\",\n  \"short_name\": \"exercitation et proident do\",\n  \"statsd_interval\": 33065337,\n  \"type\": \"count\",\n  \"unit\": \"byte\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Edit metric metadata",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"exercitation ea ullamco occaecat\",\n  \"integration\": \"nulla aute in\",\n  \"per_unit\": \"second\",\n  \"short_name\": \"exercitation et proident do\",\n  \"statsd_interval\": 33065337,\n  \"type\": \"count\",\n  \"unit\": \"byte\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								":metric_name"
							],
							"variable": [
								{
									"key": "metric_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Edit metadata of a specific metric. Find out more about [supported types](https://docs.datadoghq.com/developers/metrics)."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"exercitation ea ullamco occaecat\",\n  \"integration\": \"nulla aute in\",\n  \"per_unit\": \"second\",\n  \"short_name\": \"exercitation et proident do\",\n  \"statsd_interval\": 33065337,\n  \"type\": \"count\",\n  \"unit\": \"byte\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"description\": \"exercitation ea ullamco occaecat\",\n  \"integration\": \"nulla aute in\",\n  \"per_unit\": \"second\",\n  \"short_name\": \"exercitation et proident do\",\n  \"statsd_interval\": 33065337,\n  \"type\": \"count\",\n  \"unit\": \"byte\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"exercitation ea ullamco occaecat\",\n  \"integration\": \"nulla aute in\",\n  \"per_unit\": \"second\",\n  \"short_name\": \"exercitation et proident do\",\n  \"statsd_interval\": 33065337,\n  \"type\": \"count\",\n  \"unit\": \"byte\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"exercitation ea ullamco occaecat\",\n  \"integration\": \"nulla aute in\",\n  \"per_unit\": \"second\",\n  \"short_name\": \"exercitation et proident do\",\n  \"statsd_interval\": 33065337,\n  \"type\": \"count\",\n  \"unit\": \"byte\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"exercitation ea ullamco occaecat\",\n  \"integration\": \"nulla aute in\",\n  \"per_unit\": \"second\",\n  \"short_name\": \"exercitation et proident do\",\n  \"statsd_interval\": 33065337,\n  \"type\": \"count\",\n  \"unit\": \"byte\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"exercitation ea ullamco occaecat\",\n  \"integration\": \"nulla aute in\",\n  \"per_unit\": \"second\",\n  \"short_name\": \"exercitation et proident do\",\n  \"statsd_interval\": 33065337,\n  \"type\": \"count\",\n  \"unit\": \"byte\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Query timeseries points",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/query?from=-62147425&to=-62147425&query=tempor Ut sed velit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"query"
							],
							"query": [
								{
									"key": "from",
									"value": "-62147425",
									"description": "(Required) Start of the queried time period, seconds since the Unix epoch."
								},
								{
									"key": "to",
									"value": "-62147425",
									"description": "(Required) End of the queried time period, seconds since the Unix epoch."
								},
								{
									"key": "query",
									"value": "tempor Ut sed velit",
									"description": "(Required) Query string."
								}
							]
						},
						"description": "Query timeseries points."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/query?from=-62147425&to=-62147425&query=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"query"
									],
									"query": [
										{
											"key": "from",
											"value": "-62147425",
											"description": "(Required) Start of the queried time period, seconds since the Unix epoch."
										},
										{
											"key": "to",
											"value": "-62147425",
											"description": "(Required) End of the queried time period, seconds since the Unix epoch."
										},
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "(Required) Query string."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"officia dolor dolor enim Ut\",\n  \"from_date\": 74851718,\n  \"group_by\": [\n    \"Ut sint veniam voluptate id\",\n    \"laborum dolore fugiat quis\"\n  ],\n  \"message\": \"commodo Duis dolore\",\n  \"query\": \"irure nulla\",\n  \"res_type\": \"time_series\",\n  \"series\": [\n    {\n      \"aggr\": \"avg\",\n      \"display_name\": \"system.cpu.idle\",\n      \"end\": 40693612,\n      \"expression\": \"system.cpu.idle{host:foo,env:test}\",\n      \"interval\": 40405386,\n      \"length\": -62156772,\n      \"metric\": \"system.cpu.idle\",\n      \"pointlist\": [\n        [\n          1681683300000,\n          77.62145685254418\n        ]\n      ],\n      \"query_index\": -41586801,\n      \"scope\": \"host:foo,env:test\",\n      \"start\": -45245073,\n      \"tag_set\": [\n        \"aute incididunt enim\",\n        \"dolore mollit amet esse\"\n      ],\n      \"unit\": [\n        {\n          \"family\": \"time\",\n          \"name\": \"minute\",\n          \"plural\": \"minutes\",\n          \"scale_factor\": 60,\n          \"short_name\": \"min\"\n        },\n        {\n          \"family\": \"time\",\n          \"name\": \"minute\",\n          \"plural\": \"minutes\",\n          \"scale_factor\": 60,\n          \"short_name\": \"min\"\n        }\n      ]\n    },\n    {\n      \"aggr\": \"avg\",\n      \"display_name\": \"system.cpu.idle\",\n      \"end\": -49813044,\n      \"expression\": \"system.cpu.idle{host:foo,env:test}\",\n      \"interval\": -86046844,\n      \"length\": 71311767,\n      \"metric\": \"system.cpu.idle\",\n      \"pointlist\": [\n        [\n          1681683300000,\n          77.62145685254418\n        ]\n      ],\n      \"query_index\": -70553970,\n      \"scope\": \"host:foo,env:test\",\n      \"start\": 3842833,\n      \"tag_set\": [\n        \"sit enim consectetur\",\n        \"Duis\"\n      ],\n      \"unit\": [\n        {\n          \"family\": \"time\",\n          \"name\": \"minute\",\n          \"plural\": \"minutes\",\n          \"scale_factor\": 60,\n          \"short_name\": \"min\"\n        },\n        {\n          \"family\": \"time\",\n          \"name\": \"minute\",\n          \"plural\": \"minutes\",\n          \"scale_factor\": 60,\n          \"short_name\": \"min\"\n        }\n      ]\n    }\n  ],\n  \"status\": \"ok\",\n  \"to_date\": 39411541\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/query?from=-62147425&to=-62147425&query=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"query"
									],
									"query": [
										{
											"key": "from",
											"value": "-62147425",
											"description": "(Required) Start of the queried time period, seconds since the Unix epoch."
										},
										{
											"key": "to",
											"value": "-62147425",
											"description": "(Required) End of the queried time period, seconds since the Unix epoch."
										},
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "(Required) Query string."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/query?from=-62147425&to=-62147425&query=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"query"
									],
									"query": [
										{
											"key": "from",
											"value": "-62147425",
											"description": "(Required) Start of the queried time period, seconds since the Unix epoch."
										},
										{
											"key": "to",
											"value": "-62147425",
											"description": "(Required) End of the queried time period, seconds since the Unix epoch."
										},
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "(Required) Query string."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/query?from=-62147425&to=-62147425&query=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"query"
									],
									"query": [
										{
											"key": "from",
											"value": "-62147425",
											"description": "(Required) Start of the queried time period, seconds since the Unix epoch."
										},
										{
											"key": "to",
											"value": "-62147425",
											"description": "(Required) End of the queried time period, seconds since the Unix epoch."
										},
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "(Required) Query string."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Search metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/search?q=tempor Ut sed velit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "tempor Ut sed velit",
									"description": "(Required) Query string to search metrics upon. Can optionally be prefixed with `metrics:`."
								}
							]
						},
						"description": "Search for metrics from the last 24 hours in Datadog."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/search?q=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "tempor Ut sed velit",
											"description": "(Required) Query string to search metrics upon. Can optionally be prefixed with `metrics:`."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": {\n    \"metrics\": [\n      \"ea ipsum do dolore\",\n      \"qui aliquip commodo\"\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/search?q=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "tempor Ut sed velit",
											"description": "(Required) Query string to search metrics upon. Can optionally be prefixed with `metrics:`."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/search?q=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "tempor Ut sed velit",
											"description": "(Required) Query string to search metrics upon. Can optionally be prefixed with `metrics:`."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/search?q=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "tempor Ut sed velit",
											"description": "(Required) Query string to search metrics upon. Can optionally be prefixed with `metrics:`."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a list of metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics?filter[configured]=<boolean>&filter[tags_configured]=<string>&filter[metric_type]=gauge&filter[include_percentiles]=<boolean>&filter[queried]=<boolean>&filter[tags]=<string>&window[seconds]=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics"
							],
							"query": [
								{
									"key": "filter[configured]",
									"value": "<boolean>",
									"description": "Filter custom metrics that have configured tags."
								},
								{
									"key": "filter[tags_configured]",
									"value": "<string>",
									"description": "Filter tag configurations by configured tags."
								},
								{
									"key": "filter[metric_type]",
									"value": "gauge",
									"description": "Filter metrics by metric type."
								},
								{
									"key": "filter[include_percentiles]",
									"value": "<boolean>",
									"description": "Filter distributions with additional percentile\naggregations enabled or disabled."
								},
								{
									"key": "filter[queried]",
									"value": "<boolean>",
									"description": "Filter custom metrics that have or have not been queried in the specified window[seconds].\nIf no window is provided or the window is less than 2 hours, a default of 2 hours will be applied."
								},
								{
									"key": "filter[tags]",
									"value": "<string>",
									"description": "Filter metrics that have been submitted with the given tags. Supports boolean and wildcard expressions.\nCan only be combined with the filter[queried] filter."
								},
								{
									"key": "window[seconds]",
									"value": "<long>",
									"description": "The number of seconds of look back (from now) to apply to a filter[tag] or filter[queried] query.\nDefault value is 3600 (1 hour), maximum value is 2,592,000 (30 days)."
								}
							]
						},
						"description": "Returns all metrics that can be configured in the Metrics Summary page or with Metrics without Limits™ (matching additional filters if specified)."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics?filter[configured]=<boolean>&filter[tags_configured]=<string>&filter[metric_type]=gauge&filter[include_percentiles]=<boolean>&filter[queried]=<boolean>&filter[tags]=<string>&window[seconds]=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics"
									],
									"query": [
										{
											"key": "filter[configured]",
											"value": "<boolean>",
											"description": "Filter custom metrics that have configured tags."
										},
										{
											"key": "filter[tags_configured]",
											"value": "<string>",
											"description": "Filter tag configurations by configured tags."
										},
										{
											"key": "filter[metric_type]",
											"value": "gauge",
											"description": "Filter metrics by metric type."
										},
										{
											"key": "filter[include_percentiles]",
											"value": "<boolean>",
											"description": "Filter distributions with additional percentile\naggregations enabled or disabled."
										},
										{
											"key": "filter[queried]",
											"value": "<boolean>",
											"description": "Filter custom metrics that have or have not been queried in the specified window[seconds].\nIf no window is provided or the window is less than 2 hours, a default of 2 hours will be applied."
										},
										{
											"key": "filter[tags]",
											"value": "<string>",
											"description": "Filter metrics that have been submitted with the given tags. Supports boolean and wildcard expressions.\nCan only be combined with the filter[queried] filter."
										},
										{
											"key": "window[seconds]",
											"value": "<long>",
											"description": "The number of seconds of look back (from now) to apply to a filter[tag] or filter[queried] query.\nDefault value is 3600 (1 hour), maximum value is 2,592,000 (30 days)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"metrics\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"metrics\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics?filter[configured]=<boolean>&filter[tags_configured]=<string>&filter[metric_type]=gauge&filter[include_percentiles]=<boolean>&filter[queried]=<boolean>&filter[tags]=<string>&window[seconds]=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics"
									],
									"query": [
										{
											"key": "filter[configured]",
											"value": "<boolean>",
											"description": "Filter custom metrics that have configured tags."
										},
										{
											"key": "filter[tags_configured]",
											"value": "<string>",
											"description": "Filter tag configurations by configured tags."
										},
										{
											"key": "filter[metric_type]",
											"value": "gauge",
											"description": "Filter metrics by metric type."
										},
										{
											"key": "filter[include_percentiles]",
											"value": "<boolean>",
											"description": "Filter distributions with additional percentile\naggregations enabled or disabled."
										},
										{
											"key": "filter[queried]",
											"value": "<boolean>",
											"description": "Filter custom metrics that have or have not been queried in the specified window[seconds].\nIf no window is provided or the window is less than 2 hours, a default of 2 hours will be applied."
										},
										{
											"key": "filter[tags]",
											"value": "<string>",
											"description": "Filter metrics that have been submitted with the given tags. Supports boolean and wildcard expressions.\nCan only be combined with the filter[queried] filter."
										},
										{
											"key": "window[seconds]",
											"value": "<long>",
											"description": "The number of seconds of look back (from now) to apply to a filter[tag] or filter[queried] query.\nDefault value is 3600 (1 hour), maximum value is 2,592,000 (30 days)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics?filter[configured]=<boolean>&filter[tags_configured]=<string>&filter[metric_type]=gauge&filter[include_percentiles]=<boolean>&filter[queried]=<boolean>&filter[tags]=<string>&window[seconds]=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics"
									],
									"query": [
										{
											"key": "filter[configured]",
											"value": "<boolean>",
											"description": "Filter custom metrics that have configured tags."
										},
										{
											"key": "filter[tags_configured]",
											"value": "<string>",
											"description": "Filter tag configurations by configured tags."
										},
										{
											"key": "filter[metric_type]",
											"value": "gauge",
											"description": "Filter metrics by metric type."
										},
										{
											"key": "filter[include_percentiles]",
											"value": "<boolean>",
											"description": "Filter distributions with additional percentile\naggregations enabled or disabled."
										},
										{
											"key": "filter[queried]",
											"value": "<boolean>",
											"description": "Filter custom metrics that have or have not been queried in the specified window[seconds].\nIf no window is provided or the window is less than 2 hours, a default of 2 hours will be applied."
										},
										{
											"key": "filter[tags]",
											"value": "<string>",
											"description": "Filter metrics that have been submitted with the given tags. Supports boolean and wildcard expressions.\nCan only be combined with the filter[queried] filter."
										},
										{
											"key": "window[seconds]",
											"value": "<long>",
											"description": "The number of seconds of look back (from now) to apply to a filter[tag] or filter[queried] query.\nDefault value is 3600 (1 hour), maximum value is 2,592,000 (30 days)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics?filter[configured]=<boolean>&filter[tags_configured]=<string>&filter[metric_type]=gauge&filter[include_percentiles]=<boolean>&filter[queried]=<boolean>&filter[tags]=<string>&window[seconds]=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics"
									],
									"query": [
										{
											"key": "filter[configured]",
											"value": "<boolean>",
											"description": "Filter custom metrics that have configured tags."
										},
										{
											"key": "filter[tags_configured]",
											"value": "<string>",
											"description": "Filter tag configurations by configured tags."
										},
										{
											"key": "filter[metric_type]",
											"value": "gauge",
											"description": "Filter metrics by metric type."
										},
										{
											"key": "filter[include_percentiles]",
											"value": "<boolean>",
											"description": "Filter distributions with additional percentile\naggregations enabled or disabled."
										},
										{
											"key": "filter[queried]",
											"value": "<boolean>",
											"description": "Filter custom metrics that have or have not been queried in the specified window[seconds].\nIf no window is provided or the window is less than 2 hours, a default of 2 hours will be applied."
										},
										{
											"key": "filter[tags]",
											"value": "<string>",
											"description": "Filter metrics that have been submitted with the given tags. Supports boolean and wildcard expressions.\nCan only be combined with the filter[queried] filter."
										},
										{
											"key": "window[seconds]",
											"value": "<long>",
											"description": "The number of seconds of look back (from now) to apply to a filter[tag] or filter[queried] query.\nDefault value is 3600 (1 hour), maximum value is 2,592,000 (30 days)."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete tags for multiple metrics",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"metric_bulk_configure_tags\",\n    \"attributes\": {\n      \"emails\": [\n        \"<email>\",\n        \"<email>\"\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/config/bulk-tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								"config",
								"bulk-tags"
							]
						},
						"description": "Delete all custom lists of queryable tag keys for a set of existing count, gauge, rate, and distribution metrics.\nMetrics are selected by passing a metric name prefix.\nResults can be sent to a set of account email addresses, just like the same operation in the Datadog web app.\nCan only be used with application keys of users with the `Manage Tags for Metrics` permission."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"metric_bulk_configure_tags\",\n    \"attributes\": {\n      \"emails\": [\n        \"<email>\",\n        \"<email>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/config/bulk-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										"config",
										"bulk-tags"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"metric_bulk_configure_tags\",\n    \"attributes\": {\n      \"emails\": [\n        \"<email>\",\n        \"<email>\"\n      ],\n      \"status\": \"<string>\",\n      \"tags\": [\n        \"fp\",\n        \"a4-3mS\"\n      ]\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"metric_bulk_configure_tags\",\n    \"attributes\": {\n      \"emails\": [\n        \"<email>\",\n        \"<email>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/config/bulk-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										"config",
										"bulk-tags"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"metric_bulk_configure_tags\",\n    \"attributes\": {\n      \"emails\": [\n        \"<email>\",\n        \"<email>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/config/bulk-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										"config",
										"bulk-tags"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"metric_bulk_configure_tags\",\n    \"attributes\": {\n      \"emails\": [\n        \"<email>\",\n        \"<email>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/config/bulk-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										"config",
										"bulk-tags"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"metric_bulk_configure_tags\",\n    \"attributes\": {\n      \"emails\": [\n        \"<email>\",\n        \"<email>\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/config/bulk-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										"config",
										"bulk-tags"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Configure tags for multiple metrics",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"metric_bulk_configure_tags\",\n    \"attributes\": {\n      \"emails\": [\n        \"<email>\",\n        \"<email>\"\n      ],\n      \"tags\": [\n        \"ciUburHZ\",\n        \"sdur9\"\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/config/bulk-tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								"config",
								"bulk-tags"
							]
						},
						"description": "Create and define a list of queryable tag keys for a set of existing count, gauge, rate, and distribution metrics.\nMetrics are selected by passing a metric name prefix. Use the Delete method of this API path to remove tag configurations.\nResults can be sent to a set of account email addresses, just like the same operation in the Datadog web app.\nIf multiple calls include the same metric, the last configuration applied (not by submit order) is used, do not\nexpect deterministic ordering of concurrent calls.\nCan only be used with application keys of users with the `Manage Tags for Metrics` permission."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"metric_bulk_configure_tags\",\n    \"attributes\": {\n      \"emails\": [\n        \"<email>\",\n        \"<email>\"\n      ],\n      \"tags\": [\n        \"ciUburHZ\",\n        \"sdur9\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/config/bulk-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										"config",
										"bulk-tags"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"metric_bulk_configure_tags\",\n    \"attributes\": {\n      \"emails\": [\n        \"<email>\",\n        \"<email>\"\n      ],\n      \"status\": \"<string>\",\n      \"tags\": [\n        \"fp\",\n        \"a4-3mS\"\n      ]\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"metric_bulk_configure_tags\",\n    \"attributes\": {\n      \"emails\": [\n        \"<email>\",\n        \"<email>\"\n      ],\n      \"tags\": [\n        \"ciUburHZ\",\n        \"sdur9\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/config/bulk-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										"config",
										"bulk-tags"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"metric_bulk_configure_tags\",\n    \"attributes\": {\n      \"emails\": [\n        \"<email>\",\n        \"<email>\"\n      ],\n      \"tags\": [\n        \"ciUburHZ\",\n        \"sdur9\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/config/bulk-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										"config",
										"bulk-tags"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"metric_bulk_configure_tags\",\n    \"attributes\": {\n      \"emails\": [\n        \"<email>\",\n        \"<email>\"\n      ],\n      \"tags\": [\n        \"ciUburHZ\",\n        \"sdur9\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/config/bulk-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										"config",
										"bulk-tags"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"metric_bulk_configure_tags\",\n    \"attributes\": {\n      \"emails\": [\n        \"<email>\",\n        \"<email>\"\n      ],\n      \"tags\": [\n        \"ciUburHZ\",\n        \"sdur9\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/config/bulk-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										"config",
										"bulk-tags"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List active tags and aggregations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/active-configurations?window[seconds]=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								":metric_name",
								"active-configurations"
							],
							"query": [
								{
									"key": "window[seconds]",
									"value": "<long>",
									"description": "The number of seconds of look back (from now).\nDefault value is 604,800 (1 week), minimum value is 7200 (2 hours), maximum value is 2,630,000 (1 month)."
								}
							],
							"variable": [
								{
									"key": "metric_name",
									"value": "<string>"
								}
							]
						},
						"description": "List tags and aggregations that are actively queried on dashboards and monitors for a given metric name."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/active-configurations?window[seconds]=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"active-configurations"
									],
									"query": [
										{
											"key": "window[seconds]",
											"value": "<long>",
											"description": "The number of seconds of look back (from now).\nDefault value is 604,800 (1 week), minimum value is 7200 (2 hours), maximum value is 2,630,000 (1 month)."
										}
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"active_aggregations\": [\n        {\n          \"time\": \"count\",\n          \"space\": \"max\"\n        },\n        {\n          \"time\": \"sum\",\n          \"space\": \"min\"\n        }\n      ],\n      \"active_tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"actively_queried_configurations\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/active-configurations?window[seconds]=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"active-configurations"
									],
									"query": [
										{
											"key": "window[seconds]",
											"value": "<long>",
											"description": "The number of seconds of look back (from now).\nDefault value is 604,800 (1 week), minimum value is 7200 (2 hours), maximum value is 2,630,000 (1 month)."
										}
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/active-configurations?window[seconds]=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"active-configurations"
									],
									"query": [
										{
											"key": "window[seconds]",
											"value": "<long>",
											"description": "The number of seconds of look back (from now).\nDefault value is 604,800 (1 week), minimum value is 7200 (2 hours), maximum value is 2,630,000 (1 month)."
										}
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/active-configurations?window[seconds]=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"active-configurations"
									],
									"query": [
										{
											"key": "window[seconds]",
											"value": "<long>",
											"description": "The number of seconds of look back (from now).\nDefault value is 604,800 (1 week), minimum value is 7200 (2 hours), maximum value is 2,630,000 (1 month)."
										}
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/active-configurations?window[seconds]=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"active-configurations"
									],
									"query": [
										{
											"key": "window[seconds]",
											"value": "<long>",
											"description": "The number of seconds of look back (from now).\nDefault value is 604,800 (1 week), minimum value is 7200 (2 hours), maximum value is 2,630,000 (1 month)."
										}
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List tags by metric name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/all-tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								":metric_name",
								"all-tags"
							],
							"variable": [
								{
									"key": "metric_name",
									"value": "<string>"
								}
							]
						},
						"description": "View indexed tag key-value pairs for a given metric name."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/all-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"all-tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"metrics\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/all-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"all-tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/all-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"all-tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/all-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"all-tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/all-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"all-tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Tag Configuration Cardinality Estimator",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/estimate?filter[groups]=<string>&filter[hours_ago]=<integer>&filter[num_aggregations]=<integer>&filter[pct]=<boolean>&filter[timespan_h]=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								":metric_name",
								"estimate"
							],
							"query": [
								{
									"key": "filter[groups]",
									"value": "<string>",
									"description": "Filtered tag keys that the metric is configured to query with."
								},
								{
									"key": "filter[hours_ago]",
									"value": "<integer>",
									"description": "The number of hours of look back (from now) to estimate cardinality with."
								},
								{
									"key": "filter[num_aggregations]",
									"value": "<integer>",
									"description": "The number of aggregations that a `count`, `rate`, or `gauge` metric is configured to use. Max number of aggregation combos is 9."
								},
								{
									"key": "filter[pct]",
									"value": "<boolean>",
									"description": "A boolean, for distribution metrics only, to estimate cardinality if the metric includes additional percentile aggregators."
								},
								{
									"key": "filter[timespan_h]",
									"value": "<integer>",
									"description": "A window, in hours, from the look back to estimate cardinality with."
								}
							],
							"variable": [
								{
									"key": "metric_name",
									"value": "<string>"
								}
							]
						},
						"description": "Returns the estimated cardinality for a metric with a given tag, percentile and number of aggregations configuration using Metrics without Limits&trade;."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/estimate?filter[groups]=<string>&filter[hours_ago]=<integer>&filter[num_aggregations]=<integer>&filter[pct]=<boolean>&filter[timespan_h]=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"estimate"
									],
									"query": [
										{
											"key": "filter[groups]",
											"value": "<string>",
											"description": "Filtered tag keys that the metric is configured to query with."
										},
										{
											"key": "filter[hours_ago]",
											"value": "<integer>",
											"description": "The number of hours of look back (from now) to estimate cardinality with."
										},
										{
											"key": "filter[num_aggregations]",
											"value": "<integer>",
											"description": "The number of aggregations that a `count`, `rate`, or `gauge` metric is configured to use. Max number of aggregation combos is 9."
										},
										{
											"key": "filter[pct]",
											"value": "<boolean>",
											"description": "A boolean, for distribution metrics only, to estimate cardinality if the metric includes additional percentile aggregators."
										},
										{
											"key": "filter[timespan_h]",
											"value": "<integer>",
											"description": "A window, in hours, from the look back to estimate cardinality with."
										}
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"estimate_type\": \"count_or_gauge\",\n      \"estimated_at\": \"<dateTime>\",\n      \"estimated_output_series\": \"<long>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"metric_cardinality_estimate\"\n  }\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/estimate?filter[groups]=<string>&filter[hours_ago]=<integer>&filter[num_aggregations]=<integer>&filter[pct]=<boolean>&filter[timespan_h]=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"estimate"
									],
									"query": [
										{
											"key": "filter[groups]",
											"value": "<string>",
											"description": "Filtered tag keys that the metric is configured to query with."
										},
										{
											"key": "filter[hours_ago]",
											"value": "<integer>",
											"description": "The number of hours of look back (from now) to estimate cardinality with."
										},
										{
											"key": "filter[num_aggregations]",
											"value": "<integer>",
											"description": "The number of aggregations that a `count`, `rate`, or `gauge` metric is configured to use. Max number of aggregation combos is 9."
										},
										{
											"key": "filter[pct]",
											"value": "<boolean>",
											"description": "A boolean, for distribution metrics only, to estimate cardinality if the metric includes additional percentile aggregators."
										},
										{
											"key": "filter[timespan_h]",
											"value": "<integer>",
											"description": "A window, in hours, from the look back to estimate cardinality with."
										}
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/estimate?filter[groups]=<string>&filter[hours_ago]=<integer>&filter[num_aggregations]=<integer>&filter[pct]=<boolean>&filter[timespan_h]=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"estimate"
									],
									"query": [
										{
											"key": "filter[groups]",
											"value": "<string>",
											"description": "Filtered tag keys that the metric is configured to query with."
										},
										{
											"key": "filter[hours_ago]",
											"value": "<integer>",
											"description": "The number of hours of look back (from now) to estimate cardinality with."
										},
										{
											"key": "filter[num_aggregations]",
											"value": "<integer>",
											"description": "The number of aggregations that a `count`, `rate`, or `gauge` metric is configured to use. Max number of aggregation combos is 9."
										},
										{
											"key": "filter[pct]",
											"value": "<boolean>",
											"description": "A boolean, for distribution metrics only, to estimate cardinality if the metric includes additional percentile aggregators."
										},
										{
											"key": "filter[timespan_h]",
											"value": "<integer>",
											"description": "A window, in hours, from the look back to estimate cardinality with."
										}
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/estimate?filter[groups]=<string>&filter[hours_ago]=<integer>&filter[num_aggregations]=<integer>&filter[pct]=<boolean>&filter[timespan_h]=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"estimate"
									],
									"query": [
										{
											"key": "filter[groups]",
											"value": "<string>",
											"description": "Filtered tag keys that the metric is configured to query with."
										},
										{
											"key": "filter[hours_ago]",
											"value": "<integer>",
											"description": "The number of hours of look back (from now) to estimate cardinality with."
										},
										{
											"key": "filter[num_aggregations]",
											"value": "<integer>",
											"description": "The number of aggregations that a `count`, `rate`, or `gauge` metric is configured to use. Max number of aggregation combos is 9."
										},
										{
											"key": "filter[pct]",
											"value": "<boolean>",
											"description": "A boolean, for distribution metrics only, to estimate cardinality if the metric includes additional percentile aggregators."
										},
										{
											"key": "filter[timespan_h]",
											"value": "<integer>",
											"description": "A window, in hours, from the look back to estimate cardinality with."
										}
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/estimate?filter[groups]=<string>&filter[hours_ago]=<integer>&filter[num_aggregations]=<integer>&filter[pct]=<boolean>&filter[timespan_h]=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"estimate"
									],
									"query": [
										{
											"key": "filter[groups]",
											"value": "<string>",
											"description": "Filtered tag keys that the metric is configured to query with."
										},
										{
											"key": "filter[hours_ago]",
											"value": "<integer>",
											"description": "The number of hours of look back (from now) to estimate cardinality with."
										},
										{
											"key": "filter[num_aggregations]",
											"value": "<integer>",
											"description": "The number of aggregations that a `count`, `rate`, or `gauge` metric is configured to use. Max number of aggregation combos is 9."
										},
										{
											"key": "filter[pct]",
											"value": "<boolean>",
											"description": "A boolean, for distribution metrics only, to estimate cardinality if the metric includes additional percentile aggregators."
										},
										{
											"key": "filter[timespan_h]",
											"value": "<integer>",
											"description": "A window, in hours, from the look back to estimate cardinality with."
										}
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a tag configuration",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								":metric_name",
								"tags"
							],
							"variable": [
								{
									"key": "metric_name",
									"value": "<string>"
								}
							]
						},
						"description": "Deletes a metric's tag configuration. Can only be used with application\nkeys from users with the `Manage Tags for Metrics` permission."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List tag configuration by name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								":metric_name",
								"tags"
							],
							"variable": [
								{
									"key": "metric_name",
									"value": "<string>"
								}
							]
						},
						"description": "Returns the tag configuration for the given metric name."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"aggregations\": [\n        {\n          \"time\": \"avg\",\n          \"space\": \"avg\"\n        },\n        {\n          \"time\": \"count\",\n          \"space\": \"min\"\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"include_percentiles\": \"<boolean>\",\n      \"metric_type\": \"gauge\",\n      \"modified_at\": \"<dateTime>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\"\n  }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a tag configuration",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\",\n    \"attributes\": {\n      \"aggregations\": [\n        {\n          \"time\": \"avg\",\n          \"space\": \"max\"\n        },\n        {\n          \"time\": \"count\",\n          \"space\": \"sum\"\n        }\n      ],\n      \"include_percentiles\": \"<boolean>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								":metric_name",
								"tags"
							],
							"variable": [
								{
									"key": "metric_name",
									"value": "<string>"
								}
							]
						},
						"description": "Update the tag configuration of a metric or percentile aggregations of a distribution metric or custom aggregations\nof a count, rate, or gauge metric.\nCan only be used with application keys from users with the `Manage Tags for Metrics` permission."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\",\n    \"attributes\": {\n      \"aggregations\": [\n        {\n          \"time\": \"avg\",\n          \"space\": \"max\"\n        },\n        {\n          \"time\": \"count\",\n          \"space\": \"sum\"\n        }\n      ],\n      \"include_percentiles\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"aggregations\": [\n        {\n          \"time\": \"avg\",\n          \"space\": \"avg\"\n        },\n        {\n          \"time\": \"count\",\n          \"space\": \"min\"\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"include_percentiles\": \"<boolean>\",\n      \"metric_type\": \"gauge\",\n      \"modified_at\": \"<dateTime>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\",\n    \"attributes\": {\n      \"aggregations\": [\n        {\n          \"time\": \"avg\",\n          \"space\": \"max\"\n        },\n        {\n          \"time\": \"count\",\n          \"space\": \"sum\"\n        }\n      ],\n      \"include_percentiles\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\",\n    \"attributes\": {\n      \"aggregations\": [\n        {\n          \"time\": \"avg\",\n          \"space\": \"max\"\n        },\n        {\n          \"time\": \"count\",\n          \"space\": \"sum\"\n        }\n      ],\n      \"include_percentiles\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\",\n    \"attributes\": {\n      \"aggregations\": [\n        {\n          \"time\": \"avg\",\n          \"space\": \"max\"\n        },\n        {\n          \"time\": \"count\",\n          \"space\": \"sum\"\n        }\n      ],\n      \"include_percentiles\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\",\n    \"attributes\": {\n      \"aggregations\": [\n        {\n          \"time\": \"avg\",\n          \"space\": \"max\"\n        },\n        {\n          \"time\": \"count\",\n          \"space\": \"sum\"\n        }\n      ],\n      \"include_percentiles\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a tag configuration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\",\n    \"attributes\": {\n      \"tags\": [],\n      \"metric_type\": \"gauge\",\n      \"aggregations\": [\n        {\n          \"time\": \"count\",\n          \"space\": \"max\"\n        },\n        {\n          \"time\": \"max\",\n          \"space\": \"min\"\n        }\n      ],\n      \"include_percentiles\": \"<boolean>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								":metric_name",
								"tags"
							],
							"variable": [
								{
									"key": "metric_name",
									"value": "<string>"
								}
							]
						},
						"description": "Create and define a list of queryable tag keys for an existing count/gauge/rate/distribution metric.\nOptionally, include percentile aggregations on any distribution metric or configure custom aggregations\non any count, rate, or gauge metric.\nCan only be used with application keys of users with the `Manage Tags for Metrics` permission."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\",\n    \"attributes\": {\n      \"tags\": [],\n      \"metric_type\": \"gauge\",\n      \"aggregations\": [\n        {\n          \"time\": \"count\",\n          \"space\": \"max\"\n        },\n        {\n          \"time\": \"max\",\n          \"space\": \"min\"\n        }\n      ],\n      \"include_percentiles\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"aggregations\": [\n        {\n          \"time\": \"avg\",\n          \"space\": \"avg\"\n        },\n        {\n          \"time\": \"count\",\n          \"space\": \"min\"\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"include_percentiles\": \"<boolean>\",\n      \"metric_type\": \"gauge\",\n      \"modified_at\": \"<dateTime>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\",\n    \"attributes\": {\n      \"tags\": [],\n      \"metric_type\": \"gauge\",\n      \"aggregations\": [\n        {\n          \"time\": \"count\",\n          \"space\": \"max\"\n        },\n        {\n          \"time\": \"max\",\n          \"space\": \"min\"\n        }\n      ],\n      \"include_percentiles\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\",\n    \"attributes\": {\n      \"tags\": [],\n      \"metric_type\": \"gauge\",\n      \"aggregations\": [\n        {\n          \"time\": \"count\",\n          \"space\": \"max\"\n        },\n        {\n          \"time\": \"max\",\n          \"space\": \"min\"\n        }\n      ],\n      \"include_percentiles\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\",\n    \"attributes\": {\n      \"tags\": [],\n      \"metric_type\": \"gauge\",\n      \"aggregations\": [\n        {\n          \"time\": \"count\",\n          \"space\": \"max\"\n        },\n        {\n          \"time\": \"max\",\n          \"space\": \"min\"\n        }\n      ],\n      \"include_percentiles\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"manage_tags\",\n    \"attributes\": {\n      \"tags\": [],\n      \"metric_type\": \"gauge\",\n      \"aggregations\": [\n        {\n          \"time\": \"count\",\n          \"space\": \"max\"\n        },\n        {\n          \"time\": \"max\",\n          \"space\": \"min\"\n        }\n      ],\n      \"include_percentiles\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List distinct metric volumes by metric name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/volumes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								":metric_name",
								"volumes"
							],
							"variable": [
								{
									"key": "metric_name",
									"value": "<string>"
								}
							]
						},
						"description": "View distinct metrics volumes for the given metric name.\n\nCustom metrics generated in-app from other products will return `null` for ingested volumes."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/volumes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"volumes"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"distinct_volume\": \"<long>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"distinct_metric_volumes\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/volumes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"volumes"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/volumes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"volumes"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/volumes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"volumes"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/volumes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"volumes"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Query scalar data across multiple products",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"scalar_request\",\n    \"attributes\": {\n      \"to\": \"<long>\",\n      \"from\": \"<long>\",\n      \"queries\": [\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"aggregator\": \"avg\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"aggregator\": \"avg\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"formulas\": [\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        },\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        }\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/query/scalar",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"query",
								"scalar"
							]
						},
						"description": "Query scalar values (as seen on Query Value, Table, and Toplist widgets).\nMultiple data sources are supported with the ability to\nprocess the data using formulas and functions."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"scalar_request\",\n    \"attributes\": {\n      \"to\": \"<long>\",\n      \"from\": \"<long>\",\n      \"queries\": [\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"aggregator\": \"avg\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"aggregator\": \"avg\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"formulas\": [\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        },\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/query/scalar",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"query",
										"scalar"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"columns\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"values\": [\n            [\n              \"<string>\",\n              \"<string>\"\n            ],\n            [\n              \"<string>\",\n              \"<string>\"\n            ]\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"values\": [\n            [\n              \"<string>\",\n              \"<string>\"\n            ],\n            [\n              \"<string>\",\n              \"<string>\"\n            ]\n          ]\n        }\n      ]\n    },\n    \"type\": \"scalar_response\"\n  },\n  \"errors\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"scalar_request\",\n    \"attributes\": {\n      \"to\": \"<long>\",\n      \"from\": \"<long>\",\n      \"queries\": [\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"aggregator\": \"avg\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"aggregator\": \"avg\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"formulas\": [\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        },\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/query/scalar",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"query",
										"scalar"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"scalar_request\",\n    \"attributes\": {\n      \"to\": \"<long>\",\n      \"from\": \"<long>\",\n      \"queries\": [\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"aggregator\": \"avg\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"aggregator\": \"avg\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"formulas\": [\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        },\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/query/scalar",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"query",
										"scalar"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"scalar_request\",\n    \"attributes\": {\n      \"to\": \"<long>\",\n      \"from\": \"<long>\",\n      \"queries\": [\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"aggregator\": \"avg\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"aggregator\": \"avg\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"formulas\": [\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        },\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/query/scalar",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"query",
										"scalar"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"scalar_request\",\n    \"attributes\": {\n      \"to\": \"<long>\",\n      \"from\": \"<long>\",\n      \"queries\": [\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"aggregator\": \"avg\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"aggregator\": \"avg\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"formulas\": [\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        },\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/query/scalar",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"query",
										"scalar"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Query timeseries data across multiple products",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"timeseries_request\",\n    \"attributes\": {\n      \"to\": \"<long>\",\n      \"from\": \"<long>\",\n      \"queries\": [\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"formulas\": [\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        },\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        }\n      ],\n      \"interval\": \"<long>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/query/timeseries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"query",
								"timeseries"
							]
						},
						"description": "Query timeseries data across various data sources and\nprocess the data by applying formulas and functions."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"timeseries_request\",\n    \"attributes\": {\n      \"to\": \"<long>\",\n      \"from\": \"<long>\",\n      \"queries\": [\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"formulas\": [\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        },\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        }\n      ],\n      \"interval\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/query/timeseries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"query",
										"timeseries"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"series\": [\n        {\n          \"group_tags\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"query_index\": \"<integer>\",\n          \"unit\": [\n            {\n              \"family\": \"<string>\",\n              \"name\": \"<string>\",\n              \"plural\": \"<string>\",\n              \"scale_factor\": \"<double>\",\n              \"short_name\": \"<string>\"\n            },\n            {\n              \"family\": \"<string>\",\n              \"name\": \"<string>\",\n              \"plural\": \"<string>\",\n              \"scale_factor\": \"<double>\",\n              \"short_name\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"group_tags\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"query_index\": \"<integer>\",\n          \"unit\": [\n            {\n              \"family\": \"<string>\",\n              \"name\": \"<string>\",\n              \"plural\": \"<string>\",\n              \"scale_factor\": \"<double>\",\n              \"short_name\": \"<string>\"\n            },\n            {\n              \"family\": \"<string>\",\n              \"name\": \"<string>\",\n              \"plural\": \"<string>\",\n              \"scale_factor\": \"<double>\",\n              \"short_name\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"times\": [\n        \"<long>\",\n        \"<long>\"\n      ],\n      \"values\": [\n        [\n          \"<double>\",\n          \"<double>\"\n        ],\n        [\n          \"<double>\",\n          \"<double>\"\n        ]\n      ]\n    },\n    \"type\": \"timeseries_response\"\n  },\n  \"errors\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"timeseries_request\",\n    \"attributes\": {\n      \"to\": \"<long>\",\n      \"from\": \"<long>\",\n      \"queries\": [\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"formulas\": [\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        },\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        }\n      ],\n      \"interval\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/query/timeseries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"query",
										"timeseries"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"timeseries_request\",\n    \"attributes\": {\n      \"to\": \"<long>\",\n      \"from\": \"<long>\",\n      \"queries\": [\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"formulas\": [\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        },\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        }\n      ],\n      \"interval\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/query/timeseries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"query",
										"timeseries"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"timeseries_request\",\n    \"attributes\": {\n      \"to\": \"<long>\",\n      \"from\": \"<long>\",\n      \"queries\": [\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"formulas\": [\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        },\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        }\n      ],\n      \"interval\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/query/timeseries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"query",
										"timeseries"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"timeseries_request\",\n    \"attributes\": {\n      \"to\": \"<long>\",\n      \"from\": \"<long>\",\n      \"queries\": [\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"data_source\": \"metrics\",\n          \"query\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"formulas\": [\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        },\n        {\n          \"formula\": \"<string>\",\n          \"limit\": {\n            \"count\": \"<integer>\",\n            \"order\": \"desc\"\n          }\n        }\n      ],\n      \"interval\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/query/timeseries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"query",
										"timeseries"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Submit metrics",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "HTTP header used to compress the media-type.",
								"key": "Content-Encoding",
								"value": "identity"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"series\": [\n    {\n      \"metric\": \"<string>\",\n      \"points\": [\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        },\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        }\n      ],\n      \"interval\": \"<long>\",\n      \"metadata\": {\n        \"origin\": {\n          \"metric_type\": 0,\n          \"product\": 0,\n          \"service\": 0\n        }\n      },\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"source_type_name\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": 3,\n      \"unit\": \"<string>\"\n    },\n    {\n      \"metric\": \"<string>\",\n      \"points\": [\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        },\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        }\n      ],\n      \"interval\": \"<long>\",\n      \"metadata\": {\n        \"origin\": {\n          \"metric_type\": 0,\n          \"product\": 0,\n          \"service\": 0\n        }\n      },\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"source_type_name\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": 0,\n      \"unit\": \"<string>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/series",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"series"
							]
						},
						"description": "The metrics end-point allows you to post time-series data that can be graphed on Datadog’s dashboards.\nThe maximum payload size is 500 kilobytes (512000 bytes). Compressed payloads must have a decompressed size of less than 5 megabytes (5242880 bytes).\n\nIf you’re submitting metrics directly to the Datadog API without using DogStatsD, expect:\n\n- 64 bits for the timestamp\n- 64 bits for the value\n- 20 bytes for the metric names\n- 50 bytes for the timeseries\n- The full payload is approximately 100 bytes.\n\nHost name is one of the resources in the Resources field."
					},
					"response": [
						{
							"name": "Payload accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "deflate"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"series\": [\n    {\n      \"metric\": \"<string>\",\n      \"points\": [\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        },\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        }\n      ],\n      \"interval\": \"<long>\",\n      \"metadata\": {\n        \"origin\": {\n          \"metric_type\": 0,\n          \"product\": 0,\n          \"service\": 0\n        }\n      },\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"source_type_name\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": 3,\n      \"unit\": \"<string>\"\n    },\n    {\n      \"metric\": \"<string>\",\n      \"points\": [\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        },\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        }\n      ],\n      \"interval\": \"<long>\",\n      \"metadata\": {\n        \"origin\": {\n          \"metric_type\": 0,\n          \"product\": 0,\n          \"service\": 0\n        }\n      },\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"source_type_name\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": 0,\n      \"unit\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"series"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "deflate"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"series\": [\n    {\n      \"metric\": \"<string>\",\n      \"points\": [\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        },\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        }\n      ],\n      \"interval\": \"<long>\",\n      \"metadata\": {\n        \"origin\": {\n          \"metric_type\": 0,\n          \"product\": 0,\n          \"service\": 0\n        }\n      },\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"source_type_name\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": 3,\n      \"unit\": \"<string>\"\n    },\n    {\n      \"metric\": \"<string>\",\n      \"points\": [\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        },\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        }\n      ],\n      \"interval\": \"<long>\",\n      \"metadata\": {\n        \"origin\": {\n          \"metric_type\": 0,\n          \"product\": 0,\n          \"service\": 0\n        }\n      },\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"source_type_name\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": 0,\n      \"unit\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"series"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "deflate"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"series\": [\n    {\n      \"metric\": \"<string>\",\n      \"points\": [\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        },\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        }\n      ],\n      \"interval\": \"<long>\",\n      \"metadata\": {\n        \"origin\": {\n          \"metric_type\": 0,\n          \"product\": 0,\n          \"service\": 0\n        }\n      },\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"source_type_name\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": 3,\n      \"unit\": \"<string>\"\n    },\n    {\n      \"metric\": \"<string>\",\n      \"points\": [\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        },\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        }\n      ],\n      \"interval\": \"<long>\",\n      \"metadata\": {\n        \"origin\": {\n          \"metric_type\": 0,\n          \"product\": 0,\n          \"service\": 0\n        }\n      },\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"source_type_name\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": 0,\n      \"unit\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"series"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Request timeout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "deflate"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"series\": [\n    {\n      \"metric\": \"<string>\",\n      \"points\": [\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        },\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        }\n      ],\n      \"interval\": \"<long>\",\n      \"metadata\": {\n        \"origin\": {\n          \"metric_type\": 0,\n          \"product\": 0,\n          \"service\": 0\n        }\n      },\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"source_type_name\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": 3,\n      \"unit\": \"<string>\"\n    },\n    {\n      \"metric\": \"<string>\",\n      \"points\": [\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        },\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        }\n      ],\n      \"interval\": \"<long>\",\n      \"metadata\": {\n        \"origin\": {\n          \"metric_type\": 0,\n          \"product\": 0,\n          \"service\": 0\n        }\n      },\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"source_type_name\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": 0,\n      \"unit\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"series"
									]
								}
							},
							"status": "Request Timeout",
							"code": 408,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Payload too large",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "deflate"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"series\": [\n    {\n      \"metric\": \"<string>\",\n      \"points\": [\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        },\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        }\n      ],\n      \"interval\": \"<long>\",\n      \"metadata\": {\n        \"origin\": {\n          \"metric_type\": 0,\n          \"product\": 0,\n          \"service\": 0\n        }\n      },\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"source_type_name\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": 3,\n      \"unit\": \"<string>\"\n    },\n    {\n      \"metric\": \"<string>\",\n      \"points\": [\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        },\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        }\n      ],\n      \"interval\": \"<long>\",\n      \"metadata\": {\n        \"origin\": {\n          \"metric_type\": 0,\n          \"product\": 0,\n          \"service\": 0\n        }\n      },\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"source_type_name\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": 0,\n      \"unit\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"series"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "deflate"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"series\": [\n    {\n      \"metric\": \"<string>\",\n      \"points\": [\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        },\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        }\n      ],\n      \"interval\": \"<long>\",\n      \"metadata\": {\n        \"origin\": {\n          \"metric_type\": 0,\n          \"product\": 0,\n          \"service\": 0\n        }\n      },\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"source_type_name\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": 3,\n      \"unit\": \"<string>\"\n    },\n    {\n      \"metric\": \"<string>\",\n      \"points\": [\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        },\n        {\n          \"timestamp\": \"<long>\",\n          \"value\": \"<double>\"\n        }\n      ],\n      \"interval\": \"<long>\",\n      \"metadata\": {\n        \"origin\": {\n          \"metric_type\": 0,\n          \"product\": 0,\n          \"service\": 0\n        }\n      },\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"source_type_name\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": 0,\n      \"unit\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"series"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "The metrics endpoint allows you to:\n\n- Post metrics data so it can be graphed on Datadog’s dashboards\n- Query metrics from any time period\n- Modify tag configurations for metrics\n- View tags and volumes for metrics\n\n**Note**: A graph can only contain a set number of points\nand as the timeframe over which a metric is viewed increases,\naggregation between points occurs to stay below that set number.\n\nThe Post, Patch, and Delete `manage_tags` API methods can only be performed by\na user who has the `Manage Tags for Metrics` permission."
		},
		{
			"name": "Monitors",
			"item": [
				{
					"name": "Get all monitor details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor?group_states=alert&name=tempor Ut sed velit&tags=host:host0&monitor_tags=service:my-app&with_downtimes=true&id_offset=-62147425&page=0&page_size=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor"
							],
							"query": [
								{
									"key": "group_states",
									"value": "alert",
									"description": "When specified, shows additional information about the group states.\nChoose one or more from `all`, `alert`, `warn`, and `no data`."
								},
								{
									"key": "name",
									"value": "tempor Ut sed velit",
									"description": "A string to filter monitors by name."
								},
								{
									"key": "tags",
									"value": "host:host0",
									"description": "A comma separated list indicating what tags, if any, should be used to filter the list of monitors by scope.\nFor example, `host:host0`."
								},
								{
									"key": "monitor_tags",
									"value": "service:my-app",
									"description": "A comma separated list indicating what service and/or custom tags, if any, should be used to filter the list of monitors.\nTags created in the Datadog UI automatically have the service key prepended. For example, `service:my-app`."
								},
								{
									"key": "with_downtimes",
									"value": "true",
									"description": "If this argument is set to true, then the returned data includes all current active downtimes for each monitor."
								},
								{
									"key": "id_offset",
									"value": "-62147425",
									"description": "Use this parameter for paginating through large sets of monitors. Start with a value of zero, make a request, set the value to the last ID of result set, and then repeat until the response is empty."
								},
								{
									"key": "page",
									"value": "0",
									"description": "The page to start paginating from. If this argument is not specified, the request returns all monitors without pagination."
								},
								{
									"key": "page_size",
									"value": "20",
									"description": "The number of monitors to return per page. If the page argument is not specified, the default behavior returns all monitors without a `page_size` limit. However, if page is specified and `page_size` is not, the argument defaults to 100."
								}
							]
						},
						"description": "Get details about the specified monitor from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor?group_states=alert&name=tempor Ut sed velit&tags=host:host0&monitor_tags=service:my-app&with_downtimes=true&id_offset=-62147425&page=0&page_size=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor"
									],
									"query": [
										{
											"key": "group_states",
											"value": "alert",
											"description": "When specified, shows additional information about the group states.\nChoose one or more from `all`, `alert`, `warn`, and `no data`."
										},
										{
											"key": "name",
											"value": "tempor Ut sed velit",
											"description": "A string to filter monitors by name."
										},
										{
											"key": "tags",
											"value": "host:host0",
											"description": "A comma separated list indicating what tags, if any, should be used to filter the list of monitors by scope.\nFor example, `host:host0`."
										},
										{
											"key": "monitor_tags",
											"value": "service:my-app",
											"description": "A comma separated list indicating what service and/or custom tags, if any, should be used to filter the list of monitors.\nTags created in the Datadog UI automatically have the service key prepended. For example, `service:my-app`."
										},
										{
											"key": "with_downtimes",
											"value": "true",
											"description": "If this argument is set to true, then the returned data includes all current active downtimes for each monitor."
										},
										{
											"key": "id_offset",
											"value": "-62147425",
											"description": "Use this parameter for paginating through large sets of monitors. Start with a value of zero, make a request, set the value to the last ID of result set, and then repeat until the response is empty."
										},
										{
											"key": "page",
											"value": "0",
											"description": "The page to start paginating from. If this argument is not specified, the request returns all monitors without pagination."
										},
										{
											"key": "page_size",
											"value": "20",
											"description": "The number of monitors to return per page. If the page argument is not specified, the default behavior returns all monitors without a `page_size` limit. However, if page is specified and `page_size` is not, the argument defaults to 100."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"type\": \"query alert\",\n    \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n    \"created\": \"1977-10-10T13:08:01.527Z\",\n    \"creator\": {\n      \"email\": \"eiusmod aliquip pariatur dolore\",\n      \"handle\": \"fugiat id sint\",\n      \"name\": \"elit in\"\n    },\n    \"deleted\": \"2015-07-16T18:46:50.390Z\",\n    \"id\": 83649643,\n    \"matching_downtimes\": [\n      {\n        \"id\": 1625,\n        \"end\": 1412792983,\n        \"scope\": [\n          \"env:staging\"\n        ],\n        \"start\": 1412792983\n      },\n      {\n        \"id\": 1625,\n        \"end\": 1412792983,\n        \"scope\": [\n          \"env:staging\"\n        ],\n        \"start\": 1412792983\n      }\n    ],\n    \"message\": \"adi\",\n    \"modified\": \"1973-08-05T09:10:13.718Z\",\n    \"multi\": false,\n    \"name\": \"My monitor\",\n    \"options\": {\n      \"aggregation\": {\n        \"group_by\": \"host\",\n        \"metric\": \"metrics.name\",\n        \"type\": \"count\"\n      },\n      \"device_ids\": [\n        \"firefox.tablet\",\n        \"mobile_small\"\n      ],\n      \"enable_logs_sample\": true,\n      \"enable_samples\": true,\n      \"escalation_message\": \"none\",\n      \"evaluation_delay\": 27121357,\n      \"group_retention_duration\": \"esse aliquip ullamco irure\",\n      \"groupby_simple_monitor\": true,\n      \"include_tags\": true,\n      \"locked\": false,\n      \"min_failure_duration\": 0,\n      \"min_location_failed\": 1,\n      \"new_group_delay\": -9275927,\n      \"new_host_delay\": 300,\n      \"no_data_timeframe\": 58492166,\n      \"notification_preset_name\": \"show_all\",\n      \"notify_audit\": false,\n      \"notify_by\": [\n        \"ut quis e\",\n        \"dolore elit\"\n      ],\n      \"notify_no_data\": false,\n      \"on_missing_data\": \"show_no_data\",\n      \"renotify_interval\": null,\n      \"renotify_occurrences\": -27638100,\n      \"renotify_statuses\": [\n        \"alert\",\n        \"warn\"\n      ],\n      \"require_full_window\": true,\n      \"scheduling_options\": {\n        \"evaluation_window\": {\n          \"day_starts\": \"04:00\",\n          \"hour_starts\": 0,\n          \"month_starts\": 1\n        }\n      },\n      \"silenced\": {\n        \"Ut_d_e\": 94650378\n      },\n      \"synthetics_check_id\": \"enim et tempor\",\n      \"threshold_windows\": {\n        \"recovery_window\": \"ipsum eiusmod\",\n        \"trigger_window\": \"ullamco\"\n      },\n      \"thresholds\": {\n        \"critical\": -74585739.55469063,\n        \"critical_recovery\": -14449679.792215124,\n        \"ok\": 69468073.65422091,\n        \"unknown\": -35840527.53565459,\n        \"warning\": -78191860.79094723,\n        \"warning_recovery\": 30967604.742167816\n      },\n      \"timeout_h\": null,\n      \"variables\": [\n        {\n          \"data_source\": \"rum\",\n          \"compute\": {\n            \"aggregation\": \"avg\",\n            \"interval\": 60000,\n            \"metric\": \"@duration\"\n          },\n          \"name\": \"query_errors\",\n          \"group_by\": [\n            {\n              \"facet\": \"status\",\n              \"limit\": 10,\n              \"sort\": {\n                \"aggregation\": \"avg\",\n                \"metric\": \"qui Ut cupidatat proid\",\n                \"order\": \"desc\"\n              }\n            },\n            {\n              \"facet\": \"status\",\n              \"limit\": 10,\n              \"sort\": {\n                \"aggregation\": \"avg\",\n                \"metric\": \"nostrud mollit\",\n                \"order\": \"desc\"\n              }\n            }\n          ],\n          \"indexes\": [\n            \"days-3\",\n            \"days-7\"\n          ],\n          \"search\": {\n            \"query\": \"service:query\"\n          }\n        },\n        {\n          \"data_source\": \"rum\",\n          \"compute\": {\n            \"aggregation\": \"avg\",\n            \"interval\": 60000,\n            \"metric\": \"@duration\"\n          },\n          \"name\": \"query_errors\",\n          \"group_by\": [\n            {\n              \"facet\": \"status\",\n              \"limit\": 10,\n              \"sort\": {\n                \"aggregation\": \"avg\",\n                \"metric\": \"ut non\",\n                \"order\": \"desc\"\n              }\n            },\n            {\n              \"facet\": \"status\",\n              \"limit\": 10,\n              \"sort\": {\n                \"aggregation\": \"avg\",\n                \"metric\": \"reprehenderit sint eu proident\",\n                \"order\": \"desc\"\n              }\n            }\n          ],\n          \"indexes\": [\n            \"days-3\",\n            \"days-7\"\n          ],\n          \"search\": {\n            \"query\": \"service:query\"\n          }\n        }\n      ]\n    },\n    \"overall_state\": \"Unknown\",\n    \"priority\": 4,\n    \"restricted_roles\": [\n      \"Ut\",\n      \"dolor ad Duis proident\"\n    ],\n    \"state\": {\n      \"groups\": {\n        \"ullamco2\": {\n          \"last_nodata_ts\": -30657062,\n          \"last_notified_ts\": -69789968,\n          \"last_resolved_ts\": -40935564,\n          \"last_triggered_ts\": 63742261,\n          \"name\": \"id\",\n          \"status\": \"Alert\"\n        },\n        \"voluptate_0c\": {\n          \"last_nodata_ts\": 13097104,\n          \"last_notified_ts\": 53104444,\n          \"last_resolved_ts\": -69320667,\n          \"last_triggered_ts\": 27152807,\n          \"name\": \"quis amet\",\n          \"status\": \"Alert\"\n        }\n      }\n    },\n    \"tags\": [\n      \"fugiat culpa aliqua consectetur\",\n      \"minim in\"\n    ]\n  },\n  {\n    \"type\": \"query alert\",\n    \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n    \"created\": \"1952-04-01T14:02:58.093Z\",\n    \"creator\": {\n      \"email\": \"esse ad veniam qui\",\n      \"handle\": \"nulla enim non\",\n      \"name\": \"ut reprehend\"\n    },\n    \"deleted\": \"2005-07-24T20:18:36.078Z\",\n    \"id\": 14961847,\n    \"matching_downtimes\": [\n      {\n        \"id\": 1625,\n        \"end\": 1412792983,\n        \"scope\": [\n          \"env:staging\"\n        ],\n        \"start\": 1412792983\n      },\n      {\n        \"id\": 1625,\n        \"end\": 1412792983,\n        \"scope\": [\n          \"env:staging\"\n        ],\n        \"start\": 1412792983\n      }\n    ],\n    \"message\": \"labore nulla\",\n    \"modified\": \"2013-05-28T22:30:26.014Z\",\n    \"multi\": true,\n    \"name\": \"My monitor\",\n    \"options\": {\n      \"aggregation\": {\n        \"group_by\": \"host\",\n        \"metric\": \"metrics.name\",\n        \"type\": \"count\"\n      },\n      \"device_ids\": [\n        \"chrome.tablet\",\n        \"firefox.laptop_large\"\n      ],\n      \"enable_logs_sample\": false,\n      \"enable_samples\": true,\n      \"escalation_message\": \"none\",\n      \"evaluation_delay\": 48023490,\n      \"group_retention_duration\": \"veniam eiusmod anim\",\n      \"groupby_simple_monitor\": true,\n      \"include_tags\": true,\n      \"locked\": false,\n      \"min_failure_duration\": 0,\n      \"min_location_failed\": 1,\n      \"new_group_delay\": -78698406,\n      \"new_host_delay\": 300,\n      \"no_data_timeframe\": -29298203,\n      \"notification_preset_name\": \"show_all\",\n      \"notify_audit\": false,\n      \"notify_by\": [\n        \"in labore irure reprehenderit\",\n        \"Ut ea\"\n      ],\n      \"notify_no_data\": false,\n      \"on_missing_data\": \"default\",\n      \"renotify_interval\": null,\n      \"renotify_occurrences\": 88843653,\n      \"renotify_statuses\": [\n        \"warn\",\n        \"no data\"\n      ],\n      \"require_full_window\": false,\n      \"scheduling_options\": {\n        \"evaluation_window\": {\n          \"day_starts\": \"04:00\",\n          \"hour_starts\": 0,\n          \"month_starts\": 1\n        }\n      },\n      \"silenced\": {\n        \"ut_8\": -75892703\n      },\n      \"synthetics_check_id\": \"ut et aute cupidatat\",\n      \"threshold_windows\": {\n        \"recovery_window\": \"dolor do\",\n        \"trigger_window\": \"pariatur\"\n      },\n      \"thresholds\": {\n        \"critical\": -5336230.352944598,\n        \"critical_recovery\": 7945004.71738635,\n        \"ok\": -68115416.21610427,\n        \"unknown\": 89541673.34797806,\n        \"warning\": 66901483.96194494,\n        \"warning_recovery\": -39599171.26178945\n      },\n      \"timeout_h\": null,\n      \"variables\": [\n        {\n          \"data_source\": \"rum\",\n          \"compute\": {\n            \"aggregation\": \"avg\",\n            \"interval\": 60000,\n            \"metric\": \"@duration\"\n          },\n          \"name\": \"query_errors\",\n          \"group_by\": [\n            {\n              \"facet\": \"status\",\n              \"limit\": 10,\n              \"sort\": {\n                \"aggregation\": \"avg\",\n                \"metric\": \"deserunt nisi mollit\",\n                \"order\": \"desc\"\n              }\n            },\n            {\n              \"facet\": \"status\",\n              \"limit\": 10,\n              \"sort\": {\n                \"aggregation\": \"avg\",\n                \"metric\": \"dolor pariatur\",\n                \"order\": \"desc\"\n              }\n            }\n          ],\n          \"indexes\": [\n            \"days-3\",\n            \"days-7\"\n          ],\n          \"search\": {\n            \"query\": \"service:query\"\n          }\n        },\n        {\n          \"data_source\": \"rum\",\n          \"compute\": {\n            \"aggregation\": \"avg\",\n            \"interval\": 60000,\n            \"metric\": \"@duration\"\n          },\n          \"name\": \"query_errors\",\n          \"group_by\": [\n            {\n              \"facet\": \"status\",\n              \"limit\": 10,\n              \"sort\": {\n                \"aggregation\": \"avg\",\n                \"metric\": \"l\",\n                \"order\": \"desc\"\n              }\n            },\n            {\n              \"facet\": \"status\",\n              \"limit\": 10,\n              \"sort\": {\n                \"aggregation\": \"avg\",\n                \"metric\": \"ut non\",\n                \"order\": \"desc\"\n              }\n            }\n          ],\n          \"indexes\": [\n            \"days-3\",\n            \"days-7\"\n          ],\n          \"search\": {\n            \"query\": \"service:query\"\n          }\n        }\n      ]\n    },\n    \"overall_state\": \"Unknown\",\n    \"priority\": 3,\n    \"restricted_roles\": [\n      \"ipsum laboris laborum incididunt\",\n      \"fugiat non est\"\n    ],\n    \"state\": {\n      \"groups\": {\n        \"Ut7\": {\n          \"last_nodata_ts\": 21127128,\n          \"last_notified_ts\": 19208840,\n          \"last_resolved_ts\": 29022384,\n          \"last_triggered_ts\": -96682791,\n          \"name\": \"ex tempor\",\n          \"status\": \"OK\"\n        }\n      }\n    },\n    \"tags\": [\n      \"dolor nulla dolore elit\",\n      \"consequat sunt in\"\n    ]\n  }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor?group_states=alert&name=tempor Ut sed velit&tags=host:host0&monitor_tags=service:my-app&with_downtimes=true&id_offset=-62147425&page=0&page_size=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor"
									],
									"query": [
										{
											"key": "group_states",
											"value": "alert",
											"description": "When specified, shows additional information about the group states.\nChoose one or more from `all`, `alert`, `warn`, and `no data`."
										},
										{
											"key": "name",
											"value": "tempor Ut sed velit",
											"description": "A string to filter monitors by name."
										},
										{
											"key": "tags",
											"value": "host:host0",
											"description": "A comma separated list indicating what tags, if any, should be used to filter the list of monitors by scope.\nFor example, `host:host0`."
										},
										{
											"key": "monitor_tags",
											"value": "service:my-app",
											"description": "A comma separated list indicating what service and/or custom tags, if any, should be used to filter the list of monitors.\nTags created in the Datadog UI automatically have the service key prepended. For example, `service:my-app`."
										},
										{
											"key": "with_downtimes",
											"value": "true",
											"description": "If this argument is set to true, then the returned data includes all current active downtimes for each monitor."
										},
										{
											"key": "id_offset",
											"value": "-62147425",
											"description": "Use this parameter for paginating through large sets of monitors. Start with a value of zero, make a request, set the value to the last ID of result set, and then repeat until the response is empty."
										},
										{
											"key": "page",
											"value": "0",
											"description": "The page to start paginating from. If this argument is not specified, the request returns all monitors without pagination."
										},
										{
											"key": "page_size",
											"value": "20",
											"description": "The number of monitors to return per page. If the page argument is not specified, the default behavior returns all monitors without a `page_size` limit. However, if page is specified and `page_size` is not, the argument defaults to 100."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor?group_states=alert&name=tempor Ut sed velit&tags=host:host0&monitor_tags=service:my-app&with_downtimes=true&id_offset=-62147425&page=0&page_size=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor"
									],
									"query": [
										{
											"key": "group_states",
											"value": "alert",
											"description": "When specified, shows additional information about the group states.\nChoose one or more from `all`, `alert`, `warn`, and `no data`."
										},
										{
											"key": "name",
											"value": "tempor Ut sed velit",
											"description": "A string to filter monitors by name."
										},
										{
											"key": "tags",
											"value": "host:host0",
											"description": "A comma separated list indicating what tags, if any, should be used to filter the list of monitors by scope.\nFor example, `host:host0`."
										},
										{
											"key": "monitor_tags",
											"value": "service:my-app",
											"description": "A comma separated list indicating what service and/or custom tags, if any, should be used to filter the list of monitors.\nTags created in the Datadog UI automatically have the service key prepended. For example, `service:my-app`."
										},
										{
											"key": "with_downtimes",
											"value": "true",
											"description": "If this argument is set to true, then the returned data includes all current active downtimes for each monitor."
										},
										{
											"key": "id_offset",
											"value": "-62147425",
											"description": "Use this parameter for paginating through large sets of monitors. Start with a value of zero, make a request, set the value to the last ID of result set, and then repeat until the response is empty."
										},
										{
											"key": "page",
											"value": "0",
											"description": "The page to start paginating from. If this argument is not specified, the request returns all monitors without pagination."
										},
										{
											"key": "page_size",
											"value": "20",
											"description": "The number of monitors to return per page. If the page argument is not specified, the default behavior returns all monitors without a `page_size` limit. However, if page is specified and `page_size` is not, the argument defaults to 100."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor?group_states=alert&name=tempor Ut sed velit&tags=host:host0&monitor_tags=service:my-app&with_downtimes=true&id_offset=-62147425&page=0&page_size=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor"
									],
									"query": [
										{
											"key": "group_states",
											"value": "alert",
											"description": "When specified, shows additional information about the group states.\nChoose one or more from `all`, `alert`, `warn`, and `no data`."
										},
										{
											"key": "name",
											"value": "tempor Ut sed velit",
											"description": "A string to filter monitors by name."
										},
										{
											"key": "tags",
											"value": "host:host0",
											"description": "A comma separated list indicating what tags, if any, should be used to filter the list of monitors by scope.\nFor example, `host:host0`."
										},
										{
											"key": "monitor_tags",
											"value": "service:my-app",
											"description": "A comma separated list indicating what service and/or custom tags, if any, should be used to filter the list of monitors.\nTags created in the Datadog UI automatically have the service key prepended. For example, `service:my-app`."
										},
										{
											"key": "with_downtimes",
											"value": "true",
											"description": "If this argument is set to true, then the returned data includes all current active downtimes for each monitor."
										},
										{
											"key": "id_offset",
											"value": "-62147425",
											"description": "Use this parameter for paginating through large sets of monitors. Start with a value of zero, make a request, set the value to the last ID of result set, and then repeat until the response is empty."
										},
										{
											"key": "page",
											"value": "0",
											"description": "The page to start paginating from. If this argument is not specified, the request returns all monitors without pagination."
										},
										{
											"key": "page_size",
											"value": "20",
											"description": "The number of monitors to return per page. If the page argument is not specified, the default behavior returns all monitors without a `page_size` limit. However, if page is specified and `page_size` is not, the argument defaults to 100."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"You may need to add web hosts if this is consistently high.\",\n  \"name\": \"Bytes received on host0\",\n  \"options\": {\n    \"no_data_timeframe\": 20,\n    \"notify_no_data\": true\n  },\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"tags\": [\n    \"app:webserver\",\n    \"frontend\"\n  ],\n  \"type\": \"query alert\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor"
							]
						},
						"description": "Create a monitor using the specified options.\n\n#### Monitor Types\n\nThe type of monitor chosen from:\n\n- anomaly: `query alert`\n- APM: `query alert` or `trace-analytics alert`\n- composite: `composite`\n- custom: `service check`\n- event: `event alert`\n- forecast: `query alert`\n- host: `service check`\n- integration: `query alert` or `service check`\n- live process: `process alert`\n- logs: `log alert`\n- metric: `query alert`\n- network: `service check`\n- outlier: `query alert`\n- process: `service check`\n- rum: `rum alert`\n- SLO: `slo alert`\n- watchdog: `event alert`\n- event-v2: `event-v2 alert`\n- audit: `audit alert`\n- error-tracking: `error-tracking alert`\n- database-monitoring: `database-monitoring alert`\n\n**Note**: Synthetic monitors are created through the Synthetics API. See the [Synthetics API] (https://docs.datadoghq.com/api/latest/synthetics/) documentation for more information.\n\n#### Query Types\n\n##### Metric Alert Query\n\nExample: `time_aggr(time_window):space_aggr:metric{tags} [by {key}] operator #`\n\n- `time_aggr`: avg, sum, max, min, change, or pct_change\n- `time_window`: `last_#m` (with `#` between 1 and 10080 depending on the monitor type) or `last_#h`(with `#` between 1 and 168 depending on the monitor type) or `last_1d`, or `last_1w`\n- `space_aggr`: avg, sum, min, or max\n- `tags`: one or more tags (comma-separated), or *\n- `key`: a 'key' in key:value tag syntax; defines a separate alert for each tag in the group (multi-alert)\n- `operator`: <, <=, >, >=, ==, or !=\n- `#`: an integer or decimal number used to set the threshold\n\nIf you are using the `_change_` or `_pct_change_` time aggregator, instead use `change_aggr(time_aggr(time_window),\ntimeshift):space_aggr:metric{tags} [by {key}] operator #` with:\n\n- `change_aggr` change, pct_change\n- `time_aggr` avg, sum, max, min [Learn more](https://docs.datadoghq.com/monitors/create/types/#define-the-conditions)\n- `time_window` last\\_#m (between 1 and 2880 depending on the monitor type), last\\_#h (between 1 and 48 depending on the monitor type), or last_#d (1 or 2)\n- `timeshift` #m_ago (5, 10, 15, or 30), #h_ago (1, 2, or 4), or 1d_ago\n\nUse this to create an outlier monitor using the following query:\n`avg(last_30m):outliers(avg:system.cpu.user{role:es-events-data} by {host}, 'dbscan', 7) > 0`\n\n##### Service Check Query\n\nExample: `\"check\".over(tags).last(count).by(group).count_by_status()`\n\n- `check` name of the check, for example `datadog.agent.up`\n- `tags` one or more quoted tags (comma-separated), or \"*\". for example: `.over(\"env:prod\", \"role:db\")`; `over` cannot be blank.\n- `count` must be at greater than or equal to your max threshold (defined in the `options`). It is limited to 100.\nFor example, if you've specified to notify on 1 critical, 3 ok, and 2 warn statuses, `count` should be at least 3.\n- `group` must be specified for check monitors. Per-check grouping is already explicitly known for some service checks.\nFor example, Postgres integration monitors are tagged by `db`, `host`, and `port`, and Network monitors by `host`, `instance`, and `url`. See [Service Checks](https://docs.datadoghq.com/api/latest/service-checks/) documentation for more information.\n\n##### Event Alert Query\n\nExample: `events('sources:nagios status:error,warning priority:normal tags: \"string query\"').rollup(\"count\").last(\"1h\")\"`\n\n- `event`, the event query string:\n- `string_query` free text query to match against event title and text.\n- `sources` event sources (comma-separated).\n- `status` event statuses (comma-separated). Valid options: error, warn, and info.\n- `priority` event priorities (comma-separated). Valid options: low, normal, all.\n- `host` event reporting host (comma-separated).\n- `tags` event tags (comma-separated).\n- `excluded_tags` excluded event tags (comma-separated).\n- `rollup` the stats roll-up method. `count` is the only supported method now.\n- `last` the timeframe to roll up the counts. Examples: 45m, 4h. Supported timeframes: m, h and d. This value should not exceed 48 hours.\n\n**NOTE** The Event Alert Query is being deprecated and replaced by the Event V2 Alert Query. For more information, see the [Event Migration guide](https://docs.datadoghq.com/events/guides/migrating_to_new_events_features/).\n\n##### Event V2 Alert Query\n\nExample: `events(query).rollup(rollup_method[, measure]).last(time_window) operator #`\n\n- `query` The search query - following the [Log search syntax](https://docs.datadoghq.com/logs/search_syntax/).\n- `rollup_method` The stats roll-up method - supports `count`, `avg` and `cardinality`.\n- `measure` For `avg` and cardinality `rollup_method` - specify the measure or the facet name you want to use.\n- `time_window` #m (between 1 and 2880), #h (between 1 and 48).\n- `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.\n- `#` an integer or decimal number used to set the threshold.\n\n##### Process Alert Query\n\nExample: `processes(search).over(tags).rollup('count').last(timeframe) operator #`\n\n- `search` free text search string for querying processes.\nMatching processes match results on the [Live Processes](https://docs.datadoghq.com/infrastructure/process/?tab=linuxwindows) page.\n- `tags` one or more tags (comma-separated)\n- `timeframe` the timeframe to roll up the counts. Examples: 10m, 4h. Supported timeframes: s, m, h and d\n- `operator` <, <=, >, >=, ==, or !=\n- `#` an integer or decimal number used to set the threshold\n\n##### Logs Alert Query\n\nExample: `logs(query).index(index_name).rollup(rollup_method[, measure]).last(time_window) operator #`\n\n- `query` The search query - following the [Log search syntax](https://docs.datadoghq.com/logs/search_syntax/).\n- `index_name` For multi-index organizations, the log index in which the request is performed.\n- `rollup_method` The stats roll-up method - supports `count`, `avg` and `cardinality`.\n- `measure` For `avg` and cardinality `rollup_method` - specify the measure or the facet name you want to use.\n- `time_window` #m (between 1 and 2880), #h (between 1 and 48).\n- `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.\n- `#` an integer or decimal number used to set the threshold.\n\n##### Composite Query\n\nExample: `12345 && 67890`, where `12345` and `67890` are the IDs of non-composite monitors\n\n* `name` [*required*, *default* = **dynamic, based on query**]: The name of the alert.\n* `message` [*required*, *default* = **dynamic, based on query**]: A message to include with notifications for this monitor.\nEmail notifications can be sent to specific users by using the same '@username' notation as events.\n* `tags` [*optional*, *default* = **empty list**]: A list of tags to associate with your monitor.\nWhen getting all monitor details via the API, use the `monitor_tags` argument to filter results by these tags.\nIt is only available via the API and isn't visible or editable in the Datadog UI.\n\n##### SLO Alert Query\n\nExample: `error_budget(\"slo_id\").over(\"time_window\") operator #`\n\n- `slo_id`: The alphanumeric SLO ID of the SLO you are configuring the alert for.\n- `time_window`: The time window of the SLO target you wish to alert on. Valid options: `7d`, `30d`, `90d`.\n- `operator`: `>=` or `>`\n\n##### Audit Alert Query\n\nExample: `audits(query).rollup(rollup_method[, measure]).last(time_window) operator #`\n\n- `query` The search query - following the [Log search syntax](https://docs.datadoghq.com/logs/search_syntax/).\n- `rollup_method` The stats roll-up method - supports `count`, `avg` and `cardinality`.\n- `measure` For `avg` and cardinality `rollup_method` - specify the measure or the facet name you want to use.\n- `time_window` #m (between 1 and 2880), #h (between 1 and 48).\n- `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.\n- `#` an integer or decimal number used to set the threshold.\n\n**NOTE** Only available on US1-FED and in closed beta on US1, EU, AP1, US3, and US5.\n\n##### CI Pipelines Alert Query\n\nExample: `ci-pipelines(query).rollup(rollup_method[, measure]).last(time_window) operator #`\n\n- `query` The search query - following the [Log search syntax](https://docs.datadoghq.com/logs/search_syntax/).\n- `rollup_method` The stats roll-up method - supports `count`, `avg`, and `cardinality`.\n- `measure` For `avg` and cardinality `rollup_method` - specify the measure or the facet name you want to use.\n- `time_window` #m (between 1 and 2880), #h (between 1 and 48).\n- `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.\n- `#` an integer or decimal number used to set the threshold.\n\n**NOTE** CI Pipeline monitors are in alpha on US1, EU, AP1, US3, and US5.\n\n##### CI Tests Alert Query\n\nExample: `ci-tests(query).rollup(rollup_method[, measure]).last(time_window) operator #`\n\n- `query` The search query - following the [Log search syntax](https://docs.datadoghq.com/logs/search_syntax/).\n- `rollup_method` The stats roll-up method - supports `count`, `avg`, and `cardinality`.\n- `measure` For `avg` and cardinality `rollup_method` - specify the measure or the facet name you want to use.\n- `time_window` #m (between 1 and 2880), #h (between 1 and 48).\n- `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.\n- `#` an integer or decimal number used to set the threshold.\n\n**NOTE** CI Test monitors are available only in closed beta on US1, EU, AP1, US3, and US5.\n\n##### Error Tracking Alert Query\n\nExample(RUM): `error-tracking-rum(query).rollup(rollup_method[, measure]).last(time_window) operator #`\nExample(APM Traces): `error-tracking-traces(query).rollup(rollup_method[, measure]).last(time_window) operator #`\n\n- `query` The search query - following the [Log search syntax](https://docs.datadoghq.com/logs/search_syntax/).\n- `rollup_method` The stats roll-up method - supports `count`, `avg`, and `cardinality`.\n- `measure` For `avg` and cardinality `rollup_method` - specify the measure or the facet name you want to use.\n- `time_window` #m (between 1 and 2880), #h (between 1 and 48).\n- `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.\n- `#` an integer or decimal number used to set the threshold.\n\n**Database Monitoring Alert Query**\n\nExample: `database-monitoring(query).rollup(rollup_method[, measure]).last(time_window) operator #`\n\n- `query` The search query - following the [Log search syntax](https://docs.datadoghq.com/logs/search_syntax/).\n- `rollup_method` The stats roll-up method - supports `count`, `avg`, and `cardinality`.\n- `measure` For `avg` and cardinality `rollup_method` - specify the measure or the facet name you want to use.\n- `time_window` #m (between 1 and 2880), #h (between 1 and 48).\n- `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.\n- `#` an integer or decimal number used to set the threshold.\n\n**NOTE** Database Monitoring monitors are in alpha on US1."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message\": \"You may need to add web hosts if this is consistently high.\",\n  \"name\": \"Bytes received on host0\",\n  \"options\": {\n    \"no_data_timeframe\": 20,\n    \"notify_no_data\": true\n  },\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"tags\": [\n    \"app:webserver\",\n    \"frontend\"\n  ],\n  \"type\": \"query alert\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message\": \"You may need to add web hosts if this is consistently high.\",\n  \"name\": \"Bytes received on host0\",\n  \"options\": {\n    \"no_data_timeframe\": 20,\n    \"notify_no_data\": true\n  },\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"tags\": [\n    \"app:webserver\",\n    \"frontend\"\n  ],\n  \"type\": \"query alert\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message\": \"You may need to add web hosts if this is consistently high.\",\n  \"name\": \"Bytes received on host0\",\n  \"options\": {\n    \"no_data_timeframe\": 20,\n    \"notify_no_data\": true\n  },\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"tags\": [\n    \"app:webserver\",\n    \"frontend\"\n  ],\n  \"type\": \"query alert\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message\": \"You may need to add web hosts if this is consistently high.\",\n  \"name\": \"Bytes received on host0\",\n  \"options\": {\n    \"no_data_timeframe\": 20,\n    \"notify_no_data\": true\n  },\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"tags\": [\n    \"app:webserver\",\n    \"frontend\"\n  ],\n  \"type\": \"query alert\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Check if a monitor can be deleted",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/can_delete?monitor_ids=666486743,666486743",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"can_delete"
							],
							"query": [
								{
									"key": "monitor_ids",
									"value": "666486743,666486743",
									"description": "(Required) The IDs of the monitor to check."
								}
							]
						},
						"description": "Check if the given monitors can be deleted."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/can_delete?monitor_ids=666486743,666486743",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"can_delete"
									],
									"query": [
										{
											"key": "monitor_ids",
											"value": "666486743,666486743",
											"description": "(Required) The IDs of the monitor to check."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {},\n  \"errors\": {\n    \"aute_17\": [\n      \"aliquip amet L\",\n      \"dolore Lorem Excepteur\"\n    ],\n    \"do47\": [\n      \"aliquip consequat sed\",\n      \"elit aliquip\"\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/can_delete?monitor_ids=666486743,666486743",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"can_delete"
									],
									"query": [
										{
											"key": "monitor_ids",
											"value": "666486743,666486743",
											"description": "(Required) The IDs of the monitor to check."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/can_delete?monitor_ids=666486743,666486743",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"can_delete"
									],
									"query": [
										{
											"key": "monitor_ids",
											"value": "666486743,666486743",
											"description": "(Required) The IDs of the monitor to check."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Deletion conflict error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/can_delete?monitor_ids=666486743,666486743",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"can_delete"
									],
									"query": [
										{
											"key": "monitor_ids",
											"value": "666486743,666486743",
											"description": "(Required) The IDs of the monitor to check."
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {},\n  \"errors\": {\n    \"aute_17\": [\n      \"aliquip amet L\",\n      \"dolore Lorem Excepteur\"\n    ],\n    \"do47\": [\n      \"aliquip consequat sed\",\n      \"elit aliquip\"\n    ]\n  }\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/can_delete?monitor_ids=666486743,666486743",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"can_delete"
									],
									"query": [
										{
											"key": "monitor_ids",
											"value": "666486743,666486743",
											"description": "(Required) The IDs of the monitor to check."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Monitors group search",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/groups/search?query=tempor Ut sed velit&page=0&per_page=30&sort=tempor Ut sed velit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"groups",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "tempor Ut sed velit",
									"description": "After entering a search query in your [Manage Monitor page][1] use the query parameter value in the\nURL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2]\npage to learn more.\n\nThe query can contain any number of space-separated monitor attributes, for instance `query=\"type:metric status:alert\"`.\n\n[1]: https://app.datadoghq.com/monitors/manage\n[2]: /monitors/manage/#find-the-monitors"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page to start paginating from."
								},
								{
									"key": "per_page",
									"value": "30",
									"description": "Number of monitors to return per page."
								},
								{
									"key": "sort",
									"value": "tempor Ut sed velit",
									"description": "String for sort order, composed of field and sort order separate by a comma, for example `name,asc`. Supported sort directions: `asc`, `desc`. Supported fields:\n\n* `name`\n* `status`\n* `tags`"
								}
							]
						},
						"description": "Search and filter your monitor groups details."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/groups/search?query=tempor Ut sed velit&page=0&per_page=30&sort=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"groups",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "After entering a search query in your [Manage Monitor page][1] use the query parameter value in the\nURL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2]\npage to learn more.\n\nThe query can contain any number of space-separated monitor attributes, for instance `query=\"type:metric status:alert\"`.\n\n[1]: https://app.datadoghq.com/monitors/manage\n[2]: /monitors/manage/#find-the-monitors"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page to start paginating from."
										},
										{
											"key": "per_page",
											"value": "30",
											"description": "Number of monitors to return per page."
										},
										{
											"key": "sort",
											"value": "tempor Ut sed velit",
											"description": "String for sort order, composed of field and sort order separate by a comma, for example `name,asc`. Supported sort directions: `asc`, `desc`. Supported fields:\n\n* `name`\n* `status`\n* `tags`"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"counts\": {\n    \"status\": [\n      {\n        \"count\": 2,\n        \"name\": \"OK\"\n      }\n    ],\n    \"type\": [\n      {\n        \"count\": 2,\n        \"name\": \"metric\"\n      }\n    ]\n  },\n  \"groups\": [\n    {\n      \"group\": \"*\",\n      \"group_tags\": [\n        \"*\"\n      ],\n      \"last_nodata_ts\": 0,\n      \"last_triggered_ts\": 1525702966,\n      \"monitor_id\": 2738266,\n      \"monitor_name\": \"[demo] Cassandra disk usage is high on {{host.name}}\",\n      \"status\": \"OK\"\n    },\n    {\n      \"group\": \"*\",\n      \"group_tags\": [\n        \"*\"\n      ],\n      \"last_nodata_ts\": 0,\n      \"last_triggered_ts\": 1525703008,\n      \"monitor_id\": 1576648,\n      \"monitor_name\": \"[demo] Disk usage is high on {{host.name}}\",\n      \"status\": \"OK\"\n    }\n  ],\n  \"metadata\": {\n    \"page\": 0,\n    \"page_count\": 2,\n    \"per_page\": 30,\n    \"total_count\": 2\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/groups/search?query=tempor Ut sed velit&page=0&per_page=30&sort=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"groups",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "After entering a search query in your [Manage Monitor page][1] use the query parameter value in the\nURL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2]\npage to learn more.\n\nThe query can contain any number of space-separated monitor attributes, for instance `query=\"type:metric status:alert\"`.\n\n[1]: https://app.datadoghq.com/monitors/manage\n[2]: /monitors/manage/#find-the-monitors"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page to start paginating from."
										},
										{
											"key": "per_page",
											"value": "30",
											"description": "Number of monitors to return per page."
										},
										{
											"key": "sort",
											"value": "tempor Ut sed velit",
											"description": "String for sort order, composed of field and sort order separate by a comma, for example `name,asc`. Supported sort directions: `asc`, `desc`. Supported fields:\n\n* `name`\n* `status`\n* `tags`"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/groups/search?query=tempor Ut sed velit&page=0&per_page=30&sort=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"groups",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "After entering a search query in your [Manage Monitor page][1] use the query parameter value in the\nURL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2]\npage to learn more.\n\nThe query can contain any number of space-separated monitor attributes, for instance `query=\"type:metric status:alert\"`.\n\n[1]: https://app.datadoghq.com/monitors/manage\n[2]: /monitors/manage/#find-the-monitors"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page to start paginating from."
										},
										{
											"key": "per_page",
											"value": "30",
											"description": "Number of monitors to return per page."
										},
										{
											"key": "sort",
											"value": "tempor Ut sed velit",
											"description": "String for sort order, composed of field and sort order separate by a comma, for example `name,asc`. Supported sort directions: `asc`, `desc`. Supported fields:\n\n* `name`\n* `status`\n* `tags`"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/groups/search?query=tempor Ut sed velit&page=0&per_page=30&sort=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"groups",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "After entering a search query in your [Manage Monitor page][1] use the query parameter value in the\nURL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2]\npage to learn more.\n\nThe query can contain any number of space-separated monitor attributes, for instance `query=\"type:metric status:alert\"`.\n\n[1]: https://app.datadoghq.com/monitors/manage\n[2]: /monitors/manage/#find-the-monitors"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page to start paginating from."
										},
										{
											"key": "per_page",
											"value": "30",
											"description": "Number of monitors to return per page."
										},
										{
											"key": "sort",
											"value": "tempor Ut sed velit",
											"description": "String for sort order, composed of field and sort order separate by a comma, for example `name,asc`. Supported sort directions: `asc`, `desc`. Supported fields:\n\n* `name`\n* `status`\n* `tags`"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Monitors search",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/search?query=tempor Ut sed velit&page=0&per_page=30&sort=tempor Ut sed velit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "tempor Ut sed velit",
									"description": "After entering a search query in your [Manage Monitor page][1] use the query parameter value in the\nURL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2]\npage to learn more.\n\nThe query can contain any number of space-separated monitor attributes, for instance `query=\"type:metric status:alert\"`.\n\n[1]: https://app.datadoghq.com/monitors/manage\n[2]: /monitors/manage/#find-the-monitors"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page to start paginating from."
								},
								{
									"key": "per_page",
									"value": "30",
									"description": "Number of monitors to return per page."
								},
								{
									"key": "sort",
									"value": "tempor Ut sed velit",
									"description": "String for sort order, composed of field and sort order separate by a comma, for example `name,asc`. Supported sort directions: `asc`, `desc`. Supported fields:\n\n* `name`\n* `status`\n* `tags`"
								}
							]
						},
						"description": "Search and filter your monitors details."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/search?query=tempor Ut sed velit&page=0&per_page=30&sort=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "After entering a search query in your [Manage Monitor page][1] use the query parameter value in the\nURL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2]\npage to learn more.\n\nThe query can contain any number of space-separated monitor attributes, for instance `query=\"type:metric status:alert\"`.\n\n[1]: https://app.datadoghq.com/monitors/manage\n[2]: /monitors/manage/#find-the-monitors"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page to start paginating from."
										},
										{
											"key": "per_page",
											"value": "30",
											"description": "Number of monitors to return per page."
										},
										{
											"key": "sort",
											"value": "tempor Ut sed velit",
											"description": "String for sort order, composed of field and sort order separate by a comma, for example `name,asc`. Supported sort directions: `asc`, `desc`. Supported fields:\n\n* `name`\n* `status`\n* `tags`"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"counts\": {\n    \"muted\": [\n      {\n        \"count\": 3,\n        \"name\": false\n      },\n      {\n        \"count\": 3,\n        \"name\": true\n      }\n    ],\n    \"status\": [\n      {\n        \"count\": 4,\n        \"name\": \"No Data\"\n      },\n      {\n        \"count\": 2,\n        \"name\": \"OK\"\n      }\n    ],\n    \"tag\": [\n      {\n        \"count\": 6,\n        \"name\": \"service:cassandra\"\n      }\n    ],\n    \"type\": [\n      {\n        \"count\": 6,\n        \"name\": \"metric\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"page\": 0,\n    \"page_count\": 6,\n    \"per_page\": 30,\n    \"total_count\": 6\n  },\n  \"monitors\": [\n    {\n      \"classification\": \"metric\",\n      \"creator\": {\n        \"handle\": \"john@datadoghq.com\",\n        \"name\": \"John Doe\"\n      },\n      \"id\": 2699850,\n      \"last_triggered_ts\": null,\n      \"metrics\": [\n        \"system.cpu.user\"\n      ],\n      \"name\": \"Cassandra CPU is high on {{host.name}} in {{availability-zone.name}}\",\n      \"notifications\": [\n        {\n          \"handle\": \"jane@datadoghq.com\",\n          \"name\": \"Jane Doe\"\n        }\n      ],\n      \"org_id\": 1234,\n      \"scopes\": [\n        \"!availability-zone:us-east-1c\",\n        \"name:cassandra\"\n      ],\n      \"status\": \"No Data\",\n      \"tags\": [\n        \"service:cassandra\"\n      ],\n      \"type\": \"query alert\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/search?query=tempor Ut sed velit&page=0&per_page=30&sort=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "After entering a search query in your [Manage Monitor page][1] use the query parameter value in the\nURL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2]\npage to learn more.\n\nThe query can contain any number of space-separated monitor attributes, for instance `query=\"type:metric status:alert\"`.\n\n[1]: https://app.datadoghq.com/monitors/manage\n[2]: /monitors/manage/#find-the-monitors"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page to start paginating from."
										},
										{
											"key": "per_page",
											"value": "30",
											"description": "Number of monitors to return per page."
										},
										{
											"key": "sort",
											"value": "tempor Ut sed velit",
											"description": "String for sort order, composed of field and sort order separate by a comma, for example `name,asc`. Supported sort directions: `asc`, `desc`. Supported fields:\n\n* `name`\n* `status`\n* `tags`"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/search?query=tempor Ut sed velit&page=0&per_page=30&sort=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "After entering a search query in your [Manage Monitor page][1] use the query parameter value in the\nURL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2]\npage to learn more.\n\nThe query can contain any number of space-separated monitor attributes, for instance `query=\"type:metric status:alert\"`.\n\n[1]: https://app.datadoghq.com/monitors/manage\n[2]: /monitors/manage/#find-the-monitors"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page to start paginating from."
										},
										{
											"key": "per_page",
											"value": "30",
											"description": "Number of monitors to return per page."
										},
										{
											"key": "sort",
											"value": "tempor Ut sed velit",
											"description": "String for sort order, composed of field and sort order separate by a comma, for example `name,asc`. Supported sort directions: `asc`, `desc`. Supported fields:\n\n* `name`\n* `status`\n* `tags`"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/search?query=tempor Ut sed velit&page=0&per_page=30&sort=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "After entering a search query in your [Manage Monitor page][1] use the query parameter value in the\nURL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2]\npage to learn more.\n\nThe query can contain any number of space-separated monitor attributes, for instance `query=\"type:metric status:alert\"`.\n\n[1]: https://app.datadoghq.com/monitors/manage\n[2]: /monitors/manage/#find-the-monitors"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page to start paginating from."
										},
										{
											"key": "per_page",
											"value": "30",
											"description": "Number of monitors to return per page."
										},
										{
											"key": "sort",
											"value": "tempor Ut sed velit",
											"description": "String for sort order, composed of field and sort order separate by a comma, for example `name,asc`. Supported sort directions: `asc`, `desc`. Supported fields:\n\n* `name`\n* `status`\n* `tags`"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Validate a monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"validate"
							]
						},
						"description": "Validate the monitor provided in the request."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Invalid JSON",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"validate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"validate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"validate"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a monitor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?force=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":monitor_id"
							],
							"query": [
								{
									"key": "force",
									"value": "false",
									"description": "Delete the monitor even if it's referenced by other resources (for example SLO, composite monitor)."
								}
							],
							"variable": [
								{
									"key": "monitor_id",
									"value": "666486743"
								}
							]
						},
						"description": "Delete the specified monitor"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?force=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "force",
											"value": "false",
											"description": "Delete the monitor even if it's referenced by other resources (for example SLO, composite monitor)."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deleted_monitor_id\": 666486743\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?force=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "force",
											"value": "false",
											"description": "Delete the monitor even if it's referenced by other resources (for example SLO, composite monitor)."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?force=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "force",
											"value": "false",
											"description": "Delete the monitor even if it's referenced by other resources (for example SLO, composite monitor)."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?force=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "force",
											"value": "false",
											"description": "Delete the monitor even if it's referenced by other resources (for example SLO, composite monitor)."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item not found error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?force=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "force",
											"value": "false",
											"description": "Delete the monitor even if it's referenced by other resources (for example SLO, composite monitor)."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?force=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "force",
											"value": "false",
											"description": "Delete the monitor even if it's referenced by other resources (for example SLO, composite monitor)."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a monitor's details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?group_states=tempor Ut sed velit&with_downtimes=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":monitor_id"
							],
							"query": [
								{
									"key": "group_states",
									"value": "tempor Ut sed velit",
									"description": "When specified, shows additional information about the group states. Choose one or more from `all`, `alert`, `warn`, and `no data`."
								},
								{
									"key": "with_downtimes",
									"value": "true",
									"description": "If this argument is set to true, then the returned data includes all current active downtimes for the monitor."
								}
							],
							"variable": [
								{
									"key": "monitor_id",
									"value": "666486743"
								}
							]
						},
						"description": "Get details about the specified monitor from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?group_states=tempor Ut sed velit&with_downtimes=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "group_states",
											"value": "tempor Ut sed velit",
											"description": "When specified, shows additional information about the group states. Choose one or more from `all`, `alert`, `warn`, and `no data`."
										},
										{
											"key": "with_downtimes",
											"value": "true",
											"description": "If this argument is set to true, then the returned data includes all current active downtimes for the monitor."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?group_states=tempor Ut sed velit&with_downtimes=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "group_states",
											"value": "tempor Ut sed velit",
											"description": "When specified, shows additional information about the group states. Choose one or more from `all`, `alert`, `warn`, and `no data`."
										},
										{
											"key": "with_downtimes",
											"value": "true",
											"description": "If this argument is set to true, then the returned data includes all current active downtimes for the monitor."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?group_states=tempor Ut sed velit&with_downtimes=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "group_states",
											"value": "tempor Ut sed velit",
											"description": "When specified, shows additional information about the group states. Choose one or more from `all`, `alert`, `warn`, and `no data`."
										},
										{
											"key": "with_downtimes",
											"value": "true",
											"description": "If this argument is set to true, then the returned data includes all current active downtimes for the monitor."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Monitor Not Found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?group_states=tempor Ut sed velit&with_downtimes=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "group_states",
											"value": "tempor Ut sed velit",
											"description": "When specified, shows additional information about the group states. Choose one or more from `all`, `alert`, `warn`, and `no data`."
										},
										{
											"key": "with_downtimes",
											"value": "true",
											"description": "If this argument is set to true, then the returned data includes all current active downtimes for the monitor."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?group_states=tempor Ut sed velit&with_downtimes=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "group_states",
											"value": "tempor Ut sed velit",
											"description": "When specified, shows additional information about the group states. Choose one or more from `all`, `alert`, `warn`, and `no data`."
										},
										{
											"key": "with_downtimes",
											"value": "true",
											"description": "If this argument is set to true, then the returned data includes all current active downtimes for the monitor."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Edit a monitor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"created\": \"1995-10-24T11:39:54.640Z\",\n  \"creator\": {\n    \"email\": \"sed\",\n    \"handle\": \"adipisicing anim sint minim dolore\",\n    \"name\": \"minim elit occaecat nostrud\"\n  },\n  \"deleted\": \"1969-11-27T08:37:46.215Z\",\n  \"id\": -77120144,\n  \"message\": \"aliquip do\",\n  \"modified\": \"1951-11-24T19:51:05.602Z\",\n  \"multi\": false,\n  \"name\": \"velit inc\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": true,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -93352509,\n    \"group_retention_duration\": \"laborum ad\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -7869863,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -54805954,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"ut nostrud quis cillum\",\n      \"do ipsum qui laboris Excepteur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"show_no_data\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 32437273,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"alert\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"dolor_b8\": -69746901\n    },\n    \"synthetics_check_id\": \"mollit reprehenderit\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"dolor minim fugiat laborum\",\n      \"trigger_window\": \"aliquip sunt\"\n    },\n    \"thresholds\": {\n      \"critical\": -10490029.23686637,\n      \"critical_recovery\": 56661083.45686585,\n      \"ok\": 16997793.211359277,\n      \"unknown\": -77926855.79462364,\n      \"warning\": 40847640.55172646,\n      \"warning_recovery\": 18480354.352015167\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"velit in esse voluptate\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"laborum sit\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"ex ipsum quis\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"magna\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Unknown\",\n  \"priority\": 4,\n  \"query\": \"elit Ut minim fugiat Lorem\",\n  \"restricted_roles\": [\n    \"adipisicing dolore\",\n    \"sit aliqua\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"sed2b\": {\n        \"last_nodata_ts\": -23994338,\n        \"last_notified_ts\": 87335929,\n        \"last_resolved_ts\": 93058048,\n        \"last_triggered_ts\": 19106535,\n        \"name\": \"labore Excepteur et ex\",\n        \"status\": \"OK\"\n      }\n    }\n  },\n  \"tags\": [\n    \"deserunt sit Excepteur tempor\",\n    \"esse\"\n  ],\n  \"type\": \"query alert\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":monitor_id"
							],
							"variable": [
								{
									"key": "monitor_id",
									"value": "666486743"
								}
							]
						},
						"description": "Edit the specified monitor."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"created\": \"1995-10-24T11:39:54.640Z\",\n  \"creator\": {\n    \"email\": \"sed\",\n    \"handle\": \"adipisicing anim sint minim dolore\",\n    \"name\": \"minim elit occaecat nostrud\"\n  },\n  \"deleted\": \"1969-11-27T08:37:46.215Z\",\n  \"id\": -77120144,\n  \"message\": \"aliquip do\",\n  \"modified\": \"1951-11-24T19:51:05.602Z\",\n  \"multi\": false,\n  \"name\": \"velit inc\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": true,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -93352509,\n    \"group_retention_duration\": \"laborum ad\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -7869863,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -54805954,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"ut nostrud quis cillum\",\n      \"do ipsum qui laboris Excepteur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"show_no_data\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 32437273,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"alert\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"dolor_b8\": -69746901\n    },\n    \"synthetics_check_id\": \"mollit reprehenderit\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"dolor minim fugiat laborum\",\n      \"trigger_window\": \"aliquip sunt\"\n    },\n    \"thresholds\": {\n      \"critical\": -10490029.23686637,\n      \"critical_recovery\": 56661083.45686585,\n      \"ok\": 16997793.211359277,\n      \"unknown\": -77926855.79462364,\n      \"warning\": 40847640.55172646,\n      \"warning_recovery\": 18480354.352015167\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"velit in esse voluptate\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"laborum sit\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"ex ipsum quis\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"magna\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Unknown\",\n  \"priority\": 4,\n  \"query\": \"elit Ut minim fugiat Lorem\",\n  \"restricted_roles\": [\n    \"adipisicing dolore\",\n    \"sit aliqua\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"sed2b\": {\n        \"last_nodata_ts\": -23994338,\n        \"last_notified_ts\": 87335929,\n        \"last_resolved_ts\": 93058048,\n        \"last_triggered_ts\": 19106535,\n        \"name\": \"labore Excepteur et ex\",\n        \"status\": \"OK\"\n      }\n    }\n  },\n  \"tags\": [\n    \"deserunt sit Excepteur tempor\",\n    \"esse\"\n  ],\n  \"type\": \"query alert\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"created\": \"1995-10-24T11:39:54.640Z\",\n  \"creator\": {\n    \"email\": \"sed\",\n    \"handle\": \"adipisicing anim sint minim dolore\",\n    \"name\": \"minim elit occaecat nostrud\"\n  },\n  \"deleted\": \"1969-11-27T08:37:46.215Z\",\n  \"id\": -77120144,\n  \"message\": \"aliquip do\",\n  \"modified\": \"1951-11-24T19:51:05.602Z\",\n  \"multi\": false,\n  \"name\": \"velit inc\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": true,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -93352509,\n    \"group_retention_duration\": \"laborum ad\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -7869863,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -54805954,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"ut nostrud quis cillum\",\n      \"do ipsum qui laboris Excepteur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"show_no_data\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 32437273,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"alert\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"dolor_b8\": -69746901\n    },\n    \"synthetics_check_id\": \"mollit reprehenderit\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"dolor minim fugiat laborum\",\n      \"trigger_window\": \"aliquip sunt\"\n    },\n    \"thresholds\": {\n      \"critical\": -10490029.23686637,\n      \"critical_recovery\": 56661083.45686585,\n      \"ok\": 16997793.211359277,\n      \"unknown\": -77926855.79462364,\n      \"warning\": 40847640.55172646,\n      \"warning_recovery\": 18480354.352015167\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"velit in esse voluptate\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"laborum sit\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"ex ipsum quis\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"magna\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Unknown\",\n  \"priority\": 4,\n  \"query\": \"elit Ut minim fugiat Lorem\",\n  \"restricted_roles\": [\n    \"adipisicing dolore\",\n    \"sit aliqua\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"sed2b\": {\n        \"last_nodata_ts\": -23994338,\n        \"last_notified_ts\": 87335929,\n        \"last_resolved_ts\": 93058048,\n        \"last_triggered_ts\": 19106535,\n        \"name\": \"labore Excepteur et ex\",\n        \"status\": \"OK\"\n      }\n    }\n  },\n  \"tags\": [\n    \"deserunt sit Excepteur tempor\",\n    \"esse\"\n  ],\n  \"type\": \"query alert\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"created\": \"1995-10-24T11:39:54.640Z\",\n  \"creator\": {\n    \"email\": \"sed\",\n    \"handle\": \"adipisicing anim sint minim dolore\",\n    \"name\": \"minim elit occaecat nostrud\"\n  },\n  \"deleted\": \"1969-11-27T08:37:46.215Z\",\n  \"id\": -77120144,\n  \"message\": \"aliquip do\",\n  \"modified\": \"1951-11-24T19:51:05.602Z\",\n  \"multi\": false,\n  \"name\": \"velit inc\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": true,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -93352509,\n    \"group_retention_duration\": \"laborum ad\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -7869863,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -54805954,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"ut nostrud quis cillum\",\n      \"do ipsum qui laboris Excepteur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"show_no_data\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 32437273,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"alert\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"dolor_b8\": -69746901\n    },\n    \"synthetics_check_id\": \"mollit reprehenderit\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"dolor minim fugiat laborum\",\n      \"trigger_window\": \"aliquip sunt\"\n    },\n    \"thresholds\": {\n      \"critical\": -10490029.23686637,\n      \"critical_recovery\": 56661083.45686585,\n      \"ok\": 16997793.211359277,\n      \"unknown\": -77926855.79462364,\n      \"warning\": 40847640.55172646,\n      \"warning_recovery\": 18480354.352015167\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"velit in esse voluptate\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"laborum sit\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"ex ipsum quis\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"magna\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Unknown\",\n  \"priority\": 4,\n  \"query\": \"elit Ut minim fugiat Lorem\",\n  \"restricted_roles\": [\n    \"adipisicing dolore\",\n    \"sit aliqua\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"sed2b\": {\n        \"last_nodata_ts\": -23994338,\n        \"last_notified_ts\": 87335929,\n        \"last_resolved_ts\": 93058048,\n        \"last_triggered_ts\": 19106535,\n        \"name\": \"labore Excepteur et ex\",\n        \"status\": \"OK\"\n      }\n    }\n  },\n  \"tags\": [\n    \"deserunt sit Excepteur tempor\",\n    \"esse\"\n  ],\n  \"type\": \"query alert\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"created\": \"1995-10-24T11:39:54.640Z\",\n  \"creator\": {\n    \"email\": \"sed\",\n    \"handle\": \"adipisicing anim sint minim dolore\",\n    \"name\": \"minim elit occaecat nostrud\"\n  },\n  \"deleted\": \"1969-11-27T08:37:46.215Z\",\n  \"id\": -77120144,\n  \"message\": \"aliquip do\",\n  \"modified\": \"1951-11-24T19:51:05.602Z\",\n  \"multi\": false,\n  \"name\": \"velit inc\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": true,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -93352509,\n    \"group_retention_duration\": \"laborum ad\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -7869863,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -54805954,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"ut nostrud quis cillum\",\n      \"do ipsum qui laboris Excepteur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"show_no_data\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 32437273,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"alert\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"dolor_b8\": -69746901\n    },\n    \"synthetics_check_id\": \"mollit reprehenderit\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"dolor minim fugiat laborum\",\n      \"trigger_window\": \"aliquip sunt\"\n    },\n    \"thresholds\": {\n      \"critical\": -10490029.23686637,\n      \"critical_recovery\": 56661083.45686585,\n      \"ok\": 16997793.211359277,\n      \"unknown\": -77926855.79462364,\n      \"warning\": 40847640.55172646,\n      \"warning_recovery\": 18480354.352015167\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"velit in esse voluptate\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"laborum sit\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"ex ipsum quis\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"magna\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Unknown\",\n  \"priority\": 4,\n  \"query\": \"elit Ut minim fugiat Lorem\",\n  \"restricted_roles\": [\n    \"adipisicing dolore\",\n    \"sit aliqua\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"sed2b\": {\n        \"last_nodata_ts\": -23994338,\n        \"last_notified_ts\": 87335929,\n        \"last_resolved_ts\": 93058048,\n        \"last_triggered_ts\": 19106535,\n        \"name\": \"labore Excepteur et ex\",\n        \"status\": \"OK\"\n      }\n    }\n  },\n  \"tags\": [\n    \"deserunt sit Excepteur tempor\",\n    \"esse\"\n  ],\n  \"type\": \"query alert\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Monitor Not Found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"created\": \"1995-10-24T11:39:54.640Z\",\n  \"creator\": {\n    \"email\": \"sed\",\n    \"handle\": \"adipisicing anim sint minim dolore\",\n    \"name\": \"minim elit occaecat nostrud\"\n  },\n  \"deleted\": \"1969-11-27T08:37:46.215Z\",\n  \"id\": -77120144,\n  \"message\": \"aliquip do\",\n  \"modified\": \"1951-11-24T19:51:05.602Z\",\n  \"multi\": false,\n  \"name\": \"velit inc\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": true,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -93352509,\n    \"group_retention_duration\": \"laborum ad\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -7869863,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -54805954,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"ut nostrud quis cillum\",\n      \"do ipsum qui laboris Excepteur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"show_no_data\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 32437273,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"alert\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"dolor_b8\": -69746901\n    },\n    \"synthetics_check_id\": \"mollit reprehenderit\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"dolor minim fugiat laborum\",\n      \"trigger_window\": \"aliquip sunt\"\n    },\n    \"thresholds\": {\n      \"critical\": -10490029.23686637,\n      \"critical_recovery\": 56661083.45686585,\n      \"ok\": 16997793.211359277,\n      \"unknown\": -77926855.79462364,\n      \"warning\": 40847640.55172646,\n      \"warning_recovery\": 18480354.352015167\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"velit in esse voluptate\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"laborum sit\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"ex ipsum quis\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"magna\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Unknown\",\n  \"priority\": 4,\n  \"query\": \"elit Ut minim fugiat Lorem\",\n  \"restricted_roles\": [\n    \"adipisicing dolore\",\n    \"sit aliqua\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"sed2b\": {\n        \"last_nodata_ts\": -23994338,\n        \"last_notified_ts\": 87335929,\n        \"last_resolved_ts\": 93058048,\n        \"last_triggered_ts\": 19106535,\n        \"name\": \"labore Excepteur et ex\",\n        \"status\": \"OK\"\n      }\n    }\n  },\n  \"tags\": [\n    \"deserunt sit Excepteur tempor\",\n    \"esse\"\n  ],\n  \"type\": \"query alert\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"created\": \"1995-10-24T11:39:54.640Z\",\n  \"creator\": {\n    \"email\": \"sed\",\n    \"handle\": \"adipisicing anim sint minim dolore\",\n    \"name\": \"minim elit occaecat nostrud\"\n  },\n  \"deleted\": \"1969-11-27T08:37:46.215Z\",\n  \"id\": -77120144,\n  \"message\": \"aliquip do\",\n  \"modified\": \"1951-11-24T19:51:05.602Z\",\n  \"multi\": false,\n  \"name\": \"velit inc\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": true,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -93352509,\n    \"group_retention_duration\": \"laborum ad\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -7869863,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -54805954,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"ut nostrud quis cillum\",\n      \"do ipsum qui laboris Excepteur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"show_no_data\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 32437273,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"alert\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"dolor_b8\": -69746901\n    },\n    \"synthetics_check_id\": \"mollit reprehenderit\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"dolor minim fugiat laborum\",\n      \"trigger_window\": \"aliquip sunt\"\n    },\n    \"thresholds\": {\n      \"critical\": -10490029.23686637,\n      \"critical_recovery\": 56661083.45686585,\n      \"ok\": 16997793.211359277,\n      \"unknown\": -77926855.79462364,\n      \"warning\": 40847640.55172646,\n      \"warning_recovery\": 18480354.352015167\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"velit in esse voluptate\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"laborum sit\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"ex ipsum quis\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"magna\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Unknown\",\n  \"priority\": 4,\n  \"query\": \"elit Ut minim fugiat Lorem\",\n  \"restricted_roles\": [\n    \"adipisicing dolore\",\n    \"sit aliqua\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"sed2b\": {\n        \"last_nodata_ts\": -23994338,\n        \"last_notified_ts\": 87335929,\n        \"last_resolved_ts\": 93058048,\n        \"last_triggered_ts\": 19106535,\n        \"name\": \"labore Excepteur et ex\",\n        \"status\": \"OK\"\n      }\n    }\n  },\n  \"tags\": [\n    \"deserunt sit Excepteur tempor\",\n    \"esse\"\n  ],\n  \"type\": \"query alert\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Mute a monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/mute?scope=role:db&end=-62147425",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":monitor_id",
								"mute"
							],
							"query": [
								{
									"key": "scope",
									"value": "role:db",
									"description": "The scope to apply the mute to.\nFor example, if your alert is grouped by `{host}`, you might mute `host:app1`."
								},
								{
									"key": "end",
									"value": "-62147425",
									"description": "A POSIX timestamp for when the mute should end."
								}
							],
							"variable": [
								{
									"key": "monitor_id",
									"value": "-62147425"
								}
							]
						},
						"description": "Mute the specified monitor."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/mute?scope=role:db&end=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"mute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db",
											"description": "The scope to apply the mute to.\nFor example, if your alert is grouped by `{host}`, you might mute `host:app1`."
										},
										{
											"key": "end",
											"value": "-62147425",
											"description": "A POSIX timestamp for when the mute should end."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/mute?scope=role:db&end=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"mute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db",
											"description": "The scope to apply the mute to.\nFor example, if your alert is grouped by `{host}`, you might mute `host:app1`."
										},
										{
											"key": "end",
											"value": "-62147425",
											"description": "A POSIX timestamp for when the mute should end."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/mute?scope=role:db&end=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"mute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db",
											"description": "The scope to apply the mute to.\nFor example, if your alert is grouped by `{host}`, you might mute `host:app1`."
										},
										{
											"key": "end",
											"value": "-62147425",
											"description": "A POSIX timestamp for when the mute should end."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Monitor Not Found error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/mute?scope=role:db&end=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"mute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db",
											"description": "The scope to apply the mute to.\nFor example, if your alert is grouped by `{host}`, you might mute `host:app1`."
										},
										{
											"key": "end",
											"value": "-62147425",
											"description": "A POSIX timestamp for when the mute should end."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/mute?scope=role:db&end=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"mute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db",
											"description": "The scope to apply the mute to.\nFor example, if your alert is grouped by `{host}`, you might mute `host:app1`."
										},
										{
											"key": "end",
											"value": "-62147425",
											"description": "A POSIX timestamp for when the mute should end."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Unmute a monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/unmute?scope=role:db&all_scopes=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":monitor_id",
								"unmute"
							],
							"query": [
								{
									"key": "scope",
									"value": "role:db",
									"description": "The scope to apply the mute to.\nFor example, if your alert is grouped by `{host}`, you might mute `host:app1`."
								},
								{
									"key": "all_scopes",
									"value": "false",
									"description": "Clear muting across all scopes. Default is `false`."
								}
							],
							"variable": [
								{
									"key": "monitor_id",
									"value": "-62147425"
								}
							]
						},
						"description": "Unmute the specified monitor."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/unmute?scope=role:db&all_scopes=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"unmute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db",
											"description": "The scope to apply the mute to.\nFor example, if your alert is grouped by `{host}`, you might mute `host:app1`."
										},
										{
											"key": "all_scopes",
											"value": "false",
											"description": "Clear muting across all scopes. Default is `false`."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/unmute?scope=role:db&all_scopes=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"unmute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db",
											"description": "The scope to apply the mute to.\nFor example, if your alert is grouped by `{host}`, you might mute `host:app1`."
										},
										{
											"key": "all_scopes",
											"value": "false",
											"description": "Clear muting across all scopes. Default is `false`."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/unmute?scope=role:db&all_scopes=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"unmute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db",
											"description": "The scope to apply the mute to.\nFor example, if your alert is grouped by `{host}`, you might mute `host:app1`."
										},
										{
											"key": "all_scopes",
											"value": "false",
											"description": "Clear muting across all scopes. Default is `false`."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Monitor Not Found error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/unmute?scope=role:db&all_scopes=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"unmute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db",
											"description": "The scope to apply the mute to.\nFor example, if your alert is grouped by `{host}`, you might mute `host:app1`."
										},
										{
											"key": "all_scopes",
											"value": "false",
											"description": "Clear muting across all scopes. Default is `false`."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/unmute?scope=role:db&all_scopes=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"unmute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db",
											"description": "The scope to apply the mute to.\nFor example, if your alert is grouped by `{host}`, you might mute `host:app1`."
										},
										{
											"key": "all_scopes",
											"value": "false",
											"description": "Clear muting across all scopes. Default is `false`."
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Validate an existing monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":monitor_id",
								"validate"
							],
							"variable": [
								{
									"key": "monitor_id",
									"value": "666486743"
								}
							]
						},
						"description": "Validate the monitor provided in the request."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"validate"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Invalid JSON",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"validate"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"validate"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"query alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1989-12-01T14:28:43.831Z\",\n  \"creator\": {\n    \"email\": \"officia sunt\",\n    \"handle\": \"pariatur\",\n    \"name\": \"aute do\"\n  },\n  \"deleted\": \"2020-10-30T20:46:24.520Z\",\n  \"id\": -50675854,\n  \"matching_downtimes\": [\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    },\n    {\n      \"id\": 1625,\n      \"end\": 1412792983,\n      \"scope\": [\n        \"env:staging\"\n      ],\n      \"start\": 1412792983\n    }\n  ],\n  \"message\": \"ullamco incididunt cupidatat\",\n  \"modified\": \"1981-03-27T05:04:03.098Z\",\n  \"multi\": false,\n  \"name\": \"My monitor\",\n  \"options\": {\n    \"aggregation\": {\n      \"group_by\": \"host\",\n      \"metric\": \"metrics.name\",\n      \"type\": \"count\"\n    },\n    \"device_ids\": [\n      \"mobile_small\",\n      \"chrome.tablet\"\n    ],\n    \"enable_logs_sample\": false,\n    \"enable_samples\": false,\n    \"escalation_message\": \"none\",\n    \"evaluation_delay\": -52819274,\n    \"group_retention_duration\": \"dolor Lorem qui\",\n    \"groupby_simple_monitor\": false,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"new_group_delay\": -94315945,\n    \"new_host_delay\": 300,\n    \"no_data_timeframe\": -86360342,\n    \"notification_preset_name\": \"show_all\",\n    \"notify_audit\": false,\n    \"notify_by\": [\n      \"labore dolore\",\n      \"deserunt commodo consectetur\"\n    ],\n    \"notify_no_data\": false,\n    \"on_missing_data\": \"resolve\",\n    \"renotify_interval\": null,\n    \"renotify_occurrences\": 56355858,\n    \"renotify_statuses\": [\n      \"warn\",\n      \"no data\"\n    ],\n    \"require_full_window\": false,\n    \"scheduling_options\": {\n      \"evaluation_window\": {\n        \"day_starts\": \"04:00\",\n        \"hour_starts\": 0,\n        \"month_starts\": 1\n      }\n    },\n    \"silenced\": {\n      \"non_6f_\": 77287100\n    },\n    \"synthetics_check_id\": \"culpa in laborum irure\",\n    \"threshold_windows\": {\n      \"recovery_window\": \"culpa cupidatat Lorem ut\",\n      \"trigger_window\": \"fugiat officia mollit esse quis\"\n    },\n    \"thresholds\": {\n      \"critical\": -44507487.0891542,\n      \"critical_recovery\": 94365870.17342958,\n      \"ok\": 26645340.31156695,\n      \"unknown\": -32772943.396166816,\n      \"warning\": 75330874.10211122,\n      \"warning_recovery\": 30665996.226613894\n    },\n    \"timeout_h\": null,\n    \"variables\": [\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"minim tempor i\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"Ut fugiat officia\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      },\n      {\n        \"data_source\": \"rum\",\n        \"compute\": {\n          \"aggregation\": \"avg\",\n          \"interval\": 60000,\n          \"metric\": \"@duration\"\n        },\n        \"name\": \"query_errors\",\n        \"group_by\": [\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"do velit\",\n              \"order\": \"desc\"\n            }\n          },\n          {\n            \"facet\": \"status\",\n            \"limit\": 10,\n            \"sort\": {\n              \"aggregation\": \"avg\",\n              \"metric\": \"amet proident anim in\",\n              \"order\": \"desc\"\n            }\n          }\n        ],\n        \"indexes\": [\n          \"days-3\",\n          \"days-7\"\n        ],\n        \"search\": {\n          \"query\": \"service:query\"\n        }\n      }\n    ]\n  },\n  \"overall_state\": \"Warn\",\n  \"priority\": 1,\n  \"restricted_roles\": [\n    \"enim qui cillum est\",\n    \"quis ut\"\n  ],\n  \"state\": {\n    \"groups\": {\n      \"Lorem_1\": {\n        \"last_nodata_ts\": -12653992,\n        \"last_notified_ts\": -66141067,\n        \"last_resolved_ts\": 5643925,\n        \"last_triggered_ts\": -6121593,\n        \"name\": \"dolore nulla i\",\n        \"status\": \"OK\"\n      },\n      \"nisi_c43\": {\n        \"last_nodata_ts\": -66061060,\n        \"last_notified_ts\": -86988012,\n        \"last_resolved_ts\": -39919633,\n        \"last_triggered_ts\": 13467862,\n        \"name\": \"Ut fugiat eiusmod anim\",\n        \"status\": \"Ignored\"\n      },\n      \"minim_c\": {\n        \"last_nodata_ts\": 6509669,\n        \"last_notified_ts\": 39348490,\n        \"last_resolved_ts\": 13221088,\n        \"last_triggered_ts\": 21889420,\n        \"name\": \"in velit Duis\",\n        \"status\": \"Alert\"\n      }\n    }\n  },\n  \"tags\": [\n    \"ex tempor\",\n    \"enim veniam dolore\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"validate"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all monitor configuration policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/monitor/policy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"monitor",
								"policy"
							]
						},
						"description": "Get all monitor configuration policies."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"policy\": {\n          \"tag_key\": \"<string>\",\n          \"tag_key_required\": \"<boolean>\",\n          \"valid_tag_values\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"policy_type\": \"tag\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"monitor-config-policy\"\n    },\n    {\n      \"attributes\": {\n        \"policy\": {\n          \"tag_key\": \"<string>\",\n          \"tag_key_required\": \"<boolean>\",\n          \"valid_tag_values\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"policy_type\": \"tag\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"monitor-config-policy\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a monitor configuration policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"monitor-config-policy\",\n    \"attributes\": {\n      \"policy_type\": \"tag\",\n      \"policy\": {\n        \"tag_key\": \"<string>\",\n        \"tag_key_required\": \"<boolean>\",\n        \"valid_tag_values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/monitor/policy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"monitor",
								"policy"
							]
						},
						"description": "Create a monitor configuration policy."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"monitor-config-policy\",\n    \"attributes\": {\n      \"policy_type\": \"tag\",\n      \"policy\": {\n        \"tag_key\": \"<string>\",\n        \"tag_key_required\": \"<boolean>\",\n        \"valid_tag_values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"policy\": {\n        \"tag_key\": \"<string>\",\n        \"tag_key_required\": \"<boolean>\",\n        \"valid_tag_values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"policy_type\": \"tag\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"monitor-config-policy\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"monitor-config-policy\",\n    \"attributes\": {\n      \"policy_type\": \"tag\",\n      \"policy\": {\n        \"tag_key\": \"<string>\",\n        \"tag_key_required\": \"<boolean>\",\n        \"valid_tag_values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"monitor-config-policy\",\n    \"attributes\": {\n      \"policy_type\": \"tag\",\n      \"policy\": {\n        \"tag_key\": \"<string>\",\n        \"tag_key_required\": \"<boolean>\",\n        \"valid_tag_values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"monitor-config-policy\",\n    \"attributes\": {\n      \"policy_type\": \"tag\",\n      \"policy\": {\n        \"tag_key\": \"<string>\",\n        \"tag_key_required\": \"<boolean>\",\n        \"valid_tag_values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a monitor configuration policy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"monitor",
								"policy",
								":policy_id"
							],
							"variable": [
								{
									"key": "policy_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a monitor configuration policy."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy",
										":policy_id"
									],
									"variable": [
										{
											"key": "policy_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy",
										":policy_id"
									],
									"variable": [
										{
											"key": "policy_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy",
										":policy_id"
									],
									"variable": [
										{
											"key": "policy_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy",
										":policy_id"
									],
									"variable": [
										{
											"key": "policy_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy",
										":policy_id"
									],
									"variable": [
										{
											"key": "policy_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a monitor configuration policy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"monitor",
								"policy",
								":policy_id"
							],
							"variable": [
								{
									"key": "policy_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a monitor configuration policy by `policy_id`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy",
										":policy_id"
									],
									"variable": [
										{
											"key": "policy_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"policy\": {\n        \"tag_key\": \"<string>\",\n        \"tag_key_required\": \"<boolean>\",\n        \"valid_tag_values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"policy_type\": \"tag\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"monitor-config-policy\"\n  }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy",
										":policy_id"
									],
									"variable": [
										{
											"key": "policy_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy",
										":policy_id"
									],
									"variable": [
										{
											"key": "policy_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy",
										":policy_id"
									],
									"variable": [
										{
											"key": "policy_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Edit a monitor configuration policy",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"monitor-config-policy\",\n    \"attributes\": {\n      \"policy_type\": \"tag\",\n      \"policy\": {\n        \"tag_key\": \"<string>\",\n        \"tag_key_required\": \"<boolean>\",\n        \"valid_tag_values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"monitor",
								"policy",
								":policy_id"
							],
							"variable": [
								{
									"key": "policy_id",
									"value": "<string>"
								}
							]
						},
						"description": "Edit a monitor configuration policy."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"monitor-config-policy\",\n    \"attributes\": {\n      \"policy_type\": \"tag\",\n      \"policy\": {\n        \"tag_key\": \"<string>\",\n        \"tag_key_required\": \"<boolean>\",\n        \"valid_tag_values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy",
										":policy_id"
									],
									"variable": [
										{
											"key": "policy_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"policy\": {\n        \"tag_key\": \"<string>\",\n        \"tag_key_required\": \"<boolean>\",\n        \"valid_tag_values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"policy_type\": \"tag\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"monitor-config-policy\"\n  }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"monitor-config-policy\",\n    \"attributes\": {\n      \"policy_type\": \"tag\",\n      \"policy\": {\n        \"tag_key\": \"<string>\",\n        \"tag_key_required\": \"<boolean>\",\n        \"valid_tag_values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy",
										":policy_id"
									],
									"variable": [
										{
											"key": "policy_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"monitor-config-policy\",\n    \"attributes\": {\n      \"policy_type\": \"tag\",\n      \"policy\": {\n        \"tag_key\": \"<string>\",\n        \"tag_key_required\": \"<boolean>\",\n        \"valid_tag_values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy",
										":policy_id"
									],
									"variable": [
										{
											"key": "policy_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"monitor-config-policy\",\n    \"attributes\": {\n      \"policy_type\": \"tag\",\n      \"policy\": {\n        \"tag_key\": \"<string>\",\n        \"tag_key_required\": \"<boolean>\",\n        \"valid_tag_values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy",
										":policy_id"
									],
									"variable": [
										{
											"key": "policy_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"monitor-config-policy\",\n    \"attributes\": {\n      \"policy_type\": \"tag\",\n      \"policy\": {\n        \"tag_key\": \"<string>\",\n        \"tag_key_required\": \"<boolean>\",\n        \"valid_tag_values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/monitor/policy/:policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"monitor",
										"policy",
										":policy_id"
									],
									"variable": [
										{
											"key": "policy_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "[Monitors](https://docs.datadoghq.com/monitors) allow you to watch a metric or check that you care about and\nnotifies your team when a defined threshold has exceeded.\n\nFor more information, see [Creating Monitors](https://docs.datadoghq.com/monitors/create/types/)."
		},
		{
			"name": "Notebooks",
			"item": [
				{
					"name": "Get all notebooks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/notebooks?author_handle=test@datadoghq.com&exclude_author_handle=test@datadoghq.com&start=0&count=5&sort_field=modified&sort_dir=desc&query=postmortem&include_cells=false&is_template=false&type=investigation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"notebooks"
							],
							"query": [
								{
									"key": "author_handle",
									"value": "test@datadoghq.com",
									"description": "Return notebooks created by the given `author_handle`."
								},
								{
									"key": "exclude_author_handle",
									"value": "test@datadoghq.com",
									"description": "Return notebooks not created by the given `author_handle`."
								},
								{
									"key": "start",
									"value": "0",
									"description": "The index of the first notebook you want returned."
								},
								{
									"key": "count",
									"value": "5",
									"description": "The number of notebooks to be returned."
								},
								{
									"key": "sort_field",
									"value": "modified",
									"description": "Sort by field `modified`, `name`, or `created`."
								},
								{
									"key": "sort_dir",
									"value": "desc",
									"description": "Sort by direction `asc` or `desc`."
								},
								{
									"key": "query",
									"value": "postmortem",
									"description": "Return only notebooks with `query` string in notebook name or author handle."
								},
								{
									"key": "include_cells",
									"value": "false",
									"description": "Value of `false` excludes the `cells` and global `time` for each notebook."
								},
								{
									"key": "is_template",
									"value": "false",
									"description": "True value returns only template notebooks. Default is false (returns only non-template notebooks)."
								},
								{
									"key": "type",
									"value": "investigation",
									"description": "If type is provided, returns only notebooks with that metadata type. Default does not have type filtering."
								}
							]
						},
						"description": "Get all notebooks. This can also be used to search for notebooks with a particular `query` in the notebook\n`name` or author `handle`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks?author_handle=test@datadoghq.com&exclude_author_handle=test@datadoghq.com&start=0&count=5&sort_field=modified&sort_dir=desc&query=postmortem&include_cells=false&is_template=false&type=investigation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks"
									],
									"query": [
										{
											"key": "author_handle",
											"value": "test@datadoghq.com",
											"description": "Return notebooks created by the given `author_handle`."
										},
										{
											"key": "exclude_author_handle",
											"value": "test@datadoghq.com",
											"description": "Return notebooks not created by the given `author_handle`."
										},
										{
											"key": "start",
											"value": "0",
											"description": "The index of the first notebook you want returned."
										},
										{
											"key": "count",
											"value": "5",
											"description": "The number of notebooks to be returned."
										},
										{
											"key": "sort_field",
											"value": "modified",
											"description": "Sort by field `modified`, `name`, or `created`."
										},
										{
											"key": "sort_dir",
											"value": "desc",
											"description": "Sort by direction `asc` or `desc`."
										},
										{
											"key": "query",
											"value": "postmortem",
											"description": "Return only notebooks with `query` string in notebook name or author handle."
										},
										{
											"key": "include_cells",
											"value": "false",
											"description": "Value of `false` excludes the `cells` and global `time` for each notebook."
										},
										{
											"key": "is_template",
											"value": "false",
											"description": "True value returns only template notebooks. Default is false (returns only non-template notebooks)."
										},
										{
											"key": "type",
											"value": "investigation",
											"description": "If type is provided, returns only notebooks with that metadata type. Default does not have type filtering."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": 123456,\n      \"type\": \"notebooks\",\n      \"attributes\": {\n        \"name\": \"Example Notebook\",\n        \"author\": {\n          \"created_at\": \"1981-07-01T19:18:52.706Z\",\n          \"disabled\": true,\n          \"email\": \"enim fugiat\",\n          \"handle\": \"in\",\n          \"icon\": \"ut laborum\",\n          \"name\": \"ex sunt dolore eiusmod\",\n          \"status\": \"in nisi non velit adipisicing\",\n          \"title\": \"veniam dolor\",\n          \"verified\": false\n        },\n        \"cells\": [\n          {\n            \"id\": \"abcd1234\",\n            \"type\": \"notebook_cells\",\n            \"attributes\": {\n              \"definition\": {\n                \"type\": \"markdown\",\n                \"text\": \"# Example Header \\nexample content\"\n              }\n            }\n          },\n          {\n            \"id\": \"abcd1234\",\n            \"type\": \"notebook_cells\",\n            \"attributes\": {\n              \"definition\": {\n                \"type\": \"markdown\",\n                \"text\": \"# Example Header \\nexample content\"\n              }\n            }\n          }\n        ],\n        \"created\": \"2021-02-24T23:14:15.173964+00:00\",\n        \"metadata\": {\n          \"is_template\": false,\n          \"take_snapshots\": false,\n          \"type\": \"investigation\"\n        },\n        \"modified\": \"2021-02-24T23:15:23.274966+00:00\",\n        \"status\": \"published\",\n        \"time\": {\n          \"live_span\": \"1h\"\n        }\n      }\n    },\n    {\n      \"id\": 123456,\n      \"type\": \"notebooks\",\n      \"attributes\": {\n        \"name\": \"Example Notebook\",\n        \"author\": {\n          \"created_at\": \"1984-05-01T21:20:20.424Z\",\n          \"disabled\": true,\n          \"email\": \"cillum\",\n          \"handle\": \"et in Excepteur sunt aute\",\n          \"icon\": \"minim dolore sint eu deserunt\",\n          \"name\": \"ex reprehenderit labore\",\n          \"status\": \"dolor consectetur\",\n          \"title\": \"ex ut dolore\",\n          \"verified\": true\n        },\n        \"cells\": [\n          {\n            \"id\": \"abcd1234\",\n            \"type\": \"notebook_cells\",\n            \"attributes\": {\n              \"definition\": {\n                \"type\": \"markdown\",\n                \"text\": \"# Example Header \\nexample content\"\n              }\n            }\n          },\n          {\n            \"id\": \"abcd1234\",\n            \"type\": \"notebook_cells\",\n            \"attributes\": {\n              \"definition\": {\n                \"type\": \"markdown\",\n                \"text\": \"# Example Header \\nexample content\"\n              }\n            }\n          }\n        ],\n        \"created\": \"2021-02-24T23:14:15.173964+00:00\",\n        \"metadata\": {\n          \"is_template\": false,\n          \"take_snapshots\": false,\n          \"type\": \"investigation\"\n        },\n        \"modified\": \"2021-02-24T23:15:23.274966+00:00\",\n        \"status\": \"published\",\n        \"time\": {\n          \"live_span\": \"1h\"\n        }\n      }\n    }\n  ],\n  \"meta\": {\n    \"page\": {\n      \"total_count\": 83637833,\n      \"total_filtered_count\": 34015219\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks?author_handle=test@datadoghq.com&exclude_author_handle=test@datadoghq.com&start=0&count=5&sort_field=modified&sort_dir=desc&query=postmortem&include_cells=false&is_template=false&type=investigation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks"
									],
									"query": [
										{
											"key": "author_handle",
											"value": "test@datadoghq.com",
											"description": "Return notebooks created by the given `author_handle`."
										},
										{
											"key": "exclude_author_handle",
											"value": "test@datadoghq.com",
											"description": "Return notebooks not created by the given `author_handle`."
										},
										{
											"key": "start",
											"value": "0",
											"description": "The index of the first notebook you want returned."
										},
										{
											"key": "count",
											"value": "5",
											"description": "The number of notebooks to be returned."
										},
										{
											"key": "sort_field",
											"value": "modified",
											"description": "Sort by field `modified`, `name`, or `created`."
										},
										{
											"key": "sort_dir",
											"value": "desc",
											"description": "Sort by direction `asc` or `desc`."
										},
										{
											"key": "query",
											"value": "postmortem",
											"description": "Return only notebooks with `query` string in notebook name or author handle."
										},
										{
											"key": "include_cells",
											"value": "false",
											"description": "Value of `false` excludes the `cells` and global `time` for each notebook."
										},
										{
											"key": "is_template",
											"value": "false",
											"description": "True value returns only template notebooks. Default is false (returns only non-template notebooks)."
										},
										{
											"key": "type",
											"value": "investigation",
											"description": "If type is provided, returns only notebooks with that metadata type. Default does not have type filtering."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks?author_handle=test@datadoghq.com&exclude_author_handle=test@datadoghq.com&start=0&count=5&sort_field=modified&sort_dir=desc&query=postmortem&include_cells=false&is_template=false&type=investigation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks"
									],
									"query": [
										{
											"key": "author_handle",
											"value": "test@datadoghq.com",
											"description": "Return notebooks created by the given `author_handle`."
										},
										{
											"key": "exclude_author_handle",
											"value": "test@datadoghq.com",
											"description": "Return notebooks not created by the given `author_handle`."
										},
										{
											"key": "start",
											"value": "0",
											"description": "The index of the first notebook you want returned."
										},
										{
											"key": "count",
											"value": "5",
											"description": "The number of notebooks to be returned."
										},
										{
											"key": "sort_field",
											"value": "modified",
											"description": "Sort by field `modified`, `name`, or `created`."
										},
										{
											"key": "sort_dir",
											"value": "desc",
											"description": "Sort by direction `asc` or `desc`."
										},
										{
											"key": "query",
											"value": "postmortem",
											"description": "Return only notebooks with `query` string in notebook name or author handle."
										},
										{
											"key": "include_cells",
											"value": "false",
											"description": "Value of `false` excludes the `cells` and global `time` for each notebook."
										},
										{
											"key": "is_template",
											"value": "false",
											"description": "True value returns only template notebooks. Default is false (returns only non-template notebooks)."
										},
										{
											"key": "type",
											"value": "investigation",
											"description": "If type is provided, returns only notebooks with that metadata type. Default does not have type filtering."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks?author_handle=test@datadoghq.com&exclude_author_handle=test@datadoghq.com&start=0&count=5&sort_field=modified&sort_dir=desc&query=postmortem&include_cells=false&is_template=false&type=investigation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks"
									],
									"query": [
										{
											"key": "author_handle",
											"value": "test@datadoghq.com",
											"description": "Return notebooks created by the given `author_handle`."
										},
										{
											"key": "exclude_author_handle",
											"value": "test@datadoghq.com",
											"description": "Return notebooks not created by the given `author_handle`."
										},
										{
											"key": "start",
											"value": "0",
											"description": "The index of the first notebook you want returned."
										},
										{
											"key": "count",
											"value": "5",
											"description": "The number of notebooks to be returned."
										},
										{
											"key": "sort_field",
											"value": "modified",
											"description": "Sort by field `modified`, `name`, or `created`."
										},
										{
											"key": "sort_dir",
											"value": "desc",
											"description": "Sort by direction `asc` or `desc`."
										},
										{
											"key": "query",
											"value": "postmortem",
											"description": "Return only notebooks with `query` string in notebook name or author handle."
										},
										{
											"key": "include_cells",
											"value": "false",
											"description": "Value of `false` excludes the `cells` and global `time` for each notebook."
										},
										{
											"key": "is_template",
											"value": "false",
											"description": "True value returns only template notebooks. Default is false (returns only non-template notebooks)."
										},
										{
											"key": "type",
											"value": "investigation",
											"description": "If type is provided, returns only notebooks with that metadata type. Default does not have type filtering."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a notebook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"text\": \"## Some test markdown\\n\\nWith some example content.\",\n              \"type\": \"markdown\"\n            }\n          },\n          \"type\": \"notebook_cells\"\n        },\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"requests\": [\n                {\n                  \"display_type\": \"line\",\n                  \"q\": \"avg:system.load.1{*}\",\n                  \"style\": {\n                    \"line_type\": \"solid\",\n                    \"line_width\": \"normal\",\n                    \"palette\": \"dog_classic\"\n                  }\n                }\n              ],\n              \"show_legend\": true,\n              \"type\": \"timeseries\",\n              \"yaxis\": {\n                \"scale\": \"linear\"\n              }\n            },\n            \"graph_size\": \"m\",\n            \"split_by\": {\n              \"keys\": [],\n              \"tags\": []\n            },\n            \"time\": null\n          },\n          \"type\": \"notebook_cells\"\n        }\n      ],\n      \"name\": \"Example Notebook\",\n      \"time\": {\n        \"live_span\": \"1h\"\n      }\n    },\n    \"type\": \"notebooks\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/notebooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"notebooks"
							]
						},
						"description": "Create a notebook using the specified options."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"text\": \"## Some test markdown\\n\\nWith some example content.\",\n              \"type\": \"markdown\"\n            }\n          },\n          \"type\": \"notebook_cells\"\n        },\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"requests\": [\n                {\n                  \"display_type\": \"line\",\n                  \"q\": \"avg:system.load.1{*}\",\n                  \"style\": {\n                    \"line_type\": \"solid\",\n                    \"line_width\": \"normal\",\n                    \"palette\": \"dog_classic\"\n                  }\n                }\n              ],\n              \"show_legend\": true,\n              \"type\": \"timeseries\",\n              \"yaxis\": {\n                \"scale\": \"linear\"\n              }\n            },\n            \"graph_size\": \"m\",\n            \"split_by\": {\n              \"keys\": [],\n              \"tags\": []\n            },\n            \"time\": null\n          },\n          \"type\": \"notebook_cells\"\n        }\n      ],\n      \"name\": \"Example Notebook\",\n      \"time\": {\n        \"live_span\": \"1h\"\n      }\n    },\n    \"type\": \"notebooks\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": 123456,\n    \"type\": \"notebooks\",\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"id\": \"abcd1234\",\n          \"type\": \"notebook_cells\",\n          \"attributes\": {\n            \"definition\": {\n              \"type\": \"markdown\",\n              \"text\": \"# Example Header \\nexample content\"\n            }\n          }\n        },\n        {\n          \"id\": \"abcd1234\",\n          \"type\": \"notebook_cells\",\n          \"attributes\": {\n            \"definition\": {\n              \"type\": \"markdown\",\n              \"text\": \"# Example Header \\nexample content\"\n            }\n          }\n        }\n      ],\n      \"time\": {\n        \"live_span\": \"1h\"\n      },\n      \"name\": \"Example Notebook\",\n      \"author\": {\n        \"created_at\": \"1944-02-06T04:58:13.667Z\",\n        \"disabled\": false,\n        \"email\": \"tempor exercitation\",\n        \"handle\": \"est eu aliquip officia\",\n        \"icon\": \"nostrud n\",\n        \"name\": \"dolor dolor\",\n        \"status\": \"anim Ut pariatur\",\n        \"title\": \"eu\",\n        \"verified\": true\n      },\n      \"created\": \"2021-02-24T23:14:15.173964+00:00\",\n      \"metadata\": {\n        \"is_template\": false,\n        \"take_snapshots\": false,\n        \"type\": \"investigation\"\n      },\n      \"modified\": \"2021-02-24T23:15:23.274966+00:00\",\n      \"status\": \"published\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"text\": \"## Some test markdown\\n\\nWith some example content.\",\n              \"type\": \"markdown\"\n            }\n          },\n          \"type\": \"notebook_cells\"\n        },\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"requests\": [\n                {\n                  \"display_type\": \"line\",\n                  \"q\": \"avg:system.load.1{*}\",\n                  \"style\": {\n                    \"line_type\": \"solid\",\n                    \"line_width\": \"normal\",\n                    \"palette\": \"dog_classic\"\n                  }\n                }\n              ],\n              \"show_legend\": true,\n              \"type\": \"timeseries\",\n              \"yaxis\": {\n                \"scale\": \"linear\"\n              }\n            },\n            \"graph_size\": \"m\",\n            \"split_by\": {\n              \"keys\": [],\n              \"tags\": []\n            },\n            \"time\": null\n          },\n          \"type\": \"notebook_cells\"\n        }\n      ],\n      \"name\": \"Example Notebook\",\n      \"time\": {\n        \"live_span\": \"1h\"\n      }\n    },\n    \"type\": \"notebooks\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"text\": \"## Some test markdown\\n\\nWith some example content.\",\n              \"type\": \"markdown\"\n            }\n          },\n          \"type\": \"notebook_cells\"\n        },\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"requests\": [\n                {\n                  \"display_type\": \"line\",\n                  \"q\": \"avg:system.load.1{*}\",\n                  \"style\": {\n                    \"line_type\": \"solid\",\n                    \"line_width\": \"normal\",\n                    \"palette\": \"dog_classic\"\n                  }\n                }\n              ],\n              \"show_legend\": true,\n              \"type\": \"timeseries\",\n              \"yaxis\": {\n                \"scale\": \"linear\"\n              }\n            },\n            \"graph_size\": \"m\",\n            \"split_by\": {\n              \"keys\": [],\n              \"tags\": []\n            },\n            \"time\": null\n          },\n          \"type\": \"notebook_cells\"\n        }\n      ],\n      \"name\": \"Example Notebook\",\n      \"time\": {\n        \"live_span\": \"1h\"\n      }\n    },\n    \"type\": \"notebooks\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"text\": \"## Some test markdown\\n\\nWith some example content.\",\n              \"type\": \"markdown\"\n            }\n          },\n          \"type\": \"notebook_cells\"\n        },\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"requests\": [\n                {\n                  \"display_type\": \"line\",\n                  \"q\": \"avg:system.load.1{*}\",\n                  \"style\": {\n                    \"line_type\": \"solid\",\n                    \"line_width\": \"normal\",\n                    \"palette\": \"dog_classic\"\n                  }\n                }\n              ],\n              \"show_legend\": true,\n              \"type\": \"timeseries\",\n              \"yaxis\": {\n                \"scale\": \"linear\"\n              }\n            },\n            \"graph_size\": \"m\",\n            \"split_by\": {\n              \"keys\": [],\n              \"tags\": []\n            },\n            \"time\": null\n          },\n          \"type\": \"notebook_cells\"\n        }\n      ],\n      \"name\": \"Example Notebook\",\n      \"time\": {\n        \"live_span\": \"1h\"\n      }\n    },\n    \"type\": \"notebooks\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a notebook",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"notebooks",
								":notebook_id"
							],
							"variable": [
								{
									"key": "notebook_id",
									"value": "-62147425"
								}
							]
						},
						"description": "Delete a notebook using the specified ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a notebook",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"notebooks",
								":notebook_id"
							],
							"variable": [
								{
									"key": "notebook_id",
									"value": "-62147425"
								}
							]
						},
						"description": "Get a notebook using the specified notebook ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": 123456,\n    \"type\": \"notebooks\",\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"id\": \"abcd1234\",\n          \"type\": \"notebook_cells\",\n          \"attributes\": {\n            \"definition\": {\n              \"type\": \"markdown\",\n              \"text\": \"# Example Header \\nexample content\"\n            }\n          }\n        },\n        {\n          \"id\": \"abcd1234\",\n          \"type\": \"notebook_cells\",\n          \"attributes\": {\n            \"definition\": {\n              \"type\": \"markdown\",\n              \"text\": \"# Example Header \\nexample content\"\n            }\n          }\n        }\n      ],\n      \"time\": {\n        \"live_span\": \"1h\"\n      },\n      \"name\": \"Example Notebook\",\n      \"author\": {\n        \"created_at\": \"1944-02-06T04:58:13.667Z\",\n        \"disabled\": false,\n        \"email\": \"tempor exercitation\",\n        \"handle\": \"est eu aliquip officia\",\n        \"icon\": \"nostrud n\",\n        \"name\": \"dolor dolor\",\n        \"status\": \"anim Ut pariatur\",\n        \"title\": \"eu\",\n        \"verified\": true\n      },\n      \"created\": \"2021-02-24T23:14:15.173964+00:00\",\n      \"metadata\": {\n        \"is_template\": false,\n        \"take_snapshots\": false,\n        \"type\": \"investigation\"\n      },\n      \"modified\": \"2021-02-24T23:15:23.274966+00:00\",\n      \"status\": \"published\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a notebook",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"text\": \"## Some updated test markdown\\n\\nWith some example content.\",\n              \"type\": \"markdown\"\n            }\n          },\n          \"type\": \"notebook_cells\"\n        },\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"requests\": [\n                {\n                  \"display_type\": \"bars\",\n                  \"q\": \"avg:system.load.1{*}\",\n                  \"style\": {\n                    \"line_type\": \"solid\",\n                    \"line_width\": \"normal\",\n                    \"palette\": \"warm\"\n                  }\n                }\n              ],\n              \"show_legend\": true,\n              \"type\": \"timeseries\",\n              \"yaxis\": {\n                \"scale\": \"linear\"\n              }\n            },\n            \"graph_size\": \"m\",\n            \"split_by\": {\n              \"keys\": [],\n              \"tags\": []\n            },\n            \"time\": null\n          },\n          \"id\": \"abcd1234\",\n          \"type\": \"notebook_cells\"\n        }\n      ],\n      \"name\": \"Example Notebook\",\n      \"time\": {\n        \"live_span\": \"1h\"\n      }\n    },\n    \"type\": \"notebooks\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"notebooks",
								":notebook_id"
							],
							"variable": [
								{
									"key": "notebook_id",
									"value": "-62147425"
								}
							]
						},
						"description": "Update a notebook using the specified ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"text\": \"## Some updated test markdown\\n\\nWith some example content.\",\n              \"type\": \"markdown\"\n            }\n          },\n          \"type\": \"notebook_cells\"\n        },\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"requests\": [\n                {\n                  \"display_type\": \"bars\",\n                  \"q\": \"avg:system.load.1{*}\",\n                  \"style\": {\n                    \"line_type\": \"solid\",\n                    \"line_width\": \"normal\",\n                    \"palette\": \"warm\"\n                  }\n                }\n              ],\n              \"show_legend\": true,\n              \"type\": \"timeseries\",\n              \"yaxis\": {\n                \"scale\": \"linear\"\n              }\n            },\n            \"graph_size\": \"m\",\n            \"split_by\": {\n              \"keys\": [],\n              \"tags\": []\n            },\n            \"time\": null\n          },\n          \"id\": \"abcd1234\",\n          \"type\": \"notebook_cells\"\n        }\n      ],\n      \"name\": \"Example Notebook\",\n      \"time\": {\n        \"live_span\": \"1h\"\n      }\n    },\n    \"type\": \"notebooks\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": 123456,\n    \"type\": \"notebooks\",\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"id\": \"abcd1234\",\n          \"type\": \"notebook_cells\",\n          \"attributes\": {\n            \"definition\": {\n              \"type\": \"markdown\",\n              \"text\": \"# Example Header \\nexample content\"\n            }\n          }\n        },\n        {\n          \"id\": \"abcd1234\",\n          \"type\": \"notebook_cells\",\n          \"attributes\": {\n            \"definition\": {\n              \"type\": \"markdown\",\n              \"text\": \"# Example Header \\nexample content\"\n            }\n          }\n        }\n      ],\n      \"time\": {\n        \"live_span\": \"1h\"\n      },\n      \"name\": \"Example Notebook\",\n      \"author\": {\n        \"created_at\": \"1944-02-06T04:58:13.667Z\",\n        \"disabled\": false,\n        \"email\": \"tempor exercitation\",\n        \"handle\": \"est eu aliquip officia\",\n        \"icon\": \"nostrud n\",\n        \"name\": \"dolor dolor\",\n        \"status\": \"anim Ut pariatur\",\n        \"title\": \"eu\",\n        \"verified\": true\n      },\n      \"created\": \"2021-02-24T23:14:15.173964+00:00\",\n      \"metadata\": {\n        \"is_template\": false,\n        \"take_snapshots\": false,\n        \"type\": \"investigation\"\n      },\n      \"modified\": \"2021-02-24T23:15:23.274966+00:00\",\n      \"status\": \"published\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"text\": \"## Some updated test markdown\\n\\nWith some example content.\",\n              \"type\": \"markdown\"\n            }\n          },\n          \"type\": \"notebook_cells\"\n        },\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"requests\": [\n                {\n                  \"display_type\": \"bars\",\n                  \"q\": \"avg:system.load.1{*}\",\n                  \"style\": {\n                    \"line_type\": \"solid\",\n                    \"line_width\": \"normal\",\n                    \"palette\": \"warm\"\n                  }\n                }\n              ],\n              \"show_legend\": true,\n              \"type\": \"timeseries\",\n              \"yaxis\": {\n                \"scale\": \"linear\"\n              }\n            },\n            \"graph_size\": \"m\",\n            \"split_by\": {\n              \"keys\": [],\n              \"tags\": []\n            },\n            \"time\": null\n          },\n          \"id\": \"abcd1234\",\n          \"type\": \"notebook_cells\"\n        }\n      ],\n      \"name\": \"Example Notebook\",\n      \"time\": {\n        \"live_span\": \"1h\"\n      }\n    },\n    \"type\": \"notebooks\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"text\": \"## Some updated test markdown\\n\\nWith some example content.\",\n              \"type\": \"markdown\"\n            }\n          },\n          \"type\": \"notebook_cells\"\n        },\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"requests\": [\n                {\n                  \"display_type\": \"bars\",\n                  \"q\": \"avg:system.load.1{*}\",\n                  \"style\": {\n                    \"line_type\": \"solid\",\n                    \"line_width\": \"normal\",\n                    \"palette\": \"warm\"\n                  }\n                }\n              ],\n              \"show_legend\": true,\n              \"type\": \"timeseries\",\n              \"yaxis\": {\n                \"scale\": \"linear\"\n              }\n            },\n            \"graph_size\": \"m\",\n            \"split_by\": {\n              \"keys\": [],\n              \"tags\": []\n            },\n            \"time\": null\n          },\n          \"id\": \"abcd1234\",\n          \"type\": \"notebook_cells\"\n        }\n      ],\n      \"name\": \"Example Notebook\",\n      \"time\": {\n        \"live_span\": \"1h\"\n      }\n    },\n    \"type\": \"notebooks\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"text\": \"## Some updated test markdown\\n\\nWith some example content.\",\n              \"type\": \"markdown\"\n            }\n          },\n          \"type\": \"notebook_cells\"\n        },\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"requests\": [\n                {\n                  \"display_type\": \"bars\",\n                  \"q\": \"avg:system.load.1{*}\",\n                  \"style\": {\n                    \"line_type\": \"solid\",\n                    \"line_width\": \"normal\",\n                    \"palette\": \"warm\"\n                  }\n                }\n              ],\n              \"show_legend\": true,\n              \"type\": \"timeseries\",\n              \"yaxis\": {\n                \"scale\": \"linear\"\n              }\n            },\n            \"graph_size\": \"m\",\n            \"split_by\": {\n              \"keys\": [],\n              \"tags\": []\n            },\n            \"time\": null\n          },\n          \"id\": \"abcd1234\",\n          \"type\": \"notebook_cells\"\n        }\n      ],\n      \"name\": \"Example Notebook\",\n      \"time\": {\n        \"live_span\": \"1h\"\n      }\n    },\n    \"type\": \"notebooks\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"text\": \"## Some updated test markdown\\n\\nWith some example content.\",\n              \"type\": \"markdown\"\n            }\n          },\n          \"type\": \"notebook_cells\"\n        },\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"requests\": [\n                {\n                  \"display_type\": \"bars\",\n                  \"q\": \"avg:system.load.1{*}\",\n                  \"style\": {\n                    \"line_type\": \"solid\",\n                    \"line_width\": \"normal\",\n                    \"palette\": \"warm\"\n                  }\n                }\n              ],\n              \"show_legend\": true,\n              \"type\": \"timeseries\",\n              \"yaxis\": {\n                \"scale\": \"linear\"\n              }\n            },\n            \"graph_size\": \"m\",\n            \"split_by\": {\n              \"keys\": [],\n              \"tags\": []\n            },\n            \"time\": null\n          },\n          \"id\": \"abcd1234\",\n          \"type\": \"notebook_cells\"\n        }\n      ],\n      \"name\": \"Example Notebook\",\n      \"time\": {\n        \"live_span\": \"1h\"\n      }\n    },\n    \"type\": \"notebooks\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"cells\": [\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"text\": \"## Some updated test markdown\\n\\nWith some example content.\",\n              \"type\": \"markdown\"\n            }\n          },\n          \"type\": \"notebook_cells\"\n        },\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"requests\": [\n                {\n                  \"display_type\": \"bars\",\n                  \"q\": \"avg:system.load.1{*}\",\n                  \"style\": {\n                    \"line_type\": \"solid\",\n                    \"line_width\": \"normal\",\n                    \"palette\": \"warm\"\n                  }\n                }\n              ],\n              \"show_legend\": true,\n              \"type\": \"timeseries\",\n              \"yaxis\": {\n                \"scale\": \"linear\"\n              }\n            },\n            \"graph_size\": \"m\",\n            \"split_by\": {\n              \"keys\": [],\n              \"tags\": []\n            },\n            \"time\": null\n          },\n          \"id\": \"abcd1234\",\n          \"type\": \"notebook_cells\"\n        }\n      ],\n      \"name\": \"Example Notebook\",\n      \"time\": {\n        \"live_span\": \"1h\"\n      }\n    },\n    \"type\": \"notebooks\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Interact with your notebooks through the API to make it easier to organize, find, and\nshare all of your notebooks with your team and organization. For more information, see the\n[Notebooks documentation](https://docs.datadoghq.com/notebooks/)."
		},
		{
			"name": "Opsgenie Integration",
			"item": [
				{
					"name": "Get all service objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integration",
								"opsgenie",
								"services"
							]
						},
						"description": "Get a list of all services from the Datadog Opsgenie integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"opsgenie-service\",\n      \"attributes\": {\n        \"custom_url\": \"<string>\",\n        \"name\": \"<string>\",\n        \"region\": \"custom\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"opsgenie-service\",\n      \"attributes\": {\n        \"custom_url\": \"<string>\",\n        \"name\": \"<string>\",\n        \"region\": \"us\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a new service object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"opsgenie_api_key\": \"<string>\",\n      \"region\": \"us\",\n      \"custom_url\": \"<string>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integration",
								"opsgenie",
								"services"
							]
						},
						"description": "Create a new service object in the Opsgenie integration."
					},
					"response": [
						{
							"name": "CREATED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"opsgenie_api_key\": \"<string>\",\n      \"region\": \"us\",\n      \"custom_url\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"custom_url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"region\": \"eu\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"opsgenie_api_key\": \"<string>\",\n      \"region\": \"us\",\n      \"custom_url\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"opsgenie_api_key\": \"<string>\",\n      \"region\": \"us\",\n      \"custom_url\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"opsgenie_api_key\": \"<string>\",\n      \"region\": \"us\",\n      \"custom_url\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"opsgenie_api_key\": \"<string>\",\n      \"region\": \"us\",\n      \"custom_url\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a single service object",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integration",
								"opsgenie",
								"services",
								":integration_service_id"
							],
							"variable": [
								{
									"key": "integration_service_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a single service object in the Datadog Opsgenie integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a single service object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integration",
								"opsgenie",
								"services",
								":integration_service_id"
							],
							"variable": [
								{
									"key": "integration_service_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a single service from the Datadog Opsgenie integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"custom_url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"region\": \"eu\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a single service object",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"custom_url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"opsgenie_api_key\": \"<string>\",\n      \"region\": \"eu\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"integration",
								"opsgenie",
								"services",
								":integration_service_id"
							],
							"variable": [
								{
									"key": "integration_service_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a single service object in the Datadog Opsgenie integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"custom_url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"opsgenie_api_key\": \"<string>\",\n      \"region\": \"eu\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"custom_url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"region\": \"eu\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"custom_url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"opsgenie_api_key\": \"<string>\",\n      \"region\": \"eu\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"custom_url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"opsgenie_api_key\": \"<string>\",\n      \"region\": \"eu\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"custom_url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"opsgenie_api_key\": \"<string>\",\n      \"region\": \"eu\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"custom_url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"opsgenie_api_key\": \"<string>\",\n      \"region\": \"eu\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"opsgenie-service\",\n    \"attributes\": {\n      \"custom_url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"opsgenie_api_key\": \"<string>\",\n      \"region\": \"eu\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration/opsgenie/services/:integration_service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration",
										"opsgenie",
										"services",
										":integration_service_id"
									],
									"variable": [
										{
											"key": "integration_service_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Configure your [Datadog Opsgenie integration](https://docs.datadoghq.com/integrations/opsgenie/)\ndirectly through the Datadog API."
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "List your managed organizations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/org",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"org"
							]
						},
						"description": "This endpoint returns data on your top-level organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"orgs\": [\n    {\n      \"billing\": {\n        \"type\": \"parent_billing\"\n      },\n      \"created\": \"2019-09-26T17:28:28Z\",\n      \"description\": \"some description\",\n      \"name\": \"New child org\",\n      \"public_id\": \"abcdef12345\",\n      \"settings\": {\n        \"private_widget_share\": false,\n        \"saml\": {\n          \"enabled\": false\n        },\n        \"saml_autocreate_access_role\": \"ro\",\n        \"saml_autocreate_users_domains\": {\n          \"domains\": [\n            \"example.com\",\n            \"example.com\"\n          ],\n          \"enabled\": false\n        },\n        \"saml_can_be_enabled\": false,\n        \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n        \"saml_idp_initiated_login\": {\n          \"enabled\": false\n        },\n        \"saml_idp_metadata_uploaded\": false,\n        \"saml_login_url\": \"https://my.saml.login.url\",\n        \"saml_strict_mode\": {\n          \"enabled\": false\n        }\n      },\n      \"subscription\": {\n        \"type\": \"pro\"\n      },\n      \"trial\": false\n    },\n    {\n      \"billing\": {\n        \"type\": \"parent_billing\"\n      },\n      \"created\": \"2019-09-26T17:28:28Z\",\n      \"description\": \"some description\",\n      \"name\": \"New child org\",\n      \"public_id\": \"abcdef12345\",\n      \"settings\": {\n        \"private_widget_share\": false,\n        \"saml\": {\n          \"enabled\": false\n        },\n        \"saml_autocreate_access_role\": \"ro\",\n        \"saml_autocreate_users_domains\": {\n          \"domains\": [\n            \"example.com\",\n            \"example.com\"\n          ],\n          \"enabled\": false\n        },\n        \"saml_can_be_enabled\": false,\n        \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n        \"saml_idp_initiated_login\": {\n          \"enabled\": false\n        },\n        \"saml_idp_metadata_uploaded\": false,\n        \"saml_login_url\": \"https://my.saml.login.url\",\n        \"saml_strict_mode\": {\n          \"enabled\": false\n        }\n      },\n      \"subscription\": {\n        \"type\": \"pro\"\n      },\n      \"trial\": false\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a child organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New child org\",\n  \"billing\": {\n    \"type\": \"parent_billing\"\n  },\n  \"subscription\": {\n    \"type\": \"pro\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/org",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"org"
							]
						},
						"description": "Create a child organization.\n\nThis endpoint requires the\n[multi-organization account](https://docs.datadoghq.com/account_management/multi_organization/)\nfeature and must be enabled by\n[contacting support](https://docs.datadoghq.com/help/).\n\nOnce a new child organization is created, you can interact with it\nby using the `org.public_id`, `api_key.key`, and\n`application_key.hash` provided in the response."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New child org\",\n  \"billing\": {\n    \"type\": \"parent_billing\"\n  },\n  \"subscription\": {\n    \"type\": \"pro\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"api_key\": {\n    \"created\": \"2019-08-02 15:31:07\",\n    \"created_by\": \"john@example.com\",\n    \"key\": \"1234512345123456abcabc912349abcd\",\n    \"name\": \"example user\"\n  },\n  \"application_key\": {\n    \"hash\": \"1234512345123459cda4eb9ced49a3d84fd0138c\",\n    \"name\": \"example user\",\n    \"owner\": \"example.com\"\n  },\n  \"org\": {\n    \"billing\": {\n      \"type\": \"parent_billing\"\n    },\n    \"created\": \"2019-09-26T17:28:28Z\",\n    \"description\": \"some description\",\n    \"name\": \"New child org\",\n    \"public_id\": \"abcdef12345\",\n    \"settings\": {\n      \"private_widget_share\": false,\n      \"saml\": {\n        \"enabled\": false\n      },\n      \"saml_autocreate_access_role\": \"ro\",\n      \"saml_autocreate_users_domains\": {\n        \"domains\": [\n          \"example.com\",\n          \"example.com\"\n        ],\n        \"enabled\": false\n      },\n      \"saml_can_be_enabled\": false,\n      \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n      \"saml_idp_initiated_login\": {\n        \"enabled\": false\n      },\n      \"saml_idp_metadata_uploaded\": false,\n      \"saml_login_url\": \"https://my.saml.login.url\",\n      \"saml_strict_mode\": {\n        \"enabled\": false\n      }\n    },\n    \"subscription\": {\n      \"type\": \"pro\"\n    },\n    \"trial\": false\n  },\n  \"user\": {\n    \"access_role\": \"ro\",\n    \"disabled\": false,\n    \"email\": \"test@datadoghq.com\",\n    \"handle\": \"test@datadoghq.com\",\n    \"icon\": \"/path/to/matching/gravatar/icon\",\n    \"name\": \"test user\",\n    \"verified\": true\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New child org\",\n  \"billing\": {\n    \"type\": \"parent_billing\"\n  },\n  \"subscription\": {\n    \"type\": \"pro\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New child org\",\n  \"billing\": {\n    \"type\": \"parent_billing\"\n  },\n  \"subscription\": {\n    \"type\": \"pro\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New child org\",\n  \"billing\": {\n    \"type\": \"parent_billing\"\n  },\n  \"subscription\": {\n    \"type\": \"pro\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get organization information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/org/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"org",
								":public_id"
							],
							"variable": [
								{
									"key": "public_id",
									"value": "abc123"
								}
							]
						},
						"description": "Get organization information."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"org\": {\n    \"billing\": {\n      \"type\": \"parent_billing\"\n    },\n    \"created\": \"2019-09-26T17:28:28Z\",\n    \"description\": \"some description\",\n    \"name\": \"New child org\",\n    \"public_id\": \"abcdef12345\",\n    \"settings\": {\n      \"private_widget_share\": false,\n      \"saml\": {\n        \"enabled\": false\n      },\n      \"saml_autocreate_access_role\": \"ro\",\n      \"saml_autocreate_users_domains\": {\n        \"domains\": [\n          \"example.com\",\n          \"example.com\"\n        ],\n        \"enabled\": false\n      },\n      \"saml_can_be_enabled\": false,\n      \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n      \"saml_idp_initiated_login\": {\n        \"enabled\": false\n      },\n      \"saml_idp_metadata_uploaded\": false,\n      \"saml_login_url\": \"https://my.saml.login.url\",\n      \"saml_strict_mode\": {\n        \"enabled\": false\n      }\n    },\n    \"subscription\": {\n      \"type\": \"pro\"\n    },\n    \"trial\": false\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update your organization",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"billing\": {\n    \"type\": \"parent_billing\"\n  },\n  \"created\": \"2019-09-26T17:28:28Z\",\n  \"description\": \"some description\",\n  \"name\": \"New child org\",\n  \"public_id\": \"abcdef12345\",\n  \"settings\": {\n    \"private_widget_share\": false,\n    \"saml\": {\n      \"enabled\": false\n    },\n    \"saml_autocreate_access_role\": \"ro\",\n    \"saml_autocreate_users_domains\": {\n      \"domains\": [\n        \"example.com\",\n        \"example.com\"\n      ],\n      \"enabled\": false\n    },\n    \"saml_can_be_enabled\": false,\n    \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n    \"saml_idp_initiated_login\": {\n      \"enabled\": false\n    },\n    \"saml_idp_metadata_uploaded\": false,\n    \"saml_login_url\": \"https://my.saml.login.url\",\n    \"saml_strict_mode\": {\n      \"enabled\": false\n    }\n  },\n  \"subscription\": {\n    \"type\": \"pro\"\n  },\n  \"trial\": false\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/org/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"org",
								":public_id"
							],
							"variable": [
								{
									"key": "public_id",
									"value": "abc123"
								}
							]
						},
						"description": "Update your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"billing\": {\n    \"type\": \"parent_billing\"\n  },\n  \"created\": \"2019-09-26T17:28:28Z\",\n  \"description\": \"some description\",\n  \"name\": \"New child org\",\n  \"public_id\": \"abcdef12345\",\n  \"settings\": {\n    \"private_widget_share\": false,\n    \"saml\": {\n      \"enabled\": false\n    },\n    \"saml_autocreate_access_role\": \"ro\",\n    \"saml_autocreate_users_domains\": {\n      \"domains\": [\n        \"example.com\",\n        \"example.com\"\n      ],\n      \"enabled\": false\n    },\n    \"saml_can_be_enabled\": false,\n    \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n    \"saml_idp_initiated_login\": {\n      \"enabled\": false\n    },\n    \"saml_idp_metadata_uploaded\": false,\n    \"saml_login_url\": \"https://my.saml.login.url\",\n    \"saml_strict_mode\": {\n      \"enabled\": false\n    }\n  },\n  \"subscription\": {\n    \"type\": \"pro\"\n  },\n  \"trial\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"org\": {\n    \"billing\": {\n      \"type\": \"parent_billing\"\n    },\n    \"created\": \"2019-09-26T17:28:28Z\",\n    \"description\": \"some description\",\n    \"name\": \"New child org\",\n    \"public_id\": \"abcdef12345\",\n    \"settings\": {\n      \"private_widget_share\": false,\n      \"saml\": {\n        \"enabled\": false\n      },\n      \"saml_autocreate_access_role\": \"ro\",\n      \"saml_autocreate_users_domains\": {\n        \"domains\": [\n          \"example.com\",\n          \"example.com\"\n        ],\n        \"enabled\": false\n      },\n      \"saml_can_be_enabled\": false,\n      \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n      \"saml_idp_initiated_login\": {\n        \"enabled\": false\n      },\n      \"saml_idp_metadata_uploaded\": false,\n      \"saml_login_url\": \"https://my.saml.login.url\",\n      \"saml_strict_mode\": {\n        \"enabled\": false\n      }\n    },\n    \"subscription\": {\n      \"type\": \"pro\"\n    },\n    \"trial\": false\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"billing\": {\n    \"type\": \"parent_billing\"\n  },\n  \"created\": \"2019-09-26T17:28:28Z\",\n  \"description\": \"some description\",\n  \"name\": \"New child org\",\n  \"public_id\": \"abcdef12345\",\n  \"settings\": {\n    \"private_widget_share\": false,\n    \"saml\": {\n      \"enabled\": false\n    },\n    \"saml_autocreate_access_role\": \"ro\",\n    \"saml_autocreate_users_domains\": {\n      \"domains\": [\n        \"example.com\",\n        \"example.com\"\n      ],\n      \"enabled\": false\n    },\n    \"saml_can_be_enabled\": false,\n    \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n    \"saml_idp_initiated_login\": {\n      \"enabled\": false\n    },\n    \"saml_idp_metadata_uploaded\": false,\n    \"saml_login_url\": \"https://my.saml.login.url\",\n    \"saml_strict_mode\": {\n      \"enabled\": false\n    }\n  },\n  \"subscription\": {\n    \"type\": \"pro\"\n  },\n  \"trial\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"billing\": {\n    \"type\": \"parent_billing\"\n  },\n  \"created\": \"2019-09-26T17:28:28Z\",\n  \"description\": \"some description\",\n  \"name\": \"New child org\",\n  \"public_id\": \"abcdef12345\",\n  \"settings\": {\n    \"private_widget_share\": false,\n    \"saml\": {\n      \"enabled\": false\n    },\n    \"saml_autocreate_access_role\": \"ro\",\n    \"saml_autocreate_users_domains\": {\n      \"domains\": [\n        \"example.com\",\n        \"example.com\"\n      ],\n      \"enabled\": false\n    },\n    \"saml_can_be_enabled\": false,\n    \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n    \"saml_idp_initiated_login\": {\n      \"enabled\": false\n    },\n    \"saml_idp_metadata_uploaded\": false,\n    \"saml_login_url\": \"https://my.saml.login.url\",\n    \"saml_strict_mode\": {\n      \"enabled\": false\n    }\n  },\n  \"subscription\": {\n    \"type\": \"pro\"\n  },\n  \"trial\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"billing\": {\n    \"type\": \"parent_billing\"\n  },\n  \"created\": \"2019-09-26T17:28:28Z\",\n  \"description\": \"some description\",\n  \"name\": \"New child org\",\n  \"public_id\": \"abcdef12345\",\n  \"settings\": {\n    \"private_widget_share\": false,\n    \"saml\": {\n      \"enabled\": false\n    },\n    \"saml_autocreate_access_role\": \"ro\",\n    \"saml_autocreate_users_domains\": {\n      \"domains\": [\n        \"example.com\",\n        \"example.com\"\n      ],\n      \"enabled\": false\n    },\n    \"saml_can_be_enabled\": false,\n    \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n    \"saml_idp_initiated_login\": {\n      \"enabled\": false\n    },\n    \"saml_idp_metadata_uploaded\": false,\n    \"saml_login_url\": \"https://my.saml.login.url\",\n    \"saml_strict_mode\": {\n      \"enabled\": false\n    }\n  },\n  \"subscription\": {\n    \"type\": \"pro\"\n  },\n  \"trial\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Spin-off Child Organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/org/:public_id/downgrade",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"org",
								":public_id",
								"downgrade"
							],
							"variable": [
								{
									"key": "public_id",
									"value": "abc123"
								}
							]
						},
						"description": "Only available for MSP customers. Removes a child organization from the hierarchy of the master organization and places the child organization on a 30-day trial."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id/downgrade",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id",
										"downgrade"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"proident elit dolor\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id/downgrade",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id",
										"downgrade"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id/downgrade",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id",
										"downgrade"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id/downgrade",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id",
										"downgrade"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Upload IdP metadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "idp_file",
									"value": "<string>",
									"description": "The IdP metadata XML file",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/saml_configurations/idp_metadata",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"saml_configurations",
								"idp_metadata"
							]
						},
						"description": "Endpoint for uploading IdP metadata for SAML setup.\n\nUse this endpoint to upload or replace IdP metadata for SAML login configuration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "idp_file",
											"value": "<string>",
											"description": "The IdP metadata XML file",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/saml_configurations/idp_metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"saml_configurations",
										"idp_metadata"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "idp_file",
											"value": "<string>",
											"description": "The IdP metadata XML file",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/saml_configurations/idp_metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"saml_configurations",
										"idp_metadata"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "idp_file",
											"value": "<string>",
											"description": "The IdP metadata XML file",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/saml_configurations/idp_metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"saml_configurations",
										"idp_metadata"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "idp_file",
											"value": "<string>",
											"description": "The IdP metadata XML file",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/saml_configurations/idp_metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"saml_configurations",
										"idp_metadata"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Create, edit, and manage your organizations. Read more about [multi-org accounts](https://docs.datadoghq.com/account_management/multi_organization)."
		},
		{
			"name": "PagerDuty Integration",
			"item": [
				{
					"name": "Create a new service object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"service_name\": \"\",\n  \"service_key\": \"\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"pagerduty",
								"configuration",
								"services"
							]
						},
						"description": "Create a new service object in the PagerDuty integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"service_name\": \"\",\n  \"service_key\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"service_name\": \"\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"service_name\": \"\",\n  \"service_key\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"service_name\": \"\",\n  \"service_key\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"service_name\": \"\",\n  \"service_key\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a single service object",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"pagerduty",
								"configuration",
								"services",
								":service_name"
							],
							"variable": [
								{
									"key": "service_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Delete a single service object in the Datadog-PagerDuty integration."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a single service object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"pagerduty",
								"configuration",
								"services",
								":service_name"
							],
							"variable": [
								{
									"key": "service_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get service name in the Datadog-PagerDuty integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"service_name\": \"\"\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a single service object",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"service_key\": \"\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"pagerduty",
								"configuration",
								"services",
								":service_name"
							],
							"variable": [
								{
									"key": "service_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Update a single service object in the Datadog-PagerDuty integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"service_key\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"service_key\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"service_key\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"service_key\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"service_key\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Configure your [Datadog-PagerDuty integration](https://docs.datadoghq.com/integrations/pagerduty/)\ndirectly through the Datadog API."
		},
		{
			"name": "Powerpack",
			"item": [
				{
					"name": "Get all powerpacks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/powerpacks?page[limit]=25&page[offset]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"powerpacks"
							],
							"query": [
								{
									"key": "page[limit]",
									"value": "25",
									"description": "Maximum number of powerpacks in the response."
								},
								{
									"key": "page[offset]",
									"value": "0",
									"description": "Specific offset to use as the beginning of the returned page."
								}
							]
						},
						"description": "Get a list of all powerpacks."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks?page[limit]=25&page[offset]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks"
									],
									"query": [
										{
											"key": "page[limit]",
											"value": "25",
											"description": "Maximum number of powerpacks in the response."
										},
										{
											"key": "page[offset]",
											"value": "0",
											"description": "Specific offset to use as the beginning of the returned page."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"group_widget\": {\n          \"definition\": {\n            \"widgets\": [\n              {\n                \"definition\": {\n                  \"id4\": {}\n                },\n                \"layout\": {\n                  \"x\": \"<long>\",\n                  \"y\": \"<long>\",\n                  \"width\": \"<long>\",\n                  \"height\": \"<long>\"\n                }\n              },\n              {\n                \"definition\": {\n                  \"nullac41\": {},\n                  \"adipisicing9\": {}\n                },\n                \"layout\": {\n                  \"x\": \"<long>\",\n                  \"y\": \"<long>\",\n                  \"width\": \"<long>\",\n                  \"height\": \"<long>\"\n                }\n              }\n            ],\n            \"layout_type\": \"<string>\",\n            \"type\": \"<string>\",\n            \"show_title\": \"<boolean>\",\n            \"title\": \"<string>\"\n          },\n          \"layout\": {\n            \"x\": \"<long>\",\n            \"y\": \"<long>\",\n            \"width\": \"<long>\",\n            \"height\": \"<long>\"\n          }\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"template_variables\": [\n          {\n            \"name\": \"<string>\",\n            \"defaults\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          {\n            \"name\": \"<string>\",\n            \"defaults\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"author\": {\n          \"email\": \"<string>\",\n          \"handle\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      },\n      \"type\": \"<string>\"\n    },\n    {\n      \"attributes\": {\n        \"group_widget\": {\n          \"definition\": {\n            \"widgets\": [\n              {\n                \"definition\": {\n                  \"ut9\": {}\n                },\n                \"layout\": {\n                  \"x\": \"<long>\",\n                  \"y\": \"<long>\",\n                  \"width\": \"<long>\",\n                  \"height\": \"<long>\"\n                }\n              },\n              {\n                \"definition\": {\n                  \"labore_391\": {},\n                  \"ullamco142\": {}\n                },\n                \"layout\": {\n                  \"x\": \"<long>\",\n                  \"y\": \"<long>\",\n                  \"width\": \"<long>\",\n                  \"height\": \"<long>\"\n                }\n              }\n            ],\n            \"layout_type\": \"<string>\",\n            \"type\": \"<string>\",\n            \"show_title\": \"<boolean>\",\n            \"title\": \"<string>\"\n          },\n          \"layout\": {\n            \"x\": \"<long>\",\n            \"y\": \"<long>\",\n            \"width\": \"<long>\",\n            \"height\": \"<long>\"\n          }\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"template_variables\": [\n          {\n            \"name\": \"<string>\",\n            \"defaults\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          {\n            \"name\": \"<string>\",\n            \"defaults\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"author\": {\n          \"email\": \"<string>\",\n          \"handle\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"<string>\",\n    \"last\": \"<string>\",\n    \"next\": \"<string>\",\n    \"prev\": \"<string>\",\n    \"self\": \"<string>\"\n  },\n  \"meta\": {\n    \"pagination\": {\n      \"first_offset\": \"<long>\",\n      \"last_offset\": \"<long>\",\n      \"limit\": \"<long>\",\n      \"next_offset\": \"<long>\",\n      \"offset\": \"<long>\",\n      \"prev_offset\": \"<long>\",\n      \"total\": \"<long>\",\n      \"type\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks?page[limit]=25&page[offset]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks"
									],
									"query": [
										{
											"key": "page[limit]",
											"value": "25",
											"description": "Maximum number of powerpacks in the response."
										},
										{
											"key": "page[offset]",
											"value": "0",
											"description": "Specific offset to use as the beginning of the returned page."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a new powerpack",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"group_widget\": {\n        \"definition\": {\n          \"widgets\": [\n            {\n              \"definition\": {\n                \"mollit12\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            },\n            {\n              \"definition\": {\n                \"ut0_3\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            }\n          ],\n          \"layout_type\": \"<string>\",\n          \"type\": \"<string>\",\n          \"show_title\": \"<boolean>\",\n          \"title\": \"<string>\"\n        },\n        \"layout\": {\n          \"x\": \"<long>\",\n          \"y\": \"<long>\",\n          \"width\": \"<long>\",\n          \"height\": \"<long>\"\n        }\n      },\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_variables\": [\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"author\": {\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"type\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/powerpacks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"powerpacks"
							]
						},
						"description": "Create a powerpack."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"group_widget\": {\n        \"definition\": {\n          \"widgets\": [\n            {\n              \"definition\": {\n                \"mollit12\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            },\n            {\n              \"definition\": {\n                \"ut0_3\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            }\n          ],\n          \"layout_type\": \"<string>\",\n          \"type\": \"<string>\",\n          \"show_title\": \"<boolean>\",\n          \"title\": \"<string>\"\n        },\n        \"layout\": {\n          \"x\": \"<long>\",\n          \"y\": \"<long>\",\n          \"width\": \"<long>\",\n          \"height\": \"<long>\"\n        }\n      },\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_variables\": [\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"author\": {\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"type\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"group_widget\": {\n        \"definition\": {\n          \"widgets\": [\n            {\n              \"definition\": {\n                \"aliquip_83\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            },\n            {\n              \"definition\": {\n                \"etc\": {},\n                \"ut_a6\": {},\n                \"et5d\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            }\n          ],\n          \"layout_type\": \"<string>\",\n          \"type\": \"<string>\",\n          \"show_title\": \"<boolean>\",\n          \"title\": \"<string>\"\n        },\n        \"layout\": {\n          \"x\": \"<long>\",\n          \"y\": \"<long>\",\n          \"width\": \"<long>\",\n          \"height\": \"<long>\"\n        }\n      },\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_variables\": [\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"author\": {\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"type\": \"<string>\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"group_widget\": {\n        \"definition\": {\n          \"widgets\": [\n            {\n              \"definition\": {\n                \"mollit12\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            },\n            {\n              \"definition\": {\n                \"ut0_3\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            }\n          ],\n          \"layout_type\": \"<string>\",\n          \"type\": \"<string>\",\n          \"show_title\": \"<boolean>\",\n          \"title\": \"<string>\"\n        },\n        \"layout\": {\n          \"x\": \"<long>\",\n          \"y\": \"<long>\",\n          \"width\": \"<long>\",\n          \"height\": \"<long>\"\n        }\n      },\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_variables\": [\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"author\": {\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"type\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"group_widget\": {\n        \"definition\": {\n          \"widgets\": [\n            {\n              \"definition\": {\n                \"mollit12\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            },\n            {\n              \"definition\": {\n                \"ut0_3\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            }\n          ],\n          \"layout_type\": \"<string>\",\n          \"type\": \"<string>\",\n          \"show_title\": \"<boolean>\",\n          \"title\": \"<string>\"\n        },\n        \"layout\": {\n          \"x\": \"<long>\",\n          \"y\": \"<long>\",\n          \"width\": \"<long>\",\n          \"height\": \"<long>\"\n        }\n      },\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_variables\": [\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"author\": {\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"type\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a powerpack",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/powerpacks/:powerpack_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"powerpacks",
								":powerpack_id"
							],
							"variable": [
								{
									"key": "powerpack_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a powerpack."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks/:powerpack_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks",
										":powerpack_id"
									],
									"variable": [
										{
											"key": "powerpack_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Powerpack Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks/:powerpack_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks",
										":powerpack_id"
									],
									"variable": [
										{
											"key": "powerpack_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks/:powerpack_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks",
										":powerpack_id"
									],
									"variable": [
										{
											"key": "powerpack_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a Powerpack",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/powerpacks/:powerpack_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"powerpacks",
								":powerpack_id"
							],
							"variable": [
								{
									"key": "powerpack_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a powerpack."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks/:powerpack_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks",
										":powerpack_id"
									],
									"variable": [
										{
											"key": "powerpack_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"group_widget\": {\n        \"definition\": {\n          \"widgets\": [\n            {\n              \"definition\": {\n                \"aliquip_83\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            },\n            {\n              \"definition\": {\n                \"etc\": {},\n                \"ut_a6\": {},\n                \"et5d\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            }\n          ],\n          \"layout_type\": \"<string>\",\n          \"type\": \"<string>\",\n          \"show_title\": \"<boolean>\",\n          \"title\": \"<string>\"\n        },\n        \"layout\": {\n          \"x\": \"<long>\",\n          \"y\": \"<long>\",\n          \"width\": \"<long>\",\n          \"height\": \"<long>\"\n        }\n      },\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_variables\": [\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"author\": {\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"type\": \"<string>\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Powerpack Not Found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks/:powerpack_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks",
										":powerpack_id"
									],
									"variable": [
										{
											"key": "powerpack_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks/:powerpack_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks",
										":powerpack_id"
									],
									"variable": [
										{
											"key": "powerpack_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a powerpack",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"group_widget\": {\n        \"definition\": {\n          \"widgets\": [\n            {\n              \"definition\": {\n                \"mollit12\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            },\n            {\n              \"definition\": {\n                \"ut0_3\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            }\n          ],\n          \"layout_type\": \"<string>\",\n          \"type\": \"<string>\",\n          \"show_title\": \"<boolean>\",\n          \"title\": \"<string>\"\n        },\n        \"layout\": {\n          \"x\": \"<long>\",\n          \"y\": \"<long>\",\n          \"width\": \"<long>\",\n          \"height\": \"<long>\"\n        }\n      },\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_variables\": [\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"author\": {\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"type\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/powerpacks/:powerpack_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"powerpacks",
								":powerpack_id"
							],
							"variable": [
								{
									"key": "powerpack_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a powerpack."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"group_widget\": {\n        \"definition\": {\n          \"widgets\": [\n            {\n              \"definition\": {\n                \"mollit12\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            },\n            {\n              \"definition\": {\n                \"ut0_3\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            }\n          ],\n          \"layout_type\": \"<string>\",\n          \"type\": \"<string>\",\n          \"show_title\": \"<boolean>\",\n          \"title\": \"<string>\"\n        },\n        \"layout\": {\n          \"x\": \"<long>\",\n          \"y\": \"<long>\",\n          \"width\": \"<long>\",\n          \"height\": \"<long>\"\n        }\n      },\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_variables\": [\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"author\": {\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"type\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks/:powerpack_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks",
										":powerpack_id"
									],
									"variable": [
										{
											"key": "powerpack_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"group_widget\": {\n        \"definition\": {\n          \"widgets\": [\n            {\n              \"definition\": {\n                \"aliquip_83\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            },\n            {\n              \"definition\": {\n                \"etc\": {},\n                \"ut_a6\": {},\n                \"et5d\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            }\n          ],\n          \"layout_type\": \"<string>\",\n          \"type\": \"<string>\",\n          \"show_title\": \"<boolean>\",\n          \"title\": \"<string>\"\n        },\n        \"layout\": {\n          \"x\": \"<long>\",\n          \"y\": \"<long>\",\n          \"width\": \"<long>\",\n          \"height\": \"<long>\"\n        }\n      },\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_variables\": [\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"author\": {\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"type\": \"<string>\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"group_widget\": {\n        \"definition\": {\n          \"widgets\": [\n            {\n              \"definition\": {\n                \"mollit12\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            },\n            {\n              \"definition\": {\n                \"ut0_3\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            }\n          ],\n          \"layout_type\": \"<string>\",\n          \"type\": \"<string>\",\n          \"show_title\": \"<boolean>\",\n          \"title\": \"<string>\"\n        },\n        \"layout\": {\n          \"x\": \"<long>\",\n          \"y\": \"<long>\",\n          \"width\": \"<long>\",\n          \"height\": \"<long>\"\n        }\n      },\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_variables\": [\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"author\": {\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"type\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks/:powerpack_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks",
										":powerpack_id"
									],
									"variable": [
										{
											"key": "powerpack_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Powerpack Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"group_widget\": {\n        \"definition\": {\n          \"widgets\": [\n            {\n              \"definition\": {\n                \"mollit12\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            },\n            {\n              \"definition\": {\n                \"ut0_3\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            }\n          ],\n          \"layout_type\": \"<string>\",\n          \"type\": \"<string>\",\n          \"show_title\": \"<boolean>\",\n          \"title\": \"<string>\"\n        },\n        \"layout\": {\n          \"x\": \"<long>\",\n          \"y\": \"<long>\",\n          \"width\": \"<long>\",\n          \"height\": \"<long>\"\n        }\n      },\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_variables\": [\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"author\": {\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"type\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks/:powerpack_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks",
										":powerpack_id"
									],
									"variable": [
										{
											"key": "powerpack_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"group_widget\": {\n        \"definition\": {\n          \"widgets\": [\n            {\n              \"definition\": {\n                \"mollit12\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            },\n            {\n              \"definition\": {\n                \"ut0_3\": {}\n              },\n              \"layout\": {\n                \"x\": \"<long>\",\n                \"y\": \"<long>\",\n                \"width\": \"<long>\",\n                \"height\": \"<long>\"\n              }\n            }\n          ],\n          \"layout_type\": \"<string>\",\n          \"type\": \"<string>\",\n          \"show_title\": \"<boolean>\",\n          \"title\": \"<string>\"\n        },\n        \"layout\": {\n          \"x\": \"<long>\",\n          \"y\": \"<long>\",\n          \"width\": \"<long>\",\n          \"height\": \"<long>\"\n        }\n      },\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_variables\": [\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"defaults\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"author\": {\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"type\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/powerpacks/:powerpack_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"powerpacks",
										":powerpack_id"
									],
									"variable": [
										{
											"key": "powerpack_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "The powerpack endpoints allow you to:\n\n- Get a powerpack\n- Create a powerpack\n- Delete a powerpack\n- Get a list of all powerpacks\n\nThe Patch and Delete API methods can only be performed on a powerpack by\na user who has the powerpack create permission for that specific powerpack."
		},
		{
			"name": "Processes",
			"item": [
				{
					"name": "Get all processes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/processes?search=<string>&tags=<string>&from=<long>&to=<long>&page[limit]=1000&page[cursor]=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"processes"
							],
							"query": [
								{
									"key": "search",
									"value": "<string>",
									"description": "String to search processes by."
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "Comma-separated list of tags to filter processes by."
								},
								{
									"key": "from",
									"value": "<long>",
									"description": "Unix timestamp (number of seconds since epoch) of the start of the query window.\nIf not provided, the start of the query window will be 15 minutes before the `to` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
								},
								{
									"key": "to",
									"value": "<long>",
									"description": "Unix timestamp (number of seconds since epoch) of the end of the query window.\nIf not provided, the end of the query window will be 15 minutes after the `from` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
								},
								{
									"key": "page[limit]",
									"value": "1000",
									"description": "Maximum number of results returned."
								},
								{
									"key": "page[cursor]",
									"value": "<string>",
									"description": "String to query the next page of results.\nThis key is provided with each valid response from the API in `meta.page.after`."
								}
							]
						},
						"description": "Get all processes for your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/processes?search=<string>&tags=<string>&from=<long>&to=<long>&page[limit]=1000&page[cursor]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"processes"
									],
									"query": [
										{
											"key": "search",
											"value": "<string>",
											"description": "String to search processes by."
										},
										{
											"key": "tags",
											"value": "<string>",
											"description": "Comma-separated list of tags to filter processes by."
										},
										{
											"key": "from",
											"value": "<long>",
											"description": "Unix timestamp (number of seconds since epoch) of the start of the query window.\nIf not provided, the start of the query window will be 15 minutes before the `to` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
										},
										{
											"key": "to",
											"value": "<long>",
											"description": "Unix timestamp (number of seconds since epoch) of the end of the query window.\nIf not provided, the end of the query window will be 15 minutes after the `from` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
										},
										{
											"key": "page[limit]",
											"value": "1000",
											"description": "Maximum number of results returned."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "String to query the next page of results.\nThis key is provided with each valid response from the API in `meta.page.after`."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"cmdline\": \"<string>\",\n        \"host\": \"<string>\",\n        \"pid\": \"<long>\",\n        \"ppid\": \"<long>\",\n        \"start\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<string>\",\n        \"user\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"process\"\n    },\n    {\n      \"attributes\": {\n        \"cmdline\": \"<string>\",\n        \"host\": \"<string>\",\n        \"pid\": \"<long>\",\n        \"ppid\": \"<long>\",\n        \"start\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<string>\",\n        \"user\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"process\"\n    }\n  ],\n  \"meta\": {\n    \"page\": {\n      \"after\": \"<string>\",\n      \"size\": \"<integer>\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/processes?search=<string>&tags=<string>&from=<long>&to=<long>&page[limit]=1000&page[cursor]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"processes"
									],
									"query": [
										{
											"key": "search",
											"value": "<string>",
											"description": "String to search processes by."
										},
										{
											"key": "tags",
											"value": "<string>",
											"description": "Comma-separated list of tags to filter processes by."
										},
										{
											"key": "from",
											"value": "<long>",
											"description": "Unix timestamp (number of seconds since epoch) of the start of the query window.\nIf not provided, the start of the query window will be 15 minutes before the `to` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
										},
										{
											"key": "to",
											"value": "<long>",
											"description": "Unix timestamp (number of seconds since epoch) of the end of the query window.\nIf not provided, the end of the query window will be 15 minutes after the `from` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
										},
										{
											"key": "page[limit]",
											"value": "1000",
											"description": "Maximum number of results returned."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "String to query the next page of results.\nThis key is provided with each valid response from the API in `meta.page.after`."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/processes?search=<string>&tags=<string>&from=<long>&to=<long>&page[limit]=1000&page[cursor]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"processes"
									],
									"query": [
										{
											"key": "search",
											"value": "<string>",
											"description": "String to search processes by."
										},
										{
											"key": "tags",
											"value": "<string>",
											"description": "Comma-separated list of tags to filter processes by."
										},
										{
											"key": "from",
											"value": "<long>",
											"description": "Unix timestamp (number of seconds since epoch) of the start of the query window.\nIf not provided, the start of the query window will be 15 minutes before the `to` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
										},
										{
											"key": "to",
											"value": "<long>",
											"description": "Unix timestamp (number of seconds since epoch) of the end of the query window.\nIf not provided, the end of the query window will be 15 minutes after the `from` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
										},
										{
											"key": "page[limit]",
											"value": "1000",
											"description": "Maximum number of results returned."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "String to query the next page of results.\nThis key is provided with each valid response from the API in `meta.page.after`."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/processes?search=<string>&tags=<string>&from=<long>&to=<long>&page[limit]=1000&page[cursor]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"processes"
									],
									"query": [
										{
											"key": "search",
											"value": "<string>",
											"description": "String to search processes by."
										},
										{
											"key": "tags",
											"value": "<string>",
											"description": "Comma-separated list of tags to filter processes by."
										},
										{
											"key": "from",
											"value": "<long>",
											"description": "Unix timestamp (number of seconds since epoch) of the start of the query window.\nIf not provided, the start of the query window will be 15 minutes before the `to` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
										},
										{
											"key": "to",
											"value": "<long>",
											"description": "Unix timestamp (number of seconds since epoch) of the end of the query window.\nIf not provided, the end of the query window will be 15 minutes after the `from` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
										},
										{
											"key": "page[limit]",
											"value": "1000",
											"description": "Maximum number of results returned."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "String to query the next page of results.\nThis key is provided with each valid response from the API in `meta.page.after`."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "The processes API allows you to query processes data for your organization."
		},
		{
			"name": "Restriction Policies",
			"item": [
				{
					"name": "Delete a restriction policy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"restriction_policy",
								":resource_id"
							],
							"variable": [
								{
									"key": "resource_id",
									"value": "<string>"
								}
							]
						},
						"description": "Deletes the restriction policy associated with a specified resource."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restriction_policy",
										":resource_id"
									],
									"variable": [
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restriction_policy",
										":resource_id"
									],
									"variable": [
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restriction_policy",
										":resource_id"
									],
									"variable": [
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restriction_policy",
										":resource_id"
									],
									"variable": [
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a restriction policy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"restriction_policy",
								":resource_id"
							],
							"variable": [
								{
									"key": "resource_id",
									"value": "<string>"
								}
							]
						},
						"description": "Retrieves the restriction policy associated with a specified resource."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restriction_policy",
										":resource_id"
									],
									"variable": [
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"type\": \"restriction_policy\",\n    \"id\": \"<string>\",\n    \"attributes\": {\n      \"bindings\": [\n        {\n          \"relation\": \"<string>\",\n          \"principals\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"relation\": \"<string>\",\n          \"principals\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restriction_policy",
										":resource_id"
									],
									"variable": [
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restriction_policy",
										":resource_id"
									],
									"variable": [
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restriction_policy",
										":resource_id"
									],
									"variable": [
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a restriction policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"restriction_policy\",\n    \"id\": \"<string>\",\n    \"attributes\": {\n      \"bindings\": [\n        {\n          \"relation\": \"<string>\",\n          \"principals\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"relation\": \"<string>\",\n          \"principals\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"restriction_policy",
								":resource_id"
							],
							"variable": [
								{
									"key": "resource_id",
									"value": "<string>"
								}
							]
						},
						"description": "Updates the restriction policy associated with a resource.\n\n#### Supported resources\nRestriction policies can be applied to the following resources:\n- Connections: `connection`\n- Dashboards: `dashboard`\n- Notebooks: `notebook`\n- Security Rules: `security-rule`\n- Service Level Objectives: `slo`\n\n#### Supported relations for resources\nResource Type            | Supported Relations\n-------------------------|--------------------------\nConnections              | `viewer`, `editor`, `resolver`\nDashboards               | `viewer`, `editor`\nNotebooks                | `viewer`, `editor`\nSecurity Rules           | `viewer`, `editor`\nService Level Objectives | `viewer`, `editor`"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"restriction_policy\",\n    \"id\": \"<string>\",\n    \"attributes\": {\n      \"bindings\": [\n        {\n          \"relation\": \"<string>\",\n          \"principals\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"relation\": \"<string>\",\n          \"principals\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restriction_policy",
										":resource_id"
									],
									"variable": [
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"type\": \"restriction_policy\",\n    \"id\": \"<string>\",\n    \"attributes\": {\n      \"bindings\": [\n        {\n          \"relation\": \"<string>\",\n          \"principals\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"relation\": \"<string>\",\n          \"principals\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"restriction_policy\",\n    \"id\": \"<string>\",\n    \"attributes\": {\n      \"bindings\": [\n        {\n          \"relation\": \"<string>\",\n          \"principals\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"relation\": \"<string>\",\n          \"principals\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restriction_policy",
										":resource_id"
									],
									"variable": [
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"restriction_policy\",\n    \"id\": \"<string>\",\n    \"attributes\": {\n      \"bindings\": [\n        {\n          \"relation\": \"<string>\",\n          \"principals\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"relation\": \"<string>\",\n          \"principals\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restriction_policy",
										":resource_id"
									],
									"variable": [
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"restriction_policy\",\n    \"id\": \"<string>\",\n    \"attributes\": {\n      \"bindings\": [\n        {\n          \"relation\": \"<string>\",\n          \"principals\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"relation\": \"<string>\",\n          \"principals\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/restriction_policy/:resource_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restriction_policy",
										":resource_id"
									],
									"variable": [
										{
											"key": "resource_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "A restriction policy defines the access control rules for a resource, mapping a set of relations\n(such as editor and viewer) to a set of allowed principals (such as roles, teams (beta), or users (beta)).\nThe restriction policy determines who is authorized to perform what actions on the resource."
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "List permissions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"permissions"
							]
						},
						"description": "Returns a list of all permissions, including name, description, and ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"permissions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"type\": \"permissions\",\n      \"attributes\": {\n        \"created\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"display_name\": \"<string>\",\n        \"display_type\": \"<string>\",\n        \"group_name\": \"<string>\",\n        \"name\": \"<string>\",\n        \"restricted\": \"<boolean>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"permissions\",\n      \"attributes\": {\n        \"created\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"display_name\": \"<string>\",\n        \"display_type\": \"<string>\",\n        \"group_name\": \"<string>\",\n        \"name\": \"<string>\",\n        \"restricted\": \"<boolean>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"permissions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"permissions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"permissions"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles?page[size]=10&page[number]=0&sort=name&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page. The maximum allowed value is 100."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "Sort roles depending on the given field. Sort order is **ascending** by default.\nSort order is **descending** if the field is prefixed by a negative sign, for example:\n`sort=-name`."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter all roles by the given string."
								}
							]
						},
						"description": "Returns all roles, including their names and their unique identifiers."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles?page[size]=10&page[number]=0&sort=name&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Sort roles depending on the given field. Sort order is **ascending** by default.\nSort order is **descending** if the field is prefixed by a negative sign, for example:\n`sort=-name`."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter all roles by the given string."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"type\": \"roles\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"user_count\": \"<long>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"permissions\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"permissions\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"permissions\"\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"type\": \"roles\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"user_count\": \"<long>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"permissions\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"permissions\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"permissions\"\n            }\n          ]\n        }\n      }\n    }\n  ],\n  \"meta\": {\n    \"page\": {\n      \"total_count\": \"<long>\",\n      \"total_filtered_count\": \"<long>\"\n    }\n  }\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles?page[size]=10&page[number]=0&sort=name&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Sort roles depending on the given field. Sort order is **ascending** by default.\nSort order is **descending** if the field is prefixed by a negative sign, for example:\n`sort=-name`."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter all roles by the given string."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles?page[size]=10&page[number]=0&sort=name&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Sort roles depending on the given field. Sort order is **ascending** by default.\nSort order is **descending** if the field is prefixed by a negative sign, for example:\n`sort=-name`."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter all roles by the given string."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create role",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    },\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      },\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    },\n    \"type\": \"roles\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles"
							]
						},
						"description": "Create a new role for your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    },\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      },\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    },\n    \"type\": \"roles\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"type\": \"roles\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      }\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    },\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      },\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    },\n    \"type\": \"roles\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    },\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      },\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    },\n    \"type\": \"roles\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    },\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      },\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    },\n    \"type\": \"roles\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete role",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id"
							],
							"variable": [
								{
									"key": "role_id",
									"value": "<string>"
								}
							]
						},
						"description": "Disables a role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id"
							],
							"variable": [
								{
									"key": "role_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a role in the organization specified by the role’s `role_id`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"type\": \"roles\",\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"user_count\": \"<long>\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      }\n    }\n  }\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a role",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"roles\",\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      },\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id"
							],
							"variable": [
								{
									"key": "role_id",
									"value": "<string>"
								}
							]
						},
						"description": "Edit a role. Can only be used with application keys belonging to administrators."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"roles\",\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      },\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"type\": \"roles\",\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      }\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"roles\",\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      },\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"roles\",\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      },\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"roles\",\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      },\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"roles\",\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      },\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"roles\",\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      },\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a new role by cloning an existing role",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"roles\",\n    \"attributes\": {\n      \"name\": \"<string>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id/clone",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id",
								"clone"
							],
							"variable": [
								{
									"key": "role_id",
									"value": "<string>"
								}
							]
						},
						"description": "Clone an existing role"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"roles\",\n    \"attributes\": {\n      \"name\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"clone"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"type\": \"roles\",\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"user_count\": \"<long>\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"permissions\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"permissions\"\n          }\n        ]\n      }\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"roles\",\n    \"attributes\": {\n      \"name\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"clone"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"roles\",\n    \"attributes\": {\n      \"name\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"clone"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"roles\",\n    \"attributes\": {\n      \"name\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"clone"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"roles\",\n    \"attributes\": {\n      \"name\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"clone"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"roles\",\n    \"attributes\": {\n      \"name\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"clone"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Revoke permission",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"permissions\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id",
								"permissions"
							],
							"variable": [
								{
									"key": "role_id",
									"value": "<string>"
								}
							]
						},
						"description": "Removes a permission from a role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"permissions\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"type\": \"permissions\",\n      \"attributes\": {\n        \"created\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"display_name\": \"<string>\",\n        \"display_type\": \"<string>\",\n        \"group_name\": \"<string>\",\n        \"name\": \"<string>\",\n        \"restricted\": \"<boolean>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"permissions\",\n      \"attributes\": {\n        \"created\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"display_name\": \"<string>\",\n        \"display_type\": \"<string>\",\n        \"group_name\": \"<string>\",\n        \"name\": \"<string>\",\n        \"restricted\": \"<boolean>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"permissions\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"permissions\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"permissions\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"permissions\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List permissions for a role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id",
								"permissions"
							],
							"variable": [
								{
									"key": "role_id",
									"value": "<string>"
								}
							]
						},
						"description": "Returns a list of all permissions for a single role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"type\": \"permissions\",\n      \"attributes\": {\n        \"created\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"display_name\": \"<string>\",\n        \"display_type\": \"<string>\",\n        \"group_name\": \"<string>\",\n        \"name\": \"<string>\",\n        \"restricted\": \"<boolean>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"permissions\",\n      \"attributes\": {\n        \"created\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"display_name\": \"<string>\",\n        \"display_type\": \"<string>\",\n        \"group_name\": \"<string>\",\n        \"name\": \"<string>\",\n        \"restricted\": \"<boolean>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Grant permission to a role",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"permissions\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id",
								"permissions"
							],
							"variable": [
								{
									"key": "role_id",
									"value": "<string>"
								}
							]
						},
						"description": "Adds a permission to a role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"permissions\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"type\": \"permissions\",\n      \"attributes\": {\n        \"created\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"display_name\": \"<string>\",\n        \"display_type\": \"<string>\",\n        \"group_name\": \"<string>\",\n        \"name\": \"<string>\",\n        \"restricted\": \"<boolean>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"permissions\",\n      \"attributes\": {\n        \"created\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"display_name\": \"<string>\",\n        \"display_type\": \"<string>\",\n        \"group_name\": \"<string>\",\n        \"name\": \"<string>\",\n        \"restricted\": \"<boolean>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"permissions\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"permissions\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"permissions\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"permissions\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Remove a user from a role",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"users\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id",
								"users"
							],
							"variable": [
								{
									"key": "role_id",
									"value": "<string>"
								}
							]
						},
						"description": "Removes a user from a role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"users\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ],\n  \"included\": [\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ],\n  \"meta\": {\n    \"page\": {\n      \"total_count\": \"<long>\",\n      \"total_filtered_count\": \"<long>\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"users\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"users\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"users\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"users\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all users of a role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id/users?page[size]=10&page[number]=0&sort=name&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id",
								"users"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page. The maximum allowed value is 100."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "User attribute to order results by. Sort order is **ascending** by default.\nSort order is **descending** if the field is prefixed by a negative sign,\nfor example `sort=-name`. Options: `name`, `email`, `status`."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter all users by the given string. Defaults to no filtering."
								}
							],
							"variable": [
								{
									"key": "role_id",
									"value": "<string>"
								}
							]
						},
						"description": "Gets all users of a role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users?page[size]=10&page[number]=0&sort=name&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "User attribute to order results by. Sort order is **ascending** by default.\nSort order is **descending** if the field is prefixed by a negative sign,\nfor example `sort=-name`. Options: `name`, `email`, `status`."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter all users by the given string. Defaults to no filtering."
										}
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ],\n  \"included\": [\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ],\n  \"meta\": {\n    \"page\": {\n      \"total_count\": \"<long>\",\n      \"total_filtered_count\": \"<long>\"\n    }\n  }\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users?page[size]=10&page[number]=0&sort=name&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "User attribute to order results by. Sort order is **ascending** by default.\nSort order is **descending** if the field is prefixed by a negative sign,\nfor example `sort=-name`. Options: `name`, `email`, `status`."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter all users by the given string. Defaults to no filtering."
										}
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users?page[size]=10&page[number]=0&sort=name&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "User attribute to order results by. Sort order is **ascending** by default.\nSort order is **descending** if the field is prefixed by a negative sign,\nfor example `sort=-name`. Options: `name`, `email`, `status`."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter all users by the given string. Defaults to no filtering."
										}
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users?page[size]=10&page[number]=0&sort=name&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "User attribute to order results by. Sort order is **ascending** by default.\nSort order is **descending** if the field is prefixed by a negative sign,\nfor example `sort=-name`. Options: `name`, `email`, `status`."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter all users by the given string. Defaults to no filtering."
										}
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a user to a role",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"users\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id",
								"users"
							],
							"variable": [
								{
									"key": "role_id",
									"value": "<string>"
								}
							]
						},
						"description": "Adds a user to a role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"users\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ],\n  \"included\": [\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ],\n  \"meta\": {\n    \"page\": {\n      \"total_count\": \"<long>\",\n      \"total_filtered_count\": \"<long>\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"users\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"users\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"users\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"users\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "The Roles API is used to create and manage Datadog roles, what\n[global permissions](https://docs.datadoghq.com/account_management/rbac/)\nthey grant, and which users belong to them.\n\nPermissions related to specific account assets can be granted to roles\nin the Datadog application without using this API. For example, granting\nread access on a specific log index to a role can be done in Datadog from the\n[Pipelines page](https://app.datadoghq.com/logs/pipelines)."
		},
		{
			"name": "RUM",
			"item": [
				{
					"name": "Aggregate RUM events",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"pc98\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"sum\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc99\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/rum/analytics/aggregate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"rum",
								"analytics",
								"aggregate"
							]
						},
						"description": "The API endpoint to aggregate RUM events into buckets of computed metrics and timeseries."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"pc98\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"sum\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc99\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"buckets\": [\n      {\n        \"by\": {\n          \"inc4\": \"<string>\"\n        },\n        \"computes\": {\n          \"nostrud_0c_\": \"<string>\"\n        }\n      },\n      {\n        \"by\": {\n          \"dolore__\": \"<string>\",\n          \"aliqua_8a4\": \"<string>\",\n          \"fugiatd\": \"<string>\",\n          \"culpa9_a\": \"<string>\"\n        },\n        \"computes\": {\n          \"aliqua_237\": \"<string>\"\n        }\n      }\n    ]\n  },\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"done\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"pc98\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"sum\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc99\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"pc98\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"sum\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc99\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compute\": [\n    {\n      \"aggregation\": \"pc98\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    },\n    {\n      \"aggregation\": \"cardinality\",\n      \"interval\": \"<string>\",\n      \"metric\": \"<string>\",\n      \"type\": \"total\"\n    }\n  ],\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"group_by\": [\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"sum\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    },\n    {\n      \"facet\": \"<string>\",\n      \"histogram\": {\n        \"interval\": \"<double>\",\n        \"min\": \"<double>\",\n        \"max\": \"<double>\"\n      },\n      \"limit\": 10,\n      \"missing\": \"<string>\",\n      \"sort\": {\n        \"aggregation\": \"pc99\",\n        \"metric\": \"<string>\",\n        \"order\": \"asc\",\n        \"type\": \"alphabetical\"\n      },\n      \"total\": \"<boolean>\"\n    }\n  ],\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List all the RUM applications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/rum/applications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"rum",
								"applications"
							]
						},
						"description": "List all the RUM applications in your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"application_id\": \"<string>\",\n        \"created_at\": \"<long>\",\n        \"created_by_handle\": \"<string>\",\n        \"name\": \"<string>\",\n        \"org_id\": \"<integer>\",\n        \"type\": \"<string>\",\n        \"updated_at\": \"<long>\",\n        \"updated_by_handle\": \"<string>\",\n        \"hash\": \"<string>\",\n        \"is_active\": \"<boolean>\"\n      },\n      \"type\": \"rum_application\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"attributes\": {\n        \"application_id\": \"<string>\",\n        \"created_at\": \"<long>\",\n        \"created_by_handle\": \"<string>\",\n        \"name\": \"<string>\",\n        \"org_id\": \"<integer>\",\n        \"type\": \"<string>\",\n        \"updated_at\": \"<long>\",\n        \"updated_by_handle\": \"<string>\",\n        \"hash\": \"<string>\",\n        \"is_active\": \"<boolean>\"\n      },\n      \"type\": \"rum_application\",\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a new RUM application",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"type\": \"rum_application_create\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/rum/applications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"rum",
								"applications"
							]
						},
						"description": "Create a new RUM application in your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"type\": \"rum_application_create\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"application_id\": \"<string>\",\n      \"client_token\": \"<string>\",\n      \"created_at\": \"<long>\",\n      \"created_by_handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"org_id\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"updated_at\": \"<long>\",\n      \"updated_by_handle\": \"<string>\",\n      \"hash\": \"<string>\",\n      \"is_active\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"rum_application\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"type\": \"rum_application_create\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"type\": \"rum_application_create\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a RUM application",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/rum/applications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"rum",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete an existing RUM application in your organization."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a RUM application",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/rum/applications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"rum",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>"
								}
							]
						},
						"description": "Get the RUM application with given ID in your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"application_id\": \"<string>\",\n      \"client_token\": \"<string>\",\n      \"created_at\": \"<long>\",\n      \"created_by_handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"org_id\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"updated_at\": \"<long>\",\n      \"updated_by_handle\": \"<string>\",\n      \"hash\": \"<string>\",\n      \"is_active\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"rum_application\"\n  }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a RUM application",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"rum_application_update\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/rum/applications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"rum",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>"
								}
							]
						},
						"description": "Update the RUM application with given ID in your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"rum_application_update\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"application_id\": \"<string>\",\n      \"client_token\": \"<string>\",\n      \"created_at\": \"<long>\",\n      \"created_by_handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"org_id\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"updated_at\": \"<long>\",\n      \"updated_by_handle\": \"<string>\",\n      \"hash\": \"<string>\",\n      \"is_active\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"rum_application\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"rum_application_update\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"rum_application_update\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Unprocessable Entity.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"rum_application_update\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"rum_application_update\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/applications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"applications",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a list of RUM events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/rum/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"rum",
								"events"
							],
							"query": [
								{
									"key": "filter[query]",
									"value": "<string>",
									"description": "Search query following RUM syntax."
								},
								{
									"key": "filter[from]",
									"value": "<dateTime>",
									"description": "Minimum timestamp for requested events."
								},
								{
									"key": "filter[to]",
									"value": "<dateTime>",
									"description": "Maximum timestamp for requested events."
								},
								{
									"key": "sort",
									"value": "-timestamp",
									"description": "Order of events in results."
								},
								{
									"key": "page[cursor]",
									"value": "<string>",
									"description": "List following results with a cursor provided in the previous query."
								},
								{
									"key": "page[limit]",
									"value": "10",
									"description": "Maximum number of events in the response."
								}
							]
						},
						"description": "List endpoint returns events that match a RUM search query.\n[Results are paginated][1].\n\nUse this endpoint to see your latest RUM events.\n\n[1]: https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following RUM syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"ea___6\": {},\n          \"et15\": {},\n          \"amet_0\": {}\n        },\n        \"service\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"rum\"\n    },\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"dolore_a0\": {},\n          \"officia5\": {}\n        },\n        \"service\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"rum\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"done\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following RUM syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following RUM syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/events?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following RUM syntax."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "Minimum timestamp for requested events."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "Maximum timestamp for requested events."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "Order of events in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of events in the response."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Search RUM events",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/rum/events/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"rum",
								"events",
								"search"
							]
						},
						"description": "List endpoint returns RUM events that match a RUM search query.\n[Results are paginated][1].\n\nUse this endpoint to build complex RUM events filtering and search.\n\n[1]: https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"events",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"ea___6\": {},\n          \"et15\": {},\n          \"amet_0\": {}\n        },\n        \"service\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"rum\"\n    },\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"dolore_a0\": {},\n          \"officia5\": {}\n        },\n        \"service\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"rum\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"done\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"events",
										"search"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"events",
										"search"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"now-15m\",\n    \"query\": \"*\",\n    \"to\": \"now\"\n  },\n  \"options\": {\n    \"time_offset\": \"<long>\",\n    \"timezone\": \"UTC\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"-timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/rum/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"rum",
										"events",
										"search"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Search or aggregate your RUM events over HTTP."
		},
		{
			"name": "Security Monitoring",
			"item": [
				{
					"name": "Get all security filters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"configuration",
								"security_filters"
							]
						},
						"description": "Get the list of configured security filters with their definitions."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"exclusion_filters\": [\n          {\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n          },\n          {\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n          }\n        ],\n        \"filtered_data_type\": \"logs\",\n        \"is_builtin\": \"<boolean>\",\n        \"is_enabled\": \"<boolean>\",\n        \"name\": \"<string>\",\n        \"query\": \"<string>\",\n        \"version\": \"<integer>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"security_filters\"\n    },\n    {\n      \"attributes\": {\n        \"exclusion_filters\": [\n          {\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n          },\n          {\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n          }\n        ],\n        \"filtered_data_type\": \"logs\",\n        \"is_builtin\": \"<boolean>\",\n        \"is_enabled\": \"<boolean>\",\n        \"name\": \"<string>\",\n        \"query\": \"<string>\",\n        \"version\": \"<integer>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"security_filters\"\n    }\n  ],\n  \"meta\": {\n    \"warning\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a security filter",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"security_filters\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_enabled\": \"<boolean>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"configuration",
								"security_filters"
							]
						},
						"description": "Create a security filter.\n\nSee the [security filter guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)\nfor more examples."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"security_filters\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_enabled\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_builtin\": \"<boolean>\",\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"version\": \"<integer>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"security_filters\"\n  },\n  \"meta\": {\n    \"warning\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"security_filters\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_enabled\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"security_filters\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_enabled\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"security_filters\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_enabled\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"security_filters\",\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_enabled\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a security filter",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"configuration",
								"security_filters",
								":security_filter_id"
							],
							"variable": [
								{
									"key": "security_filter_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a specific security filter."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a security filter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"configuration",
								"security_filters",
								":security_filter_id"
							],
							"variable": [
								{
									"key": "security_filter_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get the details of a specific security filter.\n\nSee the [security filter guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)\nfor more examples."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_builtin\": \"<boolean>\",\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"version\": \"<integer>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"security_filters\"\n  },\n  \"meta\": {\n    \"warning\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a security filter",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"security_filters\",\n    \"attributes\": {\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"version\": \"<integer>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"configuration",
								"security_filters",
								":security_filter_id"
							],
							"variable": [
								{
									"key": "security_filter_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a specific security filter.\nReturns the security filter object when the request is successful."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"security_filters\",\n    \"attributes\": {\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"version\": \"<integer>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_builtin\": \"<boolean>\",\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"version\": \"<integer>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"security_filters\"\n  },\n  \"meta\": {\n    \"warning\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"security_filters\",\n    \"attributes\": {\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"version\": \"<integer>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"security_filters\",\n    \"attributes\": {\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"version\": \"<integer>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"security_filters\",\n    \"attributes\": {\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"version\": \"<integer>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Concurrent Modification",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"security_filters\",\n    \"attributes\": {\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"version\": \"<integer>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"security_filters\",\n    \"attributes\": {\n      \"exclusion_filters\": [\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"filtered_data_type\": \"logs\",\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"query\": \"<string>\",\n      \"version\": \"<integer>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/rules?page[size]=10&page[number]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"rules"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page. The maximum allowed value is 100."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								}
							]
						},
						"description": "List rules."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules?page[size]=10&page[number]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"cases\": [\n        {\n          \"condition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"notifications\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"status\": \"medium\"\n        },\n        {\n          \"condition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"notifications\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"status\": \"info\"\n        }\n      ],\n      \"complianceSignalOptions\": {\n        \"defaultActivationStatus\": \"<boolean>\",\n        \"defaultGroupByFields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"userActivationStatus\": \"<boolean>\",\n        \"userGroupByFields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"createdAt\": \"<long>\",\n      \"creationAuthorId\": \"<long>\",\n      \"deprecationDate\": \"<long>\",\n      \"filters\": [\n        {\n          \"action\": \"suppress\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"action\": \"require\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"hasExtendedTitle\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"isDeleted\": \"<boolean>\",\n      \"isEnabled\": \"<boolean>\",\n      \"message\": \"<string>\",\n      \"name\": \"<string>\",\n      \"options\": {\n        \"complianceRuleOptions\": {\n          \"complexRule\": \"<boolean>\",\n          \"regoRule\": {\n            \"policy\": \"<string>\",\n            \"resourceTypes\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"resourceType\": \"<string>\",\n          \"sunt__\": {}\n        },\n        \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n        \"detectionMethod\": \"threshold\",\n        \"evaluationWindow\": 7200,\n        \"hardcodedEvaluatorType\": \"log4shell\",\n        \"impossibleTravelOptions\": {\n          \"baselineUserLocations\": \"<boolean>\"\n        },\n        \"keepAlive\": 60,\n        \"maxSignalDuration\": 60,\n        \"newValueOptions\": {\n          \"forgetAfter\": 14,\n          \"learningDuration\": 0,\n          \"learningMethod\": \"duration\",\n          \"learningThreshold\": 0\n        }\n      },\n      \"queries\": [\n        {\n          \"aggregation\": \"geo_data\",\n          \"distinctFields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"groupByFields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"metric\": \"<string>\",\n          \"metrics\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"aggregation\": \"new_value\",\n          \"distinctFields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"groupByFields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"metric\": \"<string>\",\n          \"metrics\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": \"log_detection\",\n      \"updateAuthorId\": \"<long>\",\n      \"version\": \"<long>\"\n    },\n    {\n      \"cases\": [\n        {\n          \"condition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"notifications\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"status\": \"medium\"\n        },\n        {\n          \"condition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"notifications\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"status\": \"critical\"\n        }\n      ],\n      \"complianceSignalOptions\": {\n        \"defaultActivationStatus\": \"<boolean>\",\n        \"defaultGroupByFields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"userActivationStatus\": \"<boolean>\",\n        \"userGroupByFields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"createdAt\": \"<long>\",\n      \"creationAuthorId\": \"<long>\",\n      \"deprecationDate\": \"<long>\",\n      \"filters\": [\n        {\n          \"action\": \"suppress\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"action\": \"suppress\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"hasExtendedTitle\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"isDeleted\": \"<boolean>\",\n      \"isEnabled\": \"<boolean>\",\n      \"message\": \"<string>\",\n      \"name\": \"<string>\",\n      \"options\": {\n        \"complianceRuleOptions\": {\n          \"complexRule\": \"<boolean>\",\n          \"regoRule\": {\n            \"policy\": \"<string>\",\n            \"resourceTypes\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          \"resourceType\": \"<string>\",\n          \"mollit_4\": {},\n          \"culpa_2\": {}\n        },\n        \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n        \"detectionMethod\": \"hardcoded\",\n        \"evaluationWindow\": 300,\n        \"hardcodedEvaluatorType\": \"log4shell\",\n        \"impossibleTravelOptions\": {\n          \"baselineUserLocations\": \"<boolean>\"\n        },\n        \"keepAlive\": 21600,\n        \"maxSignalDuration\": 10800,\n        \"newValueOptions\": {\n          \"forgetAfter\": 2,\n          \"learningDuration\": 0,\n          \"learningMethod\": \"duration\",\n          \"learningThreshold\": 0\n        }\n      },\n      \"queries\": [\n        {\n          \"aggregation\": \"new_value\",\n          \"distinctFields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"groupByFields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"metric\": \"<string>\",\n          \"metrics\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        },\n        {\n          \"aggregation\": \"geo_data\",\n          \"distinctFields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"groupByFields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"metric\": \"<string>\",\n          \"metrics\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"name\": \"<string>\",\n          \"query\": \"<string>\"\n        }\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": \"infrastructure_configuration\",\n      \"updateAuthorId\": \"<long>\",\n      \"version\": \"<long>\"\n    }\n  ],\n  \"meta\": {\n    \"page\": {\n      \"total_count\": \"<long>\",\n      \"total_filtered_count\": \"<long>\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules?page[size]=10&page[number]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules?page[size]=10&page[number]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a detection rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"isEnabled\": \"<boolean>\",\n  \"queries\": [\n    {\n      \"aggregation\": \"count\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"count\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\",\n      \"incididuntfd5\": {},\n      \"Duis_3_\": {},\n      \"ipsum_965\": {}\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"impossible_travel\",\n    \"evaluationWindow\": 0,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 21600,\n    \"maxSignalDuration\": 21600,\n    \"newValueOptions\": {\n      \"forgetAfter\": 2,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"cases\": [\n    {\n      \"status\": \"critical\",\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"status\": \"low\",\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"message\": \"<string>\",\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"require\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"workload_security\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"rules"
							]
						},
						"description": "Create a detection rule."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"isEnabled\": \"<boolean>\",\n  \"queries\": [\n    {\n      \"aggregation\": \"count\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"count\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\",\n      \"incididuntfd5\": {},\n      \"Duis_3_\": {},\n      \"ipsum_965\": {}\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"impossible_travel\",\n    \"evaluationWindow\": 0,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 21600,\n    \"maxSignalDuration\": 21600,\n    \"newValueOptions\": {\n      \"forgetAfter\": 2,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"cases\": [\n    {\n      \"status\": \"critical\",\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"status\": \"low\",\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"message\": \"<string>\",\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"require\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"workload_security\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"cases\": [\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"medium\"\n    },\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    }\n  ],\n  \"complianceSignalOptions\": {\n    \"defaultActivationStatus\": \"<boolean>\",\n    \"defaultGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"userActivationStatus\": \"<boolean>\",\n    \"userGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"createdAt\": \"<long>\",\n  \"creationAuthorId\": \"<long>\",\n  \"deprecationDate\": \"<long>\",\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"require\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"isDeleted\": \"<boolean>\",\n  \"isEnabled\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\"\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"third_party\",\n    \"evaluationWindow\": 300,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 300,\n    \"maxSignalDuration\": 900,\n    \"newValueOptions\": {\n      \"forgetAfter\": 28,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"queries\": [\n    {\n      \"aggregation\": \"max\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"max\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"application_security\",\n  \"updateAuthorId\": \"<long>\",\n  \"version\": \"<long>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"isEnabled\": \"<boolean>\",\n  \"queries\": [\n    {\n      \"aggregation\": \"count\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"count\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\",\n      \"incididuntfd5\": {},\n      \"Duis_3_\": {},\n      \"ipsum_965\": {}\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"impossible_travel\",\n    \"evaluationWindow\": 0,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 21600,\n    \"maxSignalDuration\": 21600,\n    \"newValueOptions\": {\n      \"forgetAfter\": 2,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"cases\": [\n    {\n      \"status\": \"critical\",\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"status\": \"low\",\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"message\": \"<string>\",\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"require\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"workload_security\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"isEnabled\": \"<boolean>\",\n  \"queries\": [\n    {\n      \"aggregation\": \"count\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"count\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\",\n      \"incididuntfd5\": {},\n      \"Duis_3_\": {},\n      \"ipsum_965\": {}\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"impossible_travel\",\n    \"evaluationWindow\": 0,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 21600,\n    \"maxSignalDuration\": 21600,\n    \"newValueOptions\": {\n      \"forgetAfter\": 2,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"cases\": [\n    {\n      \"status\": \"critical\",\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"status\": \"low\",\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"message\": \"<string>\",\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"require\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"workload_security\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"isEnabled\": \"<boolean>\",\n  \"queries\": [\n    {\n      \"aggregation\": \"count\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"count\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\",\n      \"incididuntfd5\": {},\n      \"Duis_3_\": {},\n      \"ipsum_965\": {}\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"impossible_travel\",\n    \"evaluationWindow\": 0,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 21600,\n    \"maxSignalDuration\": 21600,\n    \"newValueOptions\": {\n      \"forgetAfter\": 2,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"cases\": [\n    {\n      \"status\": \"critical\",\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"status\": \"low\",\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"message\": \"<string>\",\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"require\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"workload_security\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete an existing rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"rules",
								":rule_id"
							],
							"variable": [
								{
									"key": "rule_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete an existing rule. Default rules cannot be deleted."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a rule's details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"rules",
								":rule_id"
							],
							"variable": [
								{
									"key": "rule_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a rule's details."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"cases\": [\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"medium\"\n    },\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    }\n  ],\n  \"complianceSignalOptions\": {\n    \"defaultActivationStatus\": \"<boolean>\",\n    \"defaultGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"userActivationStatus\": \"<boolean>\",\n    \"userGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"createdAt\": \"<long>\",\n  \"creationAuthorId\": \"<long>\",\n  \"deprecationDate\": \"<long>\",\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"require\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"isDeleted\": \"<boolean>\",\n  \"isEnabled\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\"\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"third_party\",\n    \"evaluationWindow\": 300,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 300,\n    \"maxSignalDuration\": 900,\n    \"newValueOptions\": {\n      \"forgetAfter\": 28,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"queries\": [\n    {\n      \"aggregation\": \"max\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"max\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"application_security\",\n  \"updateAuthorId\": \"<long>\",\n  \"version\": \"<long>\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update an existing rule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cases\": [\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    },\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    }\n  ],\n  \"complianceSignalOptions\": {\n    \"defaultActivationStatus\": \"<boolean>\",\n    \"defaultGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"userActivationStatus\": \"<boolean>\",\n    \"userGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"isEnabled\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\",\n      \"nisic3\": {}\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"third_party\",\n    \"evaluationWindow\": 3600,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 10800,\n    \"maxSignalDuration\": 21600,\n    \"newValueOptions\": {\n      \"forgetAfter\": 28,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"queries\": [\n    {\n      \"aggregation\": \"max\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"geo_data\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"rules",
								":rule_id"
							],
							"variable": [
								{
									"key": "rule_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update an existing rule. When updating `cases`, `queries` or `options`, the whole field\nmust be included. For example, when modifying a query all queries must be included.\nDefault rules can only be updated to be enabled and to change notifications."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cases\": [\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    },\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    }\n  ],\n  \"complianceSignalOptions\": {\n    \"defaultActivationStatus\": \"<boolean>\",\n    \"defaultGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"userActivationStatus\": \"<boolean>\",\n    \"userGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"isEnabled\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\",\n      \"nisic3\": {}\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"third_party\",\n    \"evaluationWindow\": 3600,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 10800,\n    \"maxSignalDuration\": 21600,\n    \"newValueOptions\": {\n      \"forgetAfter\": 28,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"queries\": [\n    {\n      \"aggregation\": \"max\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"geo_data\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"cases\": [\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"medium\"\n    },\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    }\n  ],\n  \"complianceSignalOptions\": {\n    \"defaultActivationStatus\": \"<boolean>\",\n    \"defaultGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"userActivationStatus\": \"<boolean>\",\n    \"userGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"createdAt\": \"<long>\",\n  \"creationAuthorId\": \"<long>\",\n  \"deprecationDate\": \"<long>\",\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"require\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"isDeleted\": \"<boolean>\",\n  \"isEnabled\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\"\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"third_party\",\n    \"evaluationWindow\": 300,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 300,\n    \"maxSignalDuration\": 900,\n    \"newValueOptions\": {\n      \"forgetAfter\": 28,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"queries\": [\n    {\n      \"aggregation\": \"max\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"max\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"application_security\",\n  \"updateAuthorId\": \"<long>\",\n  \"version\": \"<long>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cases\": [\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    },\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    }\n  ],\n  \"complianceSignalOptions\": {\n    \"defaultActivationStatus\": \"<boolean>\",\n    \"defaultGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"userActivationStatus\": \"<boolean>\",\n    \"userGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"isEnabled\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\",\n      \"nisic3\": {}\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"third_party\",\n    \"evaluationWindow\": 3600,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 10800,\n    \"maxSignalDuration\": 21600,\n    \"newValueOptions\": {\n      \"forgetAfter\": 28,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"queries\": [\n    {\n      \"aggregation\": \"max\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"geo_data\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Concurrent Modification",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cases\": [\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    },\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    }\n  ],\n  \"complianceSignalOptions\": {\n    \"defaultActivationStatus\": \"<boolean>\",\n    \"defaultGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"userActivationStatus\": \"<boolean>\",\n    \"userGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"isEnabled\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\",\n      \"nisic3\": {}\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"third_party\",\n    \"evaluationWindow\": 3600,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 10800,\n    \"maxSignalDuration\": 21600,\n    \"newValueOptions\": {\n      \"forgetAfter\": 28,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"queries\": [\n    {\n      \"aggregation\": \"max\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"geo_data\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cases\": [\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    },\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    }\n  ],\n  \"complianceSignalOptions\": {\n    \"defaultActivationStatus\": \"<boolean>\",\n    \"defaultGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"userActivationStatus\": \"<boolean>\",\n    \"userGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"isEnabled\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\",\n      \"nisic3\": {}\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"third_party\",\n    \"evaluationWindow\": 3600,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 10800,\n    \"maxSignalDuration\": 21600,\n    \"newValueOptions\": {\n      \"forgetAfter\": 28,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"queries\": [\n    {\n      \"aggregation\": \"max\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"geo_data\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cases\": [\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    },\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    }\n  ],\n  \"complianceSignalOptions\": {\n    \"defaultActivationStatus\": \"<boolean>\",\n    \"defaultGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"userActivationStatus\": \"<boolean>\",\n    \"userGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"isEnabled\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\",\n      \"nisic3\": {}\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"third_party\",\n    \"evaluationWindow\": 3600,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 10800,\n    \"maxSignalDuration\": 21600,\n    \"newValueOptions\": {\n      \"forgetAfter\": 28,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"queries\": [\n    {\n      \"aggregation\": \"max\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"geo_data\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cases\": [\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    },\n    {\n      \"condition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"notifications\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"critical\"\n    }\n  ],\n  \"complianceSignalOptions\": {\n    \"defaultActivationStatus\": \"<boolean>\",\n    \"defaultGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"userActivationStatus\": \"<boolean>\",\n    \"userGroupByFields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": [\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"action\": \"suppress\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"hasExtendedTitle\": \"<boolean>\",\n  \"isEnabled\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": {\n    \"complianceRuleOptions\": {\n      \"complexRule\": \"<boolean>\",\n      \"regoRule\": {\n        \"policy\": \"<string>\",\n        \"resourceTypes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"resourceType\": \"<string>\",\n      \"nisic3\": {}\n    },\n    \"decreaseCriticalityBasedOnEnv\": \"<boolean>\",\n    \"detectionMethod\": \"third_party\",\n    \"evaluationWindow\": 3600,\n    \"hardcodedEvaluatorType\": \"log4shell\",\n    \"impossibleTravelOptions\": {\n      \"baselineUserLocations\": \"<boolean>\"\n    },\n    \"keepAlive\": 10800,\n    \"maxSignalDuration\": 21600,\n    \"newValueOptions\": {\n      \"forgetAfter\": 28,\n      \"learningDuration\": 0,\n      \"learningMethod\": \"duration\",\n      \"learningThreshold\": 0\n    }\n  },\n  \"queries\": [\n    {\n      \"aggregation\": \"max\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    },\n    {\n      \"aggregation\": \"geo_data\",\n      \"distinctFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groupByFields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"metric\": \"<string>\",\n      \"metrics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"name\": \"<string>\",\n      \"query\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a quick list of security signals",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/signals?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"signals"
							],
							"query": [
								{
									"key": "filter[query]",
									"value": "<string>",
									"description": "The search query for security signals."
								},
								{
									"key": "filter[from]",
									"value": "<dateTime>",
									"description": "The minimum timestamp for requested security signals."
								},
								{
									"key": "filter[to]",
									"value": "<dateTime>",
									"description": "The maximum timestamp for requested security signals."
								},
								{
									"key": "sort",
									"value": "-timestamp",
									"description": "The order of the security signals in results."
								},
								{
									"key": "page[cursor]",
									"value": "<string>",
									"description": "A list of results using the cursor provided in the previous query."
								},
								{
									"key": "page[limit]",
									"value": "10",
									"description": "The maximum number of security signals in the response."
								}
							]
						},
						"description": "The list endpoint returns security signals that match a search query.\nBoth this endpoint and the POST endpoint can be used interchangeably when listing\nsecurity signals."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "The search query for security signals."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "The minimum timestamp for requested security signals."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "The maximum timestamp for requested security signals."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "The order of the security signals in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "A list of results using the cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "The maximum number of security signals in the response."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"laboris6b\": {},\n          \"qui_4_\": {},\n          \"sintcb\": {}\n        },\n        \"message\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"signal\"\n    },\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"cillumc\": {},\n          \"ut_75\": {}\n        },\n        \"message\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\",\n        \"sit5\": {}\n      },\n      \"id\": \"<string>\",\n      \"type\": \"signal\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"page\": {\n      \"after\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "The search query for security signals."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "The minimum timestamp for requested security signals."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "The maximum timestamp for requested security signals."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "The order of the security signals in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "A list of results using the cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "The maximum number of security signals in the response."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "The search query for security signals."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "The minimum timestamp for requested security signals."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "The maximum timestamp for requested security signals."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "The order of the security signals in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "A list of results using the cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "The maximum number of security signals in the response."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=-timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "The search query for security signals."
										},
										{
											"key": "filter[from]",
											"value": "<dateTime>",
											"description": "The minimum timestamp for requested security signals."
										},
										{
											"key": "filter[to]",
											"value": "<dateTime>",
											"description": "The maximum timestamp for requested security signals."
										},
										{
											"key": "sort",
											"value": "-timestamp",
											"description": "The order of the security signals in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "A list of results using the cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "The maximum number of security signals in the response."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a list of security signals",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"filter\": {\n    \"from\": \"<dateTime>\",\n    \"query\": \"<string>\",\n    \"to\": \"<dateTime>\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"timestamp\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"signals",
								"search"
							]
						},
						"description": "Returns security signals that match a search query.\nBoth this endpoint and the GET endpoint can be used interchangeably for listing\nsecurity signals."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"<dateTime>\",\n    \"query\": \"<string>\",\n    \"to\": \"<dateTime>\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"laboris6b\": {},\n          \"qui_4_\": {},\n          \"sintcb\": {}\n        },\n        \"message\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"signal\"\n    },\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"cillumc\": {},\n          \"ut_75\": {}\n        },\n        \"message\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"timestamp\": \"<dateTime>\",\n        \"sit5\": {}\n      },\n      \"id\": \"<string>\",\n      \"type\": \"signal\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"page\": {\n      \"after\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"<dateTime>\",\n    \"query\": \"<string>\",\n    \"to\": \"<dateTime>\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										"search"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"<dateTime>\",\n    \"query\": \"<string>\",\n    \"to\": \"<dateTime>\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										"search"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filter\": {\n    \"from\": \"<dateTime>\",\n    \"query\": \"<string>\",\n    \"to\": \"<dateTime>\"\n  },\n  \"page\": {\n    \"cursor\": \"<string>\",\n    \"limit\": 10\n  },\n  \"sort\": \"timestamp\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										"search"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a signal's details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"signals",
								":signal_id"
							],
							"variable": [
								{
									"key": "signal_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a signal's details."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"attributes\": {\n        \"ullamco_7\": {}\n      },\n      \"message\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"timestamp\": \"<dateTime>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"signal\"\n  }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Modify the triage assignee of a security signal",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"assignee\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<long>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/assignee",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"signals",
								":signal_id",
								"assignee"
							],
							"variable": [
								{
									"key": "signal_id",
									"value": "<string>"
								}
							]
						},
						"description": "Modify the triage assignee of a security signal."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"assignee\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/assignee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"assignee"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"assignee\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      \"state\": \"open\",\n      \"incident_ids\": [\n        \"<long>\",\n        \"<long>\"\n      ],\n      \"archive_comment\": \"<string>\",\n      \"archive_comment_timestamp\": \"<long>\",\n      \"archive_comment_user\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      \"archive_reason\": \"other\",\n      \"state_update_timestamp\": \"<long>\",\n      \"state_update_user\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"id\": \"<string>\",\n    \"type\": \"signal_metadata\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"assignee\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/assignee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"assignee"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"assignee\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/assignee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"assignee"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"assignee\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/assignee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"assignee"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"assignee\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/assignee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"assignee"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Change the related incidents of a security signal",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"incident_ids\": [\n        \"<long>\",\n        \"<long>\"\n      ],\n      \"version\": \"<long>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/incidents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"signals",
								":signal_id",
								"incidents"
							],
							"variable": [
								{
									"key": "signal_id",
									"value": "<string>"
								}
							]
						},
						"description": "Change the related incidents for a security signal."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"incident_ids\": [\n        \"<long>\",\n        \"<long>\"\n      ],\n      \"version\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/incidents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"incidents"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"assignee\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      \"state\": \"open\",\n      \"incident_ids\": [\n        \"<long>\",\n        \"<long>\"\n      ],\n      \"archive_comment\": \"<string>\",\n      \"archive_comment_timestamp\": \"<long>\",\n      \"archive_comment_user\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      \"archive_reason\": \"other\",\n      \"state_update_timestamp\": \"<long>\",\n      \"state_update_user\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"id\": \"<string>\",\n    \"type\": \"signal_metadata\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"incident_ids\": [\n        \"<long>\",\n        \"<long>\"\n      ],\n      \"version\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/incidents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"incidents"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"incident_ids\": [\n        \"<long>\",\n        \"<long>\"\n      ],\n      \"version\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/incidents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"incidents"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"incident_ids\": [\n        \"<long>\",\n        \"<long>\"\n      ],\n      \"version\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/incidents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"incidents"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"incident_ids\": [\n        \"<long>\",\n        \"<long>\"\n      ],\n      \"version\": \"<long>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/incidents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"incidents"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Change the triage state of a security signal",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"state\": \"under_review\",\n      \"archive_comment\": \"<string>\",\n      \"archive_reason\": \"none\",\n      \"version\": \"<long>\"\n    },\n    \"id\": {\n      \"description\": \"The unique ID of the security signal.\"\n    },\n    \"type\": \"signal_metadata\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"signals",
								":signal_id",
								"state"
							],
							"variable": [
								{
									"key": "signal_id",
									"value": "<string>"
								}
							]
						},
						"description": "Change the triage state of a security signal."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"state\": \"under_review\",\n      \"archive_comment\": \"<string>\",\n      \"archive_reason\": \"none\",\n      \"version\": \"<long>\"\n    },\n    \"id\": {\n      \"description\": \"The unique ID of the security signal.\"\n    },\n    \"type\": \"signal_metadata\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"state"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"assignee\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      \"state\": \"open\",\n      \"incident_ids\": [\n        \"<long>\",\n        \"<long>\"\n      ],\n      \"archive_comment\": \"<string>\",\n      \"archive_comment_timestamp\": \"<long>\",\n      \"archive_comment_user\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      \"archive_reason\": \"other\",\n      \"state_update_timestamp\": \"<long>\",\n      \"state_update_user\": {\n        \"uuid\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"id\": \"<string>\",\n    \"type\": \"signal_metadata\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"state\": \"under_review\",\n      \"archive_comment\": \"<string>\",\n      \"archive_reason\": \"none\",\n      \"version\": \"<long>\"\n    },\n    \"id\": {\n      \"description\": \"The unique ID of the security signal.\"\n    },\n    \"type\": \"signal_metadata\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"state"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"state\": \"under_review\",\n      \"archive_comment\": \"<string>\",\n      \"archive_reason\": \"none\",\n      \"version\": \"<long>\"\n    },\n    \"id\": {\n      \"description\": \"The unique ID of the security signal.\"\n    },\n    \"type\": \"signal_metadata\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"state"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"state\": \"under_review\",\n      \"archive_comment\": \"<string>\",\n      \"archive_reason\": \"none\",\n      \"version\": \"<long>\"\n    },\n    \"id\": {\n      \"description\": \"The unique ID of the security signal.\"\n    },\n    \"type\": \"signal_metadata\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"state"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"state\": \"under_review\",\n      \"archive_comment\": \"<string>\",\n      \"archive_reason\": \"none\",\n      \"version\": \"<long>\"\n    },\n    \"id\": {\n      \"description\": \"The unique ID of the security signal.\"\n    },\n    \"type\": \"signal_metadata\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/:signal_id/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										":signal_id",
										"state"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a security signal to an incident",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"incident_id\": 2066,\n  \"add_to_signal_timeline\": false,\n  \"version\": 19001465\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/security_analytics/signals/:signal_id/add_to_incident",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"security_analytics",
								"signals",
								":signal_id",
								"add_to_incident"
							],
							"variable": [
								{
									"key": "signal_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Add a security signal to an incident. This makes it possible to search for signals by incident within the signal explorer and to view the signals on the incident timeline."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"incident_id\": 2066,\n  \"add_to_signal_timeline\": false,\n  \"version\": 19001465\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/security_analytics/signals/:signal_id/add_to_incident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"security_analytics",
										"signals",
										":signal_id",
										"add_to_incident"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"conse\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"incident_id\": 2066,\n  \"add_to_signal_timeline\": false,\n  \"version\": 19001465\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/security_analytics/signals/:signal_id/add_to_incident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"security_analytics",
										"signals",
										":signal_id",
										"add_to_incident"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"incident_id\": 2066,\n  \"add_to_signal_timeline\": false,\n  \"version\": 19001465\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/security_analytics/signals/:signal_id/add_to_incident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"security_analytics",
										"signals",
										":signal_id",
										"add_to_incident"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"incident_id\": 2066,\n  \"add_to_signal_timeline\": false,\n  \"version\": 19001465\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/security_analytics/signals/:signal_id/add_to_incident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"security_analytics",
										"signals",
										":signal_id",
										"add_to_incident"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"incident_id\": 2066,\n  \"add_to_signal_timeline\": false,\n  \"version\": 19001465\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/security_analytics/signals/:signal_id/add_to_incident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"security_analytics",
										"signals",
										":signal_id",
										"add_to_incident"
									],
									"variable": [
										{
											"key": "signal_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Detection rules for generating signals and listing of generated\nsignals."
		},
		{
			"name": "Sensitive Data Scanner",
			"item": [
				{
					"name": "List Scanning Groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"sensitive-data-scanner",
								"config"
							]
						},
						"description": "List all the Scanning groups in your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"ametf\": {},\n      \"ead6\": {},\n      \"dolore03e\": {}\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"groups\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_group\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_group\"\n          }\n        ]\n      }\n    },\n    \"type\": \"sensitive_data_scanner_configuration\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"description\": \"<string>\",\n        \"excluded_namespaces\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"is_enabled\": \"<boolean>\",\n        \"name\": \"<string>\",\n        \"namespaces\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"pattern\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"text_replacement\": {\n          \"number_of_chars\": \"<long>\",\n          \"replacement_string\": \"<string>\",\n          \"type\": \"none\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"group\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_group\"\n          }\n        },\n        \"standard_pattern\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_standard_pattern\"\n          }\n        }\n      },\n      \"type\": \"sensitive_data_scanner_rule\"\n    },\n    {\n      \"attributes\": {\n        \"description\": \"<string>\",\n        \"excluded_namespaces\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"is_enabled\": \"<boolean>\",\n        \"name\": \"<string>\",\n        \"namespaces\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"pattern\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"text_replacement\": {\n          \"number_of_chars\": \"<long>\",\n          \"replacement_string\": \"<string>\",\n          \"type\": \"none\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"group\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_group\"\n          }\n        },\n        \"standard_pattern\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_standard_pattern\"\n          }\n        }\n      },\n      \"type\": \"sensitive_data_scanner_rule\"\n    }\n  ],\n  \"meta\": {\n    \"count_limit\": \"<long>\",\n    \"group_count_limit\": \"<long>\",\n    \"has_highlight_enabled\": \"<boolean>\",\n    \"has_multi_pass_enabled\": \"<boolean>\",\n    \"is_pci_compliant\": \"<boolean>\",\n    \"version\": \"<long>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Reorder Groups",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"groups\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_group\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_group\"\n          }\n        ]\n      }\n    },\n    \"type\": \"sensitive_data_scanner_configuration\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"sensitive-data-scanner",
								"config"
							]
						},
						"description": "Reorder the list of groups."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"groups\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_group\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_group\"\n          }\n        ]\n      }\n    },\n    \"type\": \"sensitive_data_scanner_configuration\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"meta\": {\n    \"count_limit\": \"<long>\",\n    \"group_count_limit\": \"<long>\",\n    \"has_highlight_enabled\": \"<boolean>\",\n    \"has_multi_pass_enabled\": \"<boolean>\",\n    \"is_pci_compliant\": \"<boolean>\",\n    \"version\": \"<long>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"groups\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_group\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_group\"\n          }\n        ]\n      }\n    },\n    \"type\": \"sensitive_data_scanner_configuration\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"groups\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_group\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_group\"\n          }\n        ]\n      }\n    },\n    \"type\": \"sensitive_data_scanner_configuration\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"groups\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_group\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_group\"\n          }\n        ]\n      }\n    },\n    \"type\": \"sensitive_data_scanner_configuration\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Scanning Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"sensitive_data_scanner_group\",\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"product_list\": [\n        \"logs\",\n        \"logs\"\n      ]\n    },\n    \"relationships\": {\n      \"configuration\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_configuration\"\n        }\n      },\n      \"rules\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          }\n        ]\n      }\n    }\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"sensitive-data-scanner",
								"config",
								"groups"
							]
						},
						"description": "Create a scanning group.\nThe request MAY include a configuration relationship.\nA rules relationship can be omitted entirely, but if it is included it MUST be\nnull or an empty array (rules cannot be created at the same time).\nThe new group will be ordered last within the configuration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"sensitive_data_scanner_group\",\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"product_list\": [\n        \"logs\",\n        \"logs\"\n      ]\n    },\n    \"relationships\": {\n      \"configuration\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_configuration\"\n        }\n      },\n      \"rules\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          }\n        ]\n      }\n    }\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"groups"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"product_list\": [\n        \"logs\",\n        \"logs\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"configuration\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_configuration\"\n        }\n      },\n      \"rules\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          }\n        ]\n      }\n    },\n    \"type\": \"sensitive_data_scanner_group\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"sensitive_data_scanner_group\",\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"product_list\": [\n        \"logs\",\n        \"logs\"\n      ]\n    },\n    \"relationships\": {\n      \"configuration\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_configuration\"\n        }\n      },\n      \"rules\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          }\n        ]\n      }\n    }\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"groups"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"sensitive_data_scanner_group\",\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"product_list\": [\n        \"logs\",\n        \"logs\"\n      ]\n    },\n    \"relationships\": {\n      \"configuration\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_configuration\"\n        }\n      },\n      \"rules\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          }\n        ]\n      }\n    }\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"groups"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"sensitive_data_scanner_group\",\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"product_list\": [\n        \"logs\",\n        \"logs\"\n      ]\n    },\n    \"relationships\": {\n      \"configuration\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_configuration\"\n        }\n      },\n      \"rules\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          }\n        ]\n      }\n    }\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"groups"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete Scanning Group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups/:group_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"sensitive-data-scanner",
								"config",
								"groups",
								":group_id"
							],
							"variable": [
								{
									"key": "group_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a given group."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update Scanning Group",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"product_list\": [\n        \"logs\",\n        \"logs\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"configuration\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_configuration\"\n        }\n      },\n      \"rules\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          }\n        ]\n      }\n    },\n    \"type\": \"sensitive_data_scanner_group\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups/:group_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"sensitive-data-scanner",
								"config",
								"groups",
								":group_id"
							],
							"variable": [
								{
									"key": "group_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a group, including the order of the rules.\nRules within the group are reordered by including a rules relationship. If the rules\nrelationship is present, its data section MUST contain linkages for all of the rules\ncurrently in the group, and MUST NOT contain any others."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"product_list\": [\n        \"logs\",\n        \"logs\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"configuration\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_configuration\"\n        }\n      },\n      \"rules\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          }\n        ]\n      }\n    },\n    \"type\": \"sensitive_data_scanner_group\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"product_list\": [\n        \"logs\",\n        \"logs\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"configuration\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_configuration\"\n        }\n      },\n      \"rules\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          }\n        ]\n      }\n    },\n    \"type\": \"sensitive_data_scanner_group\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"product_list\": [\n        \"logs\",\n        \"logs\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"configuration\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_configuration\"\n        }\n      },\n      \"rules\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          }\n        ]\n      }\n    },\n    \"type\": \"sensitive_data_scanner_group\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"product_list\": [\n        \"logs\",\n        \"logs\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"configuration\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_configuration\"\n        }\n      },\n      \"rules\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          }\n        ]\n      }\n    },\n    \"type\": \"sensitive_data_scanner_group\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"product_list\": [\n        \"logs\",\n        \"logs\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"configuration\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_configuration\"\n        }\n      },\n      \"rules\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"sensitive_data_scanner_rule\"\n          }\n        ]\n      }\n    },\n    \"type\": \"sensitive_data_scanner_group\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Scanning Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"sensitive_data_scanner_rule\",\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"excluded_namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"pattern\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"text_replacement\": {\n        \"number_of_chars\": \"<long>\",\n        \"replacement_string\": \"<string>\",\n        \"type\": \"none\"\n      }\n    },\n    \"relationships\": {\n      \"group\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_group\"\n        }\n      },\n      \"standard_pattern\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_standard_pattern\"\n        }\n      }\n    }\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"sensitive-data-scanner",
								"config",
								"rules"
							]
						},
						"description": "Create a scanning rule in a sensitive data scanner group, ordered last.\nThe posted rule MUST include a group relationship.\nIt MUST include either a standard_pattern relationship or a regex attribute, but not both.\nIf included_attributes is empty or missing, we will scan all attributes except\nexcluded_attributes. If both are missing, we will scan the whole event."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"sensitive_data_scanner_rule\",\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"excluded_namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"pattern\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"text_replacement\": {\n        \"number_of_chars\": \"<long>\",\n        \"replacement_string\": \"<string>\",\n        \"type\": \"none\"\n      }\n    },\n    \"relationships\": {\n      \"group\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_group\"\n        }\n      },\n      \"standard_pattern\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_standard_pattern\"\n        }\n      }\n    }\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"rules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"excluded_namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"pattern\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"text_replacement\": {\n        \"number_of_chars\": \"<long>\",\n        \"replacement_string\": \"<string>\",\n        \"type\": \"none\"\n      }\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"group\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_group\"\n        }\n      },\n      \"standard_pattern\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_standard_pattern\"\n        }\n      }\n    },\n    \"type\": \"sensitive_data_scanner_rule\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"sensitive_data_scanner_rule\",\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"excluded_namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"pattern\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"text_replacement\": {\n        \"number_of_chars\": \"<long>\",\n        \"replacement_string\": \"<string>\",\n        \"type\": \"none\"\n      }\n    },\n    \"relationships\": {\n      \"group\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_group\"\n        }\n      },\n      \"standard_pattern\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_standard_pattern\"\n        }\n      }\n    }\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"rules"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"sensitive_data_scanner_rule\",\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"excluded_namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"pattern\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"text_replacement\": {\n        \"number_of_chars\": \"<long>\",\n        \"replacement_string\": \"<string>\",\n        \"type\": \"none\"\n      }\n    },\n    \"relationships\": {\n      \"group\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_group\"\n        }\n      },\n      \"standard_pattern\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_standard_pattern\"\n        }\n      }\n    }\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"rules"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"sensitive_data_scanner_rule\",\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"excluded_namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"pattern\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"text_replacement\": {\n        \"number_of_chars\": \"<long>\",\n        \"replacement_string\": \"<string>\",\n        \"type\": \"none\"\n      }\n    },\n    \"relationships\": {\n      \"group\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_group\"\n        }\n      },\n      \"standard_pattern\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_standard_pattern\"\n        }\n      }\n    }\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"rules"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete Scanning Rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules/:rule_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"sensitive-data-scanner",
								"config",
								"rules",
								":rule_id"
							],
							"variable": [
								{
									"key": "rule_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a given rule."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update Scanning Rule",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"excluded_namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"pattern\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"text_replacement\": {\n        \"number_of_chars\": \"<long>\",\n        \"replacement_string\": \"<string>\",\n        \"type\": \"none\"\n      }\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"group\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_group\"\n        }\n      },\n      \"standard_pattern\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_standard_pattern\"\n        }\n      }\n    },\n    \"type\": \"sensitive_data_scanner_rule\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules/:rule_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"sensitive-data-scanner",
								"config",
								"rules",
								":rule_id"
							],
							"variable": [
								{
									"key": "rule_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a scanning rule.\nThe request body MUST NOT include a standard_pattern relationship, as that relationship\nis non-editable. Trying to edit the regex attribute of a rule with a standard_pattern\nrelationship will also result in an error."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"excluded_namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"pattern\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"text_replacement\": {\n        \"number_of_chars\": \"<long>\",\n        \"replacement_string\": \"<string>\",\n        \"type\": \"none\"\n      }\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"group\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_group\"\n        }\n      },\n      \"standard_pattern\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_standard_pattern\"\n        }\n      }\n    },\n    \"type\": \"sensitive_data_scanner_rule\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"excluded_namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"pattern\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"text_replacement\": {\n        \"number_of_chars\": \"<long>\",\n        \"replacement_string\": \"<string>\",\n        \"type\": \"none\"\n      }\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"group\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_group\"\n        }\n      },\n      \"standard_pattern\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_standard_pattern\"\n        }\n      }\n    },\n    \"type\": \"sensitive_data_scanner_rule\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"excluded_namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"pattern\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"text_replacement\": {\n        \"number_of_chars\": \"<long>\",\n        \"replacement_string\": \"<string>\",\n        \"type\": \"none\"\n      }\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"group\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_group\"\n        }\n      },\n      \"standard_pattern\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_standard_pattern\"\n        }\n      }\n    },\n    \"type\": \"sensitive_data_scanner_rule\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"excluded_namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"pattern\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"text_replacement\": {\n        \"number_of_chars\": \"<long>\",\n        \"replacement_string\": \"<string>\",\n        \"type\": \"none\"\n      }\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"group\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_group\"\n        }\n      },\n      \"standard_pattern\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_standard_pattern\"\n        }\n      }\n    },\n    \"type\": \"sensitive_data_scanner_rule\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"description\": \"<string>\",\n      \"excluded_namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_enabled\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"namespaces\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"pattern\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"text_replacement\": {\n        \"number_of_chars\": \"<long>\",\n        \"replacement_string\": \"<string>\",\n        \"type\": \"none\"\n      }\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"group\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_group\"\n        }\n      },\n      \"standard_pattern\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"sensitive_data_scanner_standard_pattern\"\n        }\n      }\n    },\n    \"type\": \"sensitive_data_scanner_rule\"\n  },\n  \"meta\": {\n    \"version\": \"<long>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List standard patterns",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/standard-patterns",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"sensitive-data-scanner",
								"config",
								"standard-patterns"
							]
						},
						"description": "Returns all standard patterns."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/standard-patterns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"standard-patterns"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"description\": \"<string>\",\n        \"name\": \"<string>\",\n        \"pattern\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"sensitive_data_scanner_standard_pattern\"\n    },\n    {\n      \"attributes\": {\n        \"description\": \"<string>\",\n        \"name\": \"<string>\",\n        \"pattern\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"sensitive_data_scanner_standard_pattern\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/standard-patterns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"standard-patterns"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/standard-patterns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"standard-patterns"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/sensitive-data-scanner/config/standard-patterns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"sensitive-data-scanner",
										"config",
										"standard-patterns"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Create, update, delete, and retrieve sensitive data scanner groups and rules."
		},
		{
			"name": "Service Accounts",
			"item": [
				{
					"name": "Create a service account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"email\": \"<string>\",\n      \"service_account\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"relationships\": {\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/service_accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"service_accounts"
							]
						},
						"description": "Create a service account for your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"email\": \"<string>\",\n      \"service_account\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"relationships\": {\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"disabled\": \"<boolean>\",\n      \"email\": \"<string>\",\n      \"handle\": \"<string>\",\n      \"icon\": \"<string>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"service_account\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\",\n      \"verified\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"org\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"orgs\"\n        }\n      },\n      \"other_orgs\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        ]\n      },\n      \"other_users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      },\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    },\n    \"type\": \"users\"\n  },\n  \"included\": [\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"email\": \"<string>\",\n      \"service_account\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"relationships\": {\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"email\": \"<string>\",\n      \"service_account\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"relationships\": {\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"email\": \"<string>\",\n      \"service_account\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"relationships\": {\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List application keys for this service account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"service_accounts",
								":service_account_id",
								"application_keys"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page. The maximum allowed value is 100."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter application keys by the specified string."
								},
								{
									"key": "filter[created_at][start]",
									"value": "<string>",
									"description": "Only include application keys created on or after the specified date."
								},
								{
									"key": "filter[created_at][end]",
									"value": "<string>",
									"description": "Only include application keys created on or before the specified date."
								}
							],
							"variable": [
								{
									"key": "service_account_id",
									"value": "<string>"
								}
							]
						},
						"description": "List all application keys available for this service account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"name\": \"<string>\",\n        \"scopes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"owned_by\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      },\n      \"type\": \"application_keys\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"name\": \"<string>\",\n        \"scopes\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"owned_by\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      },\n      \"type\": \"application_keys\"\n    }\n  ],\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter application keys by the specified string."
										},
										{
											"key": "filter[created_at][start]",
											"value": "<string>",
											"description": "Only include application keys created on or after the specified date."
										},
										{
											"key": "filter[created_at][end]",
											"value": "<string>",
											"description": "Only include application keys created on or before the specified date."
										}
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create an application key for this service account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"application_keys\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"service_accounts",
								":service_account_id",
								"application_keys"
							],
							"variable": [
								{
									"key": "service_account_id",
									"value": "<string>"
								}
							]
						},
						"description": "Create an application key for this service account."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<string>\",\n      \"key\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"owned_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    },\n    \"type\": \"application_keys\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete an application key for this service account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"service_accounts",
								":service_account_id",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "service_account_id",
									"value": "<string>"
								},
								{
									"key": "app_key_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete an application key owned by this service account."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get one application key for this service account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"service_accounts",
								":service_account_id",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "service_account_id",
									"value": "<string>"
								},
								{
									"key": "app_key_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get an application key owned by this service account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"owned_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    },\n    \"type\": \"application_keys\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Edit an application key for this service account",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"service_accounts",
								":service_account_id",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "service_account_id",
									"value": "<string>"
								},
								{
									"key": "app_key_id",
									"value": "<string>"
								}
							]
						},
						"description": "Edit an application key owned by this service account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"owned_by\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    },\n    \"type\": \"application_keys\"\n  },\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"name\": \"<string>\",\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"application_keys\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Create, edit, and disable service accounts."
		},
		{
			"name": "Service Checks",
			"item": [
				{
					"name": "Submit a Service Check",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "text/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"check\": \"app.ok\",\n    \"status\": 0,\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"host_name\": \"app.host1\",\n    \"message\": \"app is running\",\n    \"timestamp\": 12636800\n  },\n  {\n    \"check\": \"app.ok\",\n    \"status\": 0,\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"host_name\": \"app.host1\",\n    \"message\": \"app is running\",\n    \"timestamp\": -99255440\n  }\n]",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/check_run",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"check_run"
							]
						},
						"description": "Submit a list of Service Checks.\n\n**Notes**:\n- A valid API key is required.\n- Service checks can be submitted up to 10 minutes in the past."
					},
					"response": [
						{
							"name": "Payload accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"check\": \"app.ok\",\n    \"status\": 0,\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"host_name\": \"app.host1\",\n    \"message\": \"app is running\",\n    \"timestamp\": 12636800\n  },\n  {\n    \"check\": \"app.ok\",\n    \"status\": 0,\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"host_name\": \"app.host1\",\n    \"message\": \"app is running\",\n    \"timestamp\": -99255440\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/check_run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"check_run"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"ok\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"check\": \"app.ok\",\n    \"status\": 0,\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"host_name\": \"app.host1\",\n    \"message\": \"app is running\",\n    \"timestamp\": 12636800\n  },\n  {\n    \"check\": \"app.ok\",\n    \"status\": 0,\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"host_name\": \"app.host1\",\n    \"message\": \"app is running\",\n    \"timestamp\": -99255440\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/check_run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"check_run"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"check\": \"app.ok\",\n    \"status\": 0,\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"host_name\": \"app.host1\",\n    \"message\": \"app is running\",\n    \"timestamp\": 12636800\n  },\n  {\n    \"check\": \"app.ok\",\n    \"status\": 0,\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"host_name\": \"app.host1\",\n    \"message\": \"app is running\",\n    \"timestamp\": -99255440\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/check_run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"check_run"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Request timeout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"check\": \"app.ok\",\n    \"status\": 0,\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"host_name\": \"app.host1\",\n    \"message\": \"app is running\",\n    \"timestamp\": 12636800\n  },\n  {\n    \"check\": \"app.ok\",\n    \"status\": 0,\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"host_name\": \"app.host1\",\n    \"message\": \"app is running\",\n    \"timestamp\": -99255440\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/check_run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"check_run"
									]
								}
							},
							"status": "Request Timeout",
							"code": 408,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Payload too large",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"check\": \"app.ok\",\n    \"status\": 0,\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"host_name\": \"app.host1\",\n    \"message\": \"app is running\",\n    \"timestamp\": 12636800\n  },\n  {\n    \"check\": \"app.ok\",\n    \"status\": 0,\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"host_name\": \"app.host1\",\n    \"message\": \"app is running\",\n    \"timestamp\": -99255440\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/check_run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"check_run"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"check\": \"app.ok\",\n    \"status\": 0,\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"host_name\": \"app.host1\",\n    \"message\": \"app is running\",\n    \"timestamp\": 12636800\n  },\n  {\n    \"check\": \"app.ok\",\n    \"status\": 0,\n    \"tags\": [\n      \"environment:test\"\n    ],\n    \"host_name\": \"app.host1\",\n    \"message\": \"app is running\",\n    \"timestamp\": -99255440\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/check_run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"check_run"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "The service check endpoint allows you to post check statuses for use with monitors.\nService check messages are limited to 500 characters. If a check is posted with a message\ncontaining more than 500 characters, only the first 500 characters are displayed. Messages\nare limited for checks with a Critical or Warning status, they are dropped for checks with\nan OK status.\n\n- [Read more about Service Check monitors.][1]\n- [Read more about Process Check monitors.][2]\n- [Read more about Network Check monitors.][3]\n- [Read more about Custom Check monitors.][4]\n- [Read more about Service Check and status codes.][5]\n\n[1]: https://docs.datadoghq.com/monitors/create/types/host/?tab=checkalert\n[2]: https://docs.datadoghq.com/monitors/create/types/process_check/?tab=checkalert\n[3]: https://docs.datadoghq.com/monitors/create/types/network/?tab=checkalert\n[4]: https://docs.datadoghq.com/monitors/create/types/custom_check/?tab=checkalert\n[5]: https://docs.datadoghq.com/developers/service_checks/"
		},
		{
			"name": "Service Definition",
			"item": [
				{
					"name": "Get all service definitions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/services/definitions?page[size]=10&page[number]=0&schema_version=v1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"services",
								"definitions"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page. The maximum allowed value is 100."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "schema_version",
									"value": "v1",
									"description": "The schema version desired in the response."
								}
							]
						},
						"description": "Get a list of all service definitions from the Datadog Service Catalog."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions?page[size]=10&page[number]=0&schema_version=v1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "schema_version",
											"value": "v1",
											"description": "The schema version desired in the response."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"meta\": {\n          \"github-html-url\": \"<string>\",\n          \"ingested-schema-version\": \"<string>\",\n          \"ingestion-source\": \"<string>\",\n          \"last-modified-time\": \"<string>\",\n          \"origin\": \"<string>\",\n          \"origin-detail\": \"<string>\",\n          \"warnings\": [\n            {\n              \"instance-location\": \"<string>\",\n              \"keyword-location\": \"<string>\",\n              \"message\": \"<string>\"\n            },\n            {\n              \"instance-location\": \"<string>\",\n              \"keyword-location\": \"<string>\",\n              \"message\": \"<string>\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"schema-version\": \"v1\",\n          \"info\": {\n            \"dd-service\": \"<string>\",\n            \"description\": \"<string>\",\n            \"display-name\": \"<string>\",\n            \"service-tier\": \"<string>\"\n          },\n          \"contact\": {\n            \"email\": \"<email>\",\n            \"slack\": \"<string>\"\n          },\n          \"extensions\": {\n            \"ut_a\": {},\n            \"consequat_894\": {}\n          },\n          \"external-resources\": [\n            {\n              \"name\": \"<string>\",\n              \"type\": \"url\",\n              \"url\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"type\": \"repo\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"integrations\": {\n            \"pagerduty\": \"<string>\"\n          },\n          \"org\": {\n            \"application\": \"<string>\",\n            \"team\": \"<string>\"\n          },\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"attributes\": {\n        \"meta\": {\n          \"github-html-url\": \"<string>\",\n          \"ingested-schema-version\": \"<string>\",\n          \"ingestion-source\": \"<string>\",\n          \"last-modified-time\": \"<string>\",\n          \"origin\": \"<string>\",\n          \"origin-detail\": \"<string>\",\n          \"warnings\": [\n            {\n              \"instance-location\": \"<string>\",\n              \"keyword-location\": \"<string>\",\n              \"message\": \"<string>\"\n            },\n            {\n              \"instance-location\": \"<string>\",\n              \"keyword-location\": \"<string>\",\n              \"message\": \"<string>\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"schema-version\": \"v1\",\n          \"info\": {\n            \"dd-service\": \"<string>\",\n            \"description\": \"<string>\",\n            \"display-name\": \"<string>\",\n            \"service-tier\": \"<string>\"\n          },\n          \"contact\": {\n            \"email\": \"<email>\",\n            \"slack\": \"<string>\"\n          },\n          \"extensions\": {\n            \"dolor1_9\": {},\n            \"ea_7c\": {},\n            \"consequat_a\": {}\n          },\n          \"external-resources\": [\n            {\n              \"name\": \"<string>\",\n              \"type\": \"oncall\",\n              \"url\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"type\": \"code\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"integrations\": {\n            \"pagerduty\": \"<string>\"\n          },\n          \"org\": {\n            \"application\": \"<string>\",\n            \"team\": \"<string>\"\n          },\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions?page[size]=10&page[number]=0&schema_version=v1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "schema_version",
											"value": "v1",
											"description": "The schema version desired in the response."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions?page[size]=10&page[number]=0&schema_version=v1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "schema_version",
											"value": "v1",
											"description": "The schema version desired in the response."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create or update service definition",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"schema-version\": \"v2.1\",\n  \"dd-service\": \"<string>\",\n  \"application\": \"<string>\",\n  \"contacts\": [\n    {\n      \"type\": \"email\",\n      \"contact\": \"<email>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"email\",\n      \"contact\": \"<email>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"extensions\": {\n    \"qui_6\": {}\n  },\n  \"integrations\": {\n    \"opsgenie\": {\n      \"service-url\": \"<string>\",\n      \"region\": \"US\"\n    },\n    \"pagerduty\": {\n      \"service-url\": \"<string>\"\n    }\n  },\n  \"lifecycle\": \"<string>\",\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"repo\",\n      \"url\": \"<string>\",\n      \"provider\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"runbook\",\n      \"url\": \"<string>\",\n      \"provider\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"team\": \"<string>\",\n  \"tier\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/services/definitions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"services",
								"definitions"
							]
						},
						"description": "Create or update service definition in the Datadog Service Catalog."
					},
					"response": [
						{
							"name": "CREATED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"schema-version\": \"v2.1\",\n  \"dd-service\": \"<string>\",\n  \"application\": \"<string>\",\n  \"contacts\": [\n    {\n      \"type\": \"email\",\n      \"contact\": \"<email>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"email\",\n      \"contact\": \"<email>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"extensions\": {\n    \"qui_6\": {}\n  },\n  \"integrations\": {\n    \"opsgenie\": {\n      \"service-url\": \"<string>\",\n      \"region\": \"US\"\n    },\n    \"pagerduty\": {\n      \"service-url\": \"<string>\"\n    }\n  },\n  \"lifecycle\": \"<string>\",\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"repo\",\n      \"url\": \"<string>\",\n      \"provider\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"runbook\",\n      \"url\": \"<string>\",\n      \"provider\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"team\": \"<string>\",\n  \"tier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"meta\": {\n          \"github-html-url\": \"<string>\",\n          \"ingested-schema-version\": \"<string>\",\n          \"ingestion-source\": \"<string>\",\n          \"last-modified-time\": \"<string>\",\n          \"origin\": \"<string>\",\n          \"origin-detail\": \"<string>\",\n          \"warnings\": [\n            {\n              \"instance-location\": \"<string>\",\n              \"keyword-location\": \"<string>\",\n              \"message\": \"<string>\"\n            },\n            {\n              \"instance-location\": \"<string>\",\n              \"keyword-location\": \"<string>\",\n              \"message\": \"<string>\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"schema-version\": \"v1\",\n          \"info\": {\n            \"dd-service\": \"<string>\",\n            \"description\": \"<string>\",\n            \"display-name\": \"<string>\",\n            \"service-tier\": \"<string>\"\n          },\n          \"contact\": {\n            \"email\": \"<email>\",\n            \"slack\": \"<string>\"\n          },\n          \"extensions\": {\n            \"Excepteur__84\": {},\n            \"sit6cc\": {}\n          },\n          \"external-resources\": [\n            {\n              \"name\": \"<string>\",\n              \"type\": \"wiki\",\n              \"url\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"type\": \"dashboard\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"integrations\": {\n            \"pagerduty\": \"<string>\"\n          },\n          \"org\": {\n            \"application\": \"<string>\",\n            \"team\": \"<string>\"\n          },\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"attributes\": {\n        \"meta\": {\n          \"github-html-url\": \"<string>\",\n          \"ingested-schema-version\": \"<string>\",\n          \"ingestion-source\": \"<string>\",\n          \"last-modified-time\": \"<string>\",\n          \"origin\": \"<string>\",\n          \"origin-detail\": \"<string>\",\n          \"warnings\": [\n            {\n              \"instance-location\": \"<string>\",\n              \"keyword-location\": \"<string>\",\n              \"message\": \"<string>\"\n            },\n            {\n              \"instance-location\": \"<string>\",\n              \"keyword-location\": \"<string>\",\n              \"message\": \"<string>\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"schema-version\": \"v1\",\n          \"info\": {\n            \"dd-service\": \"<string>\",\n            \"description\": \"<string>\",\n            \"display-name\": \"<string>\",\n            \"service-tier\": \"<string>\"\n          },\n          \"contact\": {\n            \"email\": \"<email>\",\n            \"slack\": \"<string>\"\n          },\n          \"extensions\": {\n            \"laboris_99d\": {},\n            \"ad_7d0\": {}\n          },\n          \"external-resources\": [\n            {\n              \"name\": \"<string>\",\n              \"type\": \"repo\",\n              \"url\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"type\": \"url\",\n              \"url\": \"<string>\"\n            }\n          ],\n          \"integrations\": {\n            \"pagerduty\": \"<string>\"\n          },\n          \"org\": {\n            \"application\": \"<string>\",\n            \"team\": \"<string>\"\n          },\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"schema-version\": \"v2.1\",\n  \"dd-service\": \"<string>\",\n  \"application\": \"<string>\",\n  \"contacts\": [\n    {\n      \"type\": \"email\",\n      \"contact\": \"<email>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"email\",\n      \"contact\": \"<email>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"extensions\": {\n    \"qui_6\": {}\n  },\n  \"integrations\": {\n    \"opsgenie\": {\n      \"service-url\": \"<string>\",\n      \"region\": \"US\"\n    },\n    \"pagerduty\": {\n      \"service-url\": \"<string>\"\n    }\n  },\n  \"lifecycle\": \"<string>\",\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"repo\",\n      \"url\": \"<string>\",\n      \"provider\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"runbook\",\n      \"url\": \"<string>\",\n      \"provider\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"team\": \"<string>\",\n  \"tier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"schema-version\": \"v2.1\",\n  \"dd-service\": \"<string>\",\n  \"application\": \"<string>\",\n  \"contacts\": [\n    {\n      \"type\": \"email\",\n      \"contact\": \"<email>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"email\",\n      \"contact\": \"<email>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"extensions\": {\n    \"qui_6\": {}\n  },\n  \"integrations\": {\n    \"opsgenie\": {\n      \"service-url\": \"<string>\",\n      \"region\": \"US\"\n    },\n    \"pagerduty\": {\n      \"service-url\": \"<string>\"\n    }\n  },\n  \"lifecycle\": \"<string>\",\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"repo\",\n      \"url\": \"<string>\",\n      \"provider\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"runbook\",\n      \"url\": \"<string>\",\n      \"provider\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"team\": \"<string>\",\n  \"tier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"schema-version\": \"v2.1\",\n  \"dd-service\": \"<string>\",\n  \"application\": \"<string>\",\n  \"contacts\": [\n    {\n      \"type\": \"email\",\n      \"contact\": \"<email>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"email\",\n      \"contact\": \"<email>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"extensions\": {\n    \"qui_6\": {}\n  },\n  \"integrations\": {\n    \"opsgenie\": {\n      \"service-url\": \"<string>\",\n      \"region\": \"US\"\n    },\n    \"pagerduty\": {\n      \"service-url\": \"<string>\"\n    }\n  },\n  \"lifecycle\": \"<string>\",\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"repo\",\n      \"url\": \"<string>\",\n      \"provider\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"runbook\",\n      \"url\": \"<string>\",\n      \"provider\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"team\": \"<string>\",\n  \"tier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"schema-version\": \"v2.1\",\n  \"dd-service\": \"<string>\",\n  \"application\": \"<string>\",\n  \"contacts\": [\n    {\n      \"type\": \"email\",\n      \"contact\": \"<email>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"email\",\n      \"contact\": \"<email>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"extensions\": {\n    \"qui_6\": {}\n  },\n  \"integrations\": {\n    \"opsgenie\": {\n      \"service-url\": \"<string>\",\n      \"region\": \"US\"\n    },\n    \"pagerduty\": {\n      \"service-url\": \"<string>\"\n    }\n  },\n  \"lifecycle\": \"<string>\",\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"repo\",\n      \"url\": \"<string>\",\n      \"provider\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"runbook\",\n      \"url\": \"<string>\",\n      \"provider\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"team\": \"<string>\",\n  \"tier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a single service definition",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/services/definitions/:service_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"services",
								"definitions",
								":service_name"
							],
							"variable": [
								{
									"key": "service_name",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a single service definition in the Datadog Service Catalog."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a single service definition",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/services/definitions/:service_name?schema_version=v1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"services",
								"definitions",
								":service_name"
							],
							"query": [
								{
									"key": "schema_version",
									"value": "v1",
									"description": "The schema version desired in the response."
								}
							],
							"variable": [
								{
									"key": "service_name",
									"value": "<string>"
								}
							]
						},
						"description": "Get a single service definition from the Datadog Service Catalog."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions/:service_name?schema_version=v1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions",
										":service_name"
									],
									"query": [
										{
											"key": "schema_version",
											"value": "v1",
											"description": "The schema version desired in the response."
										}
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"meta\": {\n        \"github-html-url\": \"<string>\",\n        \"ingested-schema-version\": \"<string>\",\n        \"ingestion-source\": \"<string>\",\n        \"last-modified-time\": \"<string>\",\n        \"origin\": \"<string>\",\n        \"origin-detail\": \"<string>\",\n        \"warnings\": [\n          {\n            \"instance-location\": \"<string>\",\n            \"keyword-location\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          {\n            \"instance-location\": \"<string>\",\n            \"keyword-location\": \"<string>\",\n            \"message\": \"<string>\"\n          }\n        ]\n      },\n      \"schema\": {\n        \"schema-version\": \"v1\",\n        \"info\": {\n          \"dd-service\": \"<string>\",\n          \"description\": \"<string>\",\n          \"display-name\": \"<string>\",\n          \"service-tier\": \"<string>\"\n        },\n        \"contact\": {\n          \"email\": \"<email>\",\n          \"slack\": \"<string>\"\n        },\n        \"extensions\": {\n          \"iruree76\": {},\n          \"aliqua_0\": {},\n          \"ad_3\": {}\n        },\n        \"external-resources\": [\n          {\n            \"name\": \"<string>\",\n            \"type\": \"code\",\n            \"url\": \"<string>\"\n          },\n          {\n            \"name\": \"<string>\",\n            \"type\": \"repo\",\n            \"url\": \"<string>\"\n          }\n        ],\n        \"integrations\": {\n          \"pagerduty\": \"<string>\"\n        },\n        \"org\": {\n          \"application\": \"<string>\",\n          \"team\": \"<string>\"\n        },\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"id\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions/:service_name?schema_version=v1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions",
										":service_name"
									],
									"query": [
										{
											"key": "schema_version",
											"value": "v1",
											"description": "The schema version desired in the response."
										}
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions/:service_name?schema_version=v1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions",
										":service_name"
									],
									"query": [
										{
											"key": "schema_version",
											"value": "v1",
											"description": "The schema version desired in the response."
										}
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions/:service_name?schema_version=v1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions",
										":service_name"
									],
									"query": [
										{
											"key": "schema_version",
											"value": "v1",
											"description": "The schema version desired in the response."
										}
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions/:service_name?schema_version=v1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions",
										":service_name"
									],
									"query": [
										{
											"key": "schema_version",
											"value": "v1",
											"description": "The schema version desired in the response."
										}
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/definitions/:service_name?schema_version=v1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										"definitions",
										":service_name"
									],
									"query": [
										{
											"key": "schema_version",
											"value": "v1",
											"description": "The schema version desired in the response."
										}
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "API to create, update, retrieve and delete service definitions."
		},
		{
			"name": "Service Level Objective Corrections",
			"item": [
				{
					"name": "Get all SLO corrections",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/correction?offset=-62147425&limit=-62147425",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"correction"
							],
							"query": [
								{
									"key": "offset",
									"value": "-62147425",
									"description": "The specific offset to use as the beginning of the returned response."
								},
								{
									"key": "limit",
									"value": "-62147425",
									"description": "The number of SLO corrections to return in the response. Default is 25."
								}
							]
						},
						"description": "Get all Service Level Objective corrections."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction?offset=-62147425&limit=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction"
									],
									"query": [
										{
											"key": "offset",
											"value": "-62147425",
											"description": "The specific offset to use as the beginning of the returned response."
										},
										{
											"key": "limit",
											"value": "-62147425",
											"description": "The number of SLO corrections to return in the response. Default is 25."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"category\": \"Scheduled Maintenance\",\n        \"created_at\": -74919575,\n        \"creator\": {\n          \"email\": \"ex veniam\",\n          \"handle\": \"velit\",\n          \"name\": \"voluptate in sit veniam Lorem\"\n        },\n        \"description\": \"veniam laboris\",\n        \"duration\": 3600,\n        \"end\": -8908818,\n        \"modified_at\": 5115488,\n        \"modifier\": {\n          \"email\": \"sit consequat\",\n          \"handle\": \"magna irure consequat\",\n          \"name\": \"labore aliquip consequat fugiat\"\n        },\n        \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n        \"slo_id\": \"labore commodo\",\n        \"start\": 6104289,\n        \"timezone\": \"consectetur fugiat elit laborum deserunt\"\n      },\n      \"id\": \"anim\",\n      \"type\": \"correction\"\n    },\n    {\n      \"attributes\": {\n        \"category\": \"Scheduled Maintenance\",\n        \"created_at\": -50145390,\n        \"creator\": {\n          \"email\": \"aliquip amet\",\n          \"handle\": \"amet ex\",\n          \"name\": \"sed non proident\"\n        },\n        \"description\": \"laborum reprehenderit\",\n        \"duration\": 3600,\n        \"end\": -50463285,\n        \"modified_at\": -64168623,\n        \"modifier\": {\n          \"email\": \"in minim s\",\n          \"handle\": \"id aliqua\",\n          \"name\": \"officia do fugiat\"\n        },\n        \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n        \"slo_id\": \"sit nost\",\n        \"start\": 47690351,\n        \"timezone\": \"consequat ipsum quis ut\"\n      },\n      \"id\": \"incididunt eiusmod id\",\n      \"type\": \"correction\"\n    }\n  ],\n  \"meta\": {\n    \"page\": {\n      \"total_count\": -1541220,\n      \"total_filtered_count\": -20550176\n    }\n  }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction?offset=-62147425&limit=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction"
									],
									"query": [
										{
											"key": "offset",
											"value": "-62147425",
											"description": "The specific offset to use as the beginning of the returned response."
										},
										{
											"key": "limit",
											"value": "-62147425",
											"description": "The number of SLO corrections to return in the response. Default is 25."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction?offset=-62147425&limit=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction"
									],
									"query": [
										{
											"key": "offset",
											"value": "-62147425",
											"description": "The specific offset to use as the beginning of the returned response."
										},
										{
											"key": "limit",
											"value": "-62147425",
											"description": "The number of SLO corrections to return in the response. Default is 25."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create an SLO correction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"correction\",\n    \"attributes\": {\n      \"slo_id\": \"sloId\",\n      \"start\": 1600000000,\n      \"category\": \"Scheduled Maintenance\",\n      \"description\": \"reprehend\",\n      \"duration\": 1600000000,\n      \"end\": 1600000000,\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"timezone\": \"UTC\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/correction",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"correction"
							]
						},
						"description": "Create an SLO Correction."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"correction\",\n    \"attributes\": {\n      \"slo_id\": \"sloId\",\n      \"start\": 1600000000,\n      \"category\": \"Scheduled Maintenance\",\n      \"description\": \"reprehend\",\n      \"duration\": 1600000000,\n      \"end\": 1600000000,\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"timezone\": \"UTC\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"category\": \"Scheduled Maintenance\",\n      \"created_at\": 11806311,\n      \"creator\": {\n        \"email\": \"dolor nisi\",\n        \"handle\": \"la\",\n        \"name\": \"in quis est cillum\"\n      },\n      \"description\": \"nostrud amet ea exercitation\",\n      \"duration\": 3600,\n      \"end\": 30790629,\n      \"modified_at\": 77538107,\n      \"modifier\": {\n        \"email\": \"pariatur nisi minim reprehenderit\",\n        \"handle\": \"irure commodo\",\n        \"name\": \"veniam\"\n      },\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"slo_id\": \"incididunt qui velit sunt labore\",\n      \"start\": -34398281,\n      \"timezone\": \"eu id\"\n    },\n    \"id\": \"enim qui\",\n    \"type\": \"correction\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"correction\",\n    \"attributes\": {\n      \"slo_id\": \"sloId\",\n      \"start\": 1600000000,\n      \"category\": \"Scheduled Maintenance\",\n      \"description\": \"reprehend\",\n      \"duration\": 1600000000,\n      \"end\": 1600000000,\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"timezone\": \"UTC\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"correction\",\n    \"attributes\": {\n      \"slo_id\": \"sloId\",\n      \"start\": 1600000000,\n      \"category\": \"Scheduled Maintenance\",\n      \"description\": \"reprehend\",\n      \"duration\": 1600000000,\n      \"end\": 1600000000,\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"timezone\": \"UTC\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "SLO Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"correction\",\n    \"attributes\": {\n      \"slo_id\": \"sloId\",\n      \"start\": 1600000000,\n      \"category\": \"Scheduled Maintenance\",\n      \"description\": \"reprehend\",\n      \"duration\": 1600000000,\n      \"end\": 1600000000,\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"timezone\": \"UTC\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"correction\",\n    \"attributes\": {\n      \"slo_id\": \"sloId\",\n      \"start\": 1600000000,\n      \"category\": \"Scheduled Maintenance\",\n      \"description\": \"reprehend\",\n      \"duration\": 1600000000,\n      \"end\": 1600000000,\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"timezone\": \"UTC\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete an SLO correction",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"correction",
								":slo_correction_id"
							],
							"variable": [
								{
									"key": "slo_correction_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Permanently delete the specified SLO correction object."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get an SLO correction for an SLO",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"correction",
								":slo_correction_id"
							],
							"variable": [
								{
									"key": "slo_correction_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get an SLO correction."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"category\": \"Scheduled Maintenance\",\n      \"created_at\": 11806311,\n      \"creator\": {\n        \"email\": \"dolor nisi\",\n        \"handle\": \"la\",\n        \"name\": \"in quis est cillum\"\n      },\n      \"description\": \"nostrud amet ea exercitation\",\n      \"duration\": 3600,\n      \"end\": 30790629,\n      \"modified_at\": 77538107,\n      \"modifier\": {\n        \"email\": \"pariatur nisi minim reprehenderit\",\n        \"handle\": \"irure commodo\",\n        \"name\": \"veniam\"\n      },\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"slo_id\": \"incididunt qui velit sunt labore\",\n      \"start\": -34398281,\n      \"timezone\": \"eu id\"\n    },\n    \"id\": \"enim qui\",\n    \"type\": \"correction\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update an SLO correction",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"category\": \"Scheduled Maintenance\",\n      \"description\": \"nisi \",\n      \"duration\": 3600,\n      \"end\": 1600000000,\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"start\": 1600000000,\n      \"timezone\": \"UTC\"\n    },\n    \"type\": \"correction\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"correction",
								":slo_correction_id"
							],
							"variable": [
								{
									"key": "slo_correction_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Update the specified SLO correction object."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"category\": \"Scheduled Maintenance\",\n      \"description\": \"nisi \",\n      \"duration\": 3600,\n      \"end\": 1600000000,\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"start\": 1600000000,\n      \"timezone\": \"UTC\"\n    },\n    \"type\": \"correction\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"category\": \"Scheduled Maintenance\",\n      \"created_at\": 11806311,\n      \"creator\": {\n        \"email\": \"dolor nisi\",\n        \"handle\": \"la\",\n        \"name\": \"in quis est cillum\"\n      },\n      \"description\": \"nostrud amet ea exercitation\",\n      \"duration\": 3600,\n      \"end\": 30790629,\n      \"modified_at\": 77538107,\n      \"modifier\": {\n        \"email\": \"pariatur nisi minim reprehenderit\",\n        \"handle\": \"irure commodo\",\n        \"name\": \"veniam\"\n      },\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"slo_id\": \"incididunt qui velit sunt labore\",\n      \"start\": -34398281,\n      \"timezone\": \"eu id\"\n    },\n    \"id\": \"enim qui\",\n    \"type\": \"correction\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"category\": \"Scheduled Maintenance\",\n      \"description\": \"nisi \",\n      \"duration\": 3600,\n      \"end\": 1600000000,\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"start\": 1600000000,\n      \"timezone\": \"UTC\"\n    },\n    \"type\": \"correction\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"category\": \"Scheduled Maintenance\",\n      \"description\": \"nisi \",\n      \"duration\": 3600,\n      \"end\": 1600000000,\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"start\": 1600000000,\n      \"timezone\": \"UTC\"\n    },\n    \"type\": \"correction\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"category\": \"Scheduled Maintenance\",\n      \"description\": \"nisi \",\n      \"duration\": 3600,\n      \"end\": 1600000000,\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"start\": 1600000000,\n      \"timezone\": \"UTC\"\n    },\n    \"type\": \"correction\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"category\": \"Scheduled Maintenance\",\n      \"description\": \"nisi \",\n      \"duration\": 3600,\n      \"end\": 1600000000,\n      \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n      \"start\": 1600000000,\n      \"timezone\": \"UTC\"\n    },\n    \"type\": \"correction\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "SLO Status Corrections allow you to prevent specific time periods from negatively impacting\nyour SLO’s status and error budget. You can use Status Corrections for various purposes, such\nas removing planned maintenance windows, non-business hours, or other time periods that do\nnot correspond to genuine issues."
		},
		{
			"name": "Service Level Objectives",
			"item": [
				{
					"name": "Get all SLOs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo?ids=id1, id2, id3&query=monitor&tags_query=env:prod&metrics_query=aws.elb.request_count&limit=-62147425&offset=-62147425",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo"
							],
							"query": [
								{
									"key": "ids",
									"value": "id1, id2, id3",
									"description": "A comma separated list of the IDs of the service level objectives objects."
								},
								{
									"key": "query",
									"value": "monitor",
									"description": "The query string to filter results based on SLO names."
								},
								{
									"key": "tags_query",
									"value": "env:prod",
									"description": "The query string to filter results based on a single SLO tag."
								},
								{
									"key": "metrics_query",
									"value": "aws.elb.request_count",
									"description": "The query string to filter results based on SLO numerator and denominator."
								},
								{
									"key": "limit",
									"value": "-62147425",
									"description": "The number of SLOs to return in the response."
								},
								{
									"key": "offset",
									"value": "-62147425",
									"description": "The specific offset to use as the beginning of the returned response."
								}
							]
						},
						"description": "Get a list of service level objective objects for your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo?ids=id1, id2, id3&query=monitor&tags_query=env:prod&metrics_query=aws.elb.request_count&limit=-62147425&offset=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3",
											"description": "A comma separated list of the IDs of the service level objectives objects."
										},
										{
											"key": "query",
											"value": "monitor",
											"description": "The query string to filter results based on SLO names."
										},
										{
											"key": "tags_query",
											"value": "env:prod",
											"description": "The query string to filter results based on a single SLO tag."
										},
										{
											"key": "metrics_query",
											"value": "aws.elb.request_count",
											"description": "The query string to filter results based on SLO numerator and denominator."
										},
										{
											"key": "limit",
											"value": "-62147425",
											"description": "The number of SLOs to return in the response."
										},
										{
											"key": "offset",
											"value": "-62147425",
											"description": "The specific offset to use as the beginning of the returned response."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"name\": \"Custom Metric SLO\",\n      \"thresholds\": [\n        {\n          \"target\": 95,\n          \"timeframe\": \"7d\"\n        },\n        {\n          \"target\": 95,\n          \"timeframe\": \"30d\",\n          \"warning\": 97\n        }\n      ],\n      \"type\": \"metric\",\n      \"created_at\": -94400396,\n      \"creator\": {\n        \"email\": \"esse ullamco\",\n        \"handle\": \"pariatur irure sit non\",\n        \"name\": \"in proident laborum\"\n      },\n      \"description\": \"est proident magna reprehenderit\",\n      \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n      ],\n      \"id\": \"ipsum laboris consequat\",\n      \"modified_at\": -34908193,\n      \"monitor_ids\": [\n        35412081,\n        -51315393\n      ],\n      \"monitor_tags\": [\n        \"voluptate adipisicing fugiat elit\",\n        \"reprehenderit et nostrud pariatur Excepteur\"\n      ],\n      \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n      },\n      \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n      ],\n      \"target_threshold\": 99.9,\n      \"timeframe\": \"30d\",\n      \"warning_threshold\": 99.95\n    },\n    {\n      \"name\": \"Custom Metric SLO\",\n      \"thresholds\": [\n        {\n          \"target\": 95,\n          \"timeframe\": \"7d\"\n        },\n        {\n          \"target\": 95,\n          \"timeframe\": \"30d\",\n          \"warning\": 97\n        }\n      ],\n      \"type\": \"metric\",\n      \"created_at\": -83055437,\n      \"creator\": {\n        \"email\": \"exercitation\",\n        \"handle\": \"commodo aute incididunt ut\",\n        \"name\": \"Lorem dolor irure\"\n      },\n      \"description\": \"do nostrud ex sit\",\n      \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n      ],\n      \"id\": \"ut elit commodo\",\n      \"modified_at\": -65512371,\n      \"monitor_ids\": [\n        70922825,\n        -10561601\n      ],\n      \"monitor_tags\": [\n        \"laborum aliqua proident\",\n        \"ullamco cillum ea consectetur\"\n      ],\n      \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n      },\n      \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n      ],\n      \"target_threshold\": 99.9,\n      \"timeframe\": \"30d\",\n      \"warning_threshold\": 99.95\n    }\n  ],\n  \"errors\": [\n    \"deserunt in fugiat\",\n    \"proident\"\n  ],\n  \"metadata\": {\n    \"page\": {\n      \"total_count\": 69715777,\n      \"total_filtered_count\": -16033264\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo?ids=id1, id2, id3&query=monitor&tags_query=env:prod&metrics_query=aws.elb.request_count&limit=-62147425&offset=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3",
											"description": "A comma separated list of the IDs of the service level objectives objects."
										},
										{
											"key": "query",
											"value": "monitor",
											"description": "The query string to filter results based on SLO names."
										},
										{
											"key": "tags_query",
											"value": "env:prod",
											"description": "The query string to filter results based on a single SLO tag."
										},
										{
											"key": "metrics_query",
											"value": "aws.elb.request_count",
											"description": "The query string to filter results based on SLO numerator and denominator."
										},
										{
											"key": "limit",
											"value": "-62147425",
											"description": "The number of SLOs to return in the response."
										},
										{
											"key": "offset",
											"value": "-62147425",
											"description": "The specific offset to use as the beginning of the returned response."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo?ids=id1, id2, id3&query=monitor&tags_query=env:prod&metrics_query=aws.elb.request_count&limit=-62147425&offset=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3",
											"description": "A comma separated list of the IDs of the service level objectives objects."
										},
										{
											"key": "query",
											"value": "monitor",
											"description": "The query string to filter results based on SLO names."
										},
										{
											"key": "tags_query",
											"value": "env:prod",
											"description": "The query string to filter results based on a single SLO tag."
										},
										{
											"key": "metrics_query",
											"value": "aws.elb.request_count",
											"description": "The query string to filter results based on SLO numerator and denominator."
										},
										{
											"key": "limit",
											"value": "-62147425",
											"description": "The number of SLOs to return in the response."
										},
										{
											"key": "offset",
											"value": "-62147425",
											"description": "The specific offset to use as the beginning of the returned response."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo?ids=id1, id2, id3&query=monitor&tags_query=env:prod&metrics_query=aws.elb.request_count&limit=-62147425&offset=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3",
											"description": "A comma separated list of the IDs of the service level objectives objects."
										},
										{
											"key": "query",
											"value": "monitor",
											"description": "The query string to filter results based on SLO names."
										},
										{
											"key": "tags_query",
											"value": "env:prod",
											"description": "The query string to filter results based on a single SLO tag."
										},
										{
											"key": "metrics_query",
											"value": "aws.elb.request_count",
											"description": "The query string to filter results based on SLO numerator and denominator."
										},
										{
											"key": "limit",
											"value": "-62147425",
											"description": "The number of SLOs to return in the response."
										},
										{
											"key": "offset",
											"value": "-62147425",
											"description": "The specific offset to use as the beginning of the returned response."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo?ids=id1, id2, id3&query=monitor&tags_query=env:prod&metrics_query=aws.elb.request_count&limit=-62147425&offset=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3",
											"description": "A comma separated list of the IDs of the service level objectives objects."
										},
										{
											"key": "query",
											"value": "monitor",
											"description": "The query string to filter results based on SLO names."
										},
										{
											"key": "tags_query",
											"value": "env:prod",
											"description": "The query string to filter results based on a single SLO tag."
										},
										{
											"key": "metrics_query",
											"value": "aws.elb.request_count",
											"description": "The query string to filter results based on SLO numerator and denominator."
										},
										{
											"key": "limit",
											"value": "-62147425",
											"description": "The number of SLOs to return in the response."
										},
										{
											"key": "offset",
											"value": "-62147425",
											"description": "The specific offset to use as the beginning of the returned response."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create an SLO object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Custom Metric SLO\",\n  \"thresholds\": [\n    {\n      \"target\": 95,\n      \"timeframe\": \"7d\"\n    },\n    {\n      \"target\": 95,\n      \"timeframe\": \"30d\",\n      \"warning\": 97\n    }\n  ],\n  \"type\": \"metric\",\n  \"description\": \"non et\",\n  \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n  ],\n  \"monitor_ids\": [\n    19441105,\n    -6429790\n  ],\n  \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n  },\n  \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n  ],\n  \"target_threshold\": 99.9,\n  \"timeframe\": \"30d\",\n  \"warning_threshold\": 99.95\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo"
							]
						},
						"description": "Create a service level objective object."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Custom Metric SLO\",\n  \"thresholds\": [\n    {\n      \"target\": 95,\n      \"timeframe\": \"7d\"\n    },\n    {\n      \"target\": 95,\n      \"timeframe\": \"30d\",\n      \"warning\": 97\n    }\n  ],\n  \"type\": \"metric\",\n  \"description\": \"non et\",\n  \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n  ],\n  \"monitor_ids\": [\n    19441105,\n    -6429790\n  ],\n  \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n  },\n  \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n  ],\n  \"target_threshold\": 99.9,\n  \"timeframe\": \"30d\",\n  \"warning_threshold\": 99.95\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"name\": \"Custom Metric SLO\",\n      \"thresholds\": [\n        {\n          \"target\": 95,\n          \"timeframe\": \"7d\"\n        },\n        {\n          \"target\": 95,\n          \"timeframe\": \"30d\",\n          \"warning\": 97\n        }\n      ],\n      \"type\": \"metric\",\n      \"created_at\": -94400396,\n      \"creator\": {\n        \"email\": \"esse ullamco\",\n        \"handle\": \"pariatur irure sit non\",\n        \"name\": \"in proident laborum\"\n      },\n      \"description\": \"est proident magna reprehenderit\",\n      \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n      ],\n      \"id\": \"ipsum laboris consequat\",\n      \"modified_at\": -34908193,\n      \"monitor_ids\": [\n        35412081,\n        -51315393\n      ],\n      \"monitor_tags\": [\n        \"voluptate adipisicing fugiat elit\",\n        \"reprehenderit et nostrud pariatur Excepteur\"\n      ],\n      \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n      },\n      \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n      ],\n      \"target_threshold\": 99.9,\n      \"timeframe\": \"30d\",\n      \"warning_threshold\": 99.95\n    },\n    {\n      \"name\": \"Custom Metric SLO\",\n      \"thresholds\": [\n        {\n          \"target\": 95,\n          \"timeframe\": \"7d\"\n        },\n        {\n          \"target\": 95,\n          \"timeframe\": \"30d\",\n          \"warning\": 97\n        }\n      ],\n      \"type\": \"metric\",\n      \"created_at\": -83055437,\n      \"creator\": {\n        \"email\": \"exercitation\",\n        \"handle\": \"commodo aute incididunt ut\",\n        \"name\": \"Lorem dolor irure\"\n      },\n      \"description\": \"do nostrud ex sit\",\n      \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n      ],\n      \"id\": \"ut elit commodo\",\n      \"modified_at\": -65512371,\n      \"monitor_ids\": [\n        70922825,\n        -10561601\n      ],\n      \"monitor_tags\": [\n        \"laborum aliqua proident\",\n        \"ullamco cillum ea consectetur\"\n      ],\n      \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n      },\n      \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n      ],\n      \"target_threshold\": 99.9,\n      \"timeframe\": \"30d\",\n      \"warning_threshold\": 99.95\n    }\n  ],\n  \"errors\": [\n    \"deserunt in fugiat\",\n    \"proident\"\n  ],\n  \"metadata\": {\n    \"page\": {\n      \"total_count\": 69715777,\n      \"total_filtered_count\": -16033264\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Custom Metric SLO\",\n  \"thresholds\": [\n    {\n      \"target\": 95,\n      \"timeframe\": \"7d\"\n    },\n    {\n      \"target\": 95,\n      \"timeframe\": \"30d\",\n      \"warning\": 97\n    }\n  ],\n  \"type\": \"metric\",\n  \"description\": \"non et\",\n  \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n  ],\n  \"monitor_ids\": [\n    19441105,\n    -6429790\n  ],\n  \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n  },\n  \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n  ],\n  \"target_threshold\": 99.9,\n  \"timeframe\": \"30d\",\n  \"warning_threshold\": 99.95\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Custom Metric SLO\",\n  \"thresholds\": [\n    {\n      \"target\": 95,\n      \"timeframe\": \"7d\"\n    },\n    {\n      \"target\": 95,\n      \"timeframe\": \"30d\",\n      \"warning\": 97\n    }\n  ],\n  \"type\": \"metric\",\n  \"description\": \"non et\",\n  \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n  ],\n  \"monitor_ids\": [\n    19441105,\n    -6429790\n  ],\n  \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n  },\n  \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n  ],\n  \"target_threshold\": 99.9,\n  \"timeframe\": \"30d\",\n  \"warning_threshold\": 99.95\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Custom Metric SLO\",\n  \"thresholds\": [\n    {\n      \"target\": 95,\n      \"timeframe\": \"7d\"\n    },\n    {\n      \"target\": 95,\n      \"timeframe\": \"30d\",\n      \"warning\": 97\n    }\n  ],\n  \"type\": \"metric\",\n  \"description\": \"non et\",\n  \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n  ],\n  \"monitor_ids\": [\n    19441105,\n    -6429790\n  ],\n  \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n  },\n  \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n  ],\n  \"target_threshold\": 99.9,\n  \"timeframe\": \"30d\",\n  \"warning_threshold\": 99.95\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Bulk Delete SLO Timeframes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id1\": [\n    \"7d\",\n    \"30d\"\n  ],\n  \"id2\": [\n    \"7d\",\n    \"30d\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/bulk_delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"bulk_delete"
							]
						},
						"description": "Delete (or partially delete) multiple service level objective objects.\n\nThis endpoint facilitates deletion of one or more thresholds for one or more\nservice level objective objects. If all thresholds are deleted, the service level\nobjective object is deleted as well."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id1\": [\n    \"7d\",\n    \"30d\"\n  ],\n  \"id2\": [\n    \"7d\",\n    \"30d\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/bulk_delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"bulk_delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"deleted\": [\n      \"aliqua aute sit in\",\n      \"mollit sit magna\"\n    ],\n    \"updated\": [\n      \"nisi eiusmod\",\n      \"elit adipisicing\"\n    ]\n  },\n  \"errors\": [\n    {\n      \"id\": \"\",\n      \"timeframe\": \"30d\",\n      \"message\": \"\"\n    },\n    {\n      \"id\": \"\",\n      \"timeframe\": \"30d\",\n      \"message\": \"\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id1\": [\n    \"7d\",\n    \"30d\"\n  ],\n  \"id2\": [\n    \"7d\",\n    \"30d\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/bulk_delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"bulk_delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id1\": [\n    \"7d\",\n    \"30d\"\n  ],\n  \"id2\": [\n    \"7d\",\n    \"30d\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/bulk_delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"bulk_delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id1\": [\n    \"7d\",\n    \"30d\"\n  ],\n  \"id2\": [\n    \"7d\",\n    \"30d\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/bulk_delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"bulk_delete"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Check if SLOs can be safely deleted",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/can_delete?ids=id1, id2, id3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"can_delete"
							],
							"query": [
								{
									"key": "ids",
									"value": "id1, id2, id3",
									"description": "(Required) A comma separated list of the IDs of the service level objectives objects."
								}
							]
						},
						"description": "Check if an SLO can be safely deleted. For example,\nassure an SLO can be deleted without disrupting a dashboard."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/can_delete?ids=id1, id2, id3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"can_delete"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3",
											"description": "(Required) A comma separated list of the IDs of the service level objectives objects."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"ok\": [\n      \"amet eu culpa\",\n      \"consequat quis magna a\"\n    ]\n  },\n  \"errors\": {\n    \"incididunt60\": \"est Lorem\",\n    \"in_ea\": \"cillum ad sit\",\n    \"nisi_f17\": \"occaecat anim adi\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/can_delete?ids=id1, id2, id3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"can_delete"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3",
											"description": "(Required) A comma separated list of the IDs of the service level objectives objects."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/can_delete?ids=id1, id2, id3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"can_delete"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3",
											"description": "(Required) A comma separated list of the IDs of the service level objectives objects."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/can_delete?ids=id1, id2, id3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"can_delete"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3",
											"description": "(Required) A comma separated list of the IDs of the service level objectives objects."
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"ok\": [\n      \"amet eu culpa\",\n      \"consequat quis magna a\"\n    ]\n  },\n  \"errors\": {\n    \"incididunt60\": \"est Lorem\",\n    \"in_ea\": \"cillum ad sit\",\n    \"nisi_f17\": \"occaecat anim adi\"\n  }\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/can_delete?ids=id1, id2, id3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"can_delete"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3",
											"description": "(Required) A comma separated list of the IDs of the service level objectives objects."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Search for SLOs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/search?query=tempor Ut sed velit&page[size]=-62147425&page[number]=-62147425&include_facets=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "tempor Ut sed velit",
									"description": "The query string to filter results based on SLO names.\nSome examples of queries include `service:<service-name>`\nand `<slo-name>`."
								},
								{
									"key": "page[size]",
									"value": "-62147425",
									"description": "The number of files to return in the response `[default=10]`."
								},
								{
									"key": "page[number]",
									"value": "-62147425",
									"description": "The identifier of the first page to return. This parameter is used for the pagination feature `[default=0]`."
								},
								{
									"key": "include_facets",
									"value": "true",
									"description": "Whether or not to return facet information in the response `[default=false]`."
								}
							]
						},
						"description": "Get a list of service level objective objects for your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/search?query=tempor Ut sed velit&page[size]=-62147425&page[number]=-62147425&include_facets=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "The query string to filter results based on SLO names.\nSome examples of queries include `service:<service-name>`\nand `<slo-name>`."
										},
										{
											"key": "page[size]",
											"value": "-62147425",
											"description": "The number of files to return in the response `[default=10]`."
										},
										{
											"key": "page[number]",
											"value": "-62147425",
											"description": "The identifier of the first page to return. This parameter is used for the pagination feature `[default=0]`."
										},
										{
											"key": "include_facets",
											"value": "true",
											"description": "Whether or not to return facet information in the response `[default=false]`."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"facets\": {\n        \"all_tags\": [\n          {\n            \"count\": -8530751,\n            \"name\": \"est cillum id ex\"\n          },\n          {\n            \"count\": 20390494,\n            \"name\": \"adipisicing minim quis velit dolore\"\n          }\n        ],\n        \"creator_name\": [\n          {\n            \"count\": 77247452,\n            \"name\": \"cupidatat elit eu id aute\"\n          },\n          {\n            \"count\": -77371710,\n            \"name\": \"dolore\"\n          }\n        ],\n        \"env_tags\": [\n          {\n            \"count\": -42199690,\n            \"name\": \"dolor eiusmod\"\n          },\n          {\n            \"count\": -60615528,\n            \"name\": \"commodo mollit\"\n          }\n        ],\n        \"service_tags\": [\n          {\n            \"count\": 49217615,\n            \"name\": \"aute cupidatat\"\n          },\n          {\n            \"count\": 77659232,\n            \"name\": \"est Ut aute\"\n          }\n        ],\n        \"slo_type\": [\n          {\n            \"count\": 55153641,\n            \"name\": 41482978.922150195\n          },\n          {\n            \"count\": 11427450,\n            \"name\": 85748817.01266047\n          }\n        ],\n        \"target\": [\n          {\n            \"count\": 96778717,\n            \"name\": -37511597.68983867\n          },\n          {\n            \"count\": 15549994,\n            \"name\": 30406993.57594505\n          }\n        ],\n        \"team_tags\": [\n          {\n            \"count\": -61109884,\n            \"name\": \"laborum ex esse proident\"\n          },\n          {\n            \"count\": 68412080,\n            \"name\": \"nisi qui cillum exercitation\"\n          }\n        ],\n        \"timeframe\": [\n          {\n            \"count\": -21958451,\n            \"name\": \"fugiat\"\n          },\n          {\n            \"count\": 12824105,\n            \"name\": \"tempor adipisi\"\n          }\n        ]\n      },\n      \"slos\": [\n        {\n          \"data\": {\n            \"attributes\": {\n              \"all_tags\": [\n                \"env:prod\",\n                \"app:core\"\n              ],\n              \"created_at\": 2857983,\n              \"creator\": {\n                \"email\": \"non Lorem\",\n                \"id\": 39288042,\n                \"name\": \"voluptate\"\n              },\n              \"description\": \"fugiat sit in quis\",\n              \"env_tags\": [\n                \"irure tempor\",\n                \"laborum reprehenderi\"\n              ],\n              \"groups\": [\n                \"env:prod\",\n                \"role:mysql\"\n              ],\n              \"modified_at\": -85796945,\n              \"monitor_ids\": [\n                99205206,\n                23793820\n              ],\n              \"name\": \"Custom Metric SLO\",\n              \"overall_status\": [\n                {\n                  \"error\": \"occaecat dolore\",\n                  \"error_budget_remaining\": 100,\n                  \"indexed_at\": 1662496260,\n                  \"raw_error_budget_remaining\": {\n                    \"unit\": \"requests\",\n                    \"value\": 60\n                  },\n                  \"span_precision\": 2,\n                  \"state\": \"ok\",\n                  \"status\": 100,\n                  \"target\": 99,\n                  \"timeframe\": \"30d\"\n                },\n                {\n                  \"error\": \"in officia\",\n                  \"error_budget_remaining\": 100,\n                  \"indexed_at\": 1662496260,\n                  \"raw_error_budget_remaining\": {\n                    \"unit\": \"requests\",\n                    \"value\": 60\n                  },\n                  \"span_precision\": 2,\n                  \"state\": \"ok\",\n                  \"status\": 100,\n                  \"target\": 99,\n                  \"timeframe\": \"30d\"\n                }\n              ],\n              \"query\": {\n                \"denominator\": \"sum:my.custom.metric{*}.as_count()\",\n                \"metrics\": [\n                  \"my.custom.metric\",\n                  \"my.other.custom.metric\"\n                ],\n                \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\"\n              },\n              \"service_tags\": [\n                \"aute amet dolor pariatur mollit\",\n                \"officia\"\n              ],\n              \"slo_type\": \"metric\",\n              \"status\": {\n                \"calculation_error\": \"qui\",\n                \"error_budget_remaining\": 100,\n                \"indexed_at\": 1662496260,\n                \"raw_error_budget_remaining\": {\n                  \"unit\": \"requests\",\n                  \"value\": 60\n                },\n                \"sli\": 100,\n                \"span_precision\": 2,\n                \"state\": \"ok\"\n              },\n              \"team_tags\": [\n                \"quis veniam magna\",\n                \"ad\"\n              ],\n              \"thresholds\": [\n                {\n                  \"target\": 95,\n                  \"target_display\": \"95\",\n                  \"timeframe\": \"7d\"\n                },\n                {\n                  \"target\": 95,\n                  \"target_display\": \"95\",\n                  \"timeframe\": \"30d\",\n                  \"warning\": 97,\n                  \"warning_display\": \"97\"\n                }\n              ]\n            },\n            \"id\": \"sed fugiat est cillum\",\n            \"type\": \"mollit dolore\"\n          }\n        },\n        {\n          \"data\": {\n            \"attributes\": {\n              \"all_tags\": [\n                \"env:prod\",\n                \"app:core\"\n              ],\n              \"created_at\": -97407922,\n              \"creator\": {\n                \"email\": \"in nulla\",\n                \"id\": -4202515,\n                \"name\": \"elit et consequat\"\n              },\n              \"description\": \"dolor sed cupidatat pariatur sint\",\n              \"env_tags\": [\n                \"magna ex pariatur dolore sed\",\n                \"velit dolor aute in nostrud\"\n              ],\n              \"groups\": [\n                \"env:prod\",\n                \"role:mysql\"\n              ],\n              \"modified_at\": -32142227,\n              \"monitor_ids\": [\n                83809238,\n                -63596037\n              ],\n              \"name\": \"Custom Metric SLO\",\n              \"overall_status\": [\n                {\n                  \"error\": \"reprehenderit cupidat\",\n                  \"error_budget_remaining\": 100,\n                  \"indexed_at\": 1662496260,\n                  \"raw_error_budget_remaining\": {\n                    \"unit\": \"requests\",\n                    \"value\": 60\n                  },\n                  \"span_precision\": 2,\n                  \"state\": \"ok\",\n                  \"status\": 100,\n                  \"target\": 99,\n                  \"timeframe\": \"30d\"\n                },\n                {\n                  \"error\": \"consequat\",\n                  \"error_budget_remaining\": 100,\n                  \"indexed_at\": 1662496260,\n                  \"raw_error_budget_remaining\": {\n                    \"unit\": \"requests\",\n                    \"value\": 60\n                  },\n                  \"span_precision\": 2,\n                  \"state\": \"ok\",\n                  \"status\": 100,\n                  \"target\": 99,\n                  \"timeframe\": \"30d\"\n                }\n              ],\n              \"query\": {\n                \"denominator\": \"sum:my.custom.metric{*}.as_count()\",\n                \"metrics\": [\n                  \"my.custom.metric\",\n                  \"my.other.custom.metric\"\n                ],\n                \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\"\n              },\n              \"service_tags\": [\n                \"magna velit\",\n                \"occaecat tempor proident ex ea\"\n              ],\n              \"slo_type\": \"metric\",\n              \"status\": {\n                \"calculation_error\": \"in occaecat e\",\n                \"error_budget_remaining\": 100,\n                \"indexed_at\": 1662496260,\n                \"raw_error_budget_remaining\": {\n                  \"unit\": \"requests\",\n                  \"value\": 60\n                },\n                \"sli\": 100,\n                \"span_precision\": 2,\n                \"state\": \"ok\"\n              },\n              \"team_tags\": [\n                \"Ut nisi ipsum fugiat\",\n                \"exercitation proident consequat aute\"\n              ],\n              \"thresholds\": [\n                {\n                  \"target\": 95,\n                  \"target_display\": \"95\",\n                  \"timeframe\": \"7d\"\n                },\n                {\n                  \"target\": 95,\n                  \"target_display\": \"95\",\n                  \"timeframe\": \"30d\",\n                  \"warning\": 97,\n                  \"warning_display\": \"97\"\n                }\n              ]\n            },\n            \"id\": \"et sit commodo\",\n            \"type\": \"Lorem ut quis\"\n          }\n        }\n      ]\n    },\n    \"type\": \"\"\n  },\n  \"links\": {\n    \"first\": \"voluptate veniam aliqua ea enim\",\n    \"last\": \"non cupidatat amet dolore et\",\n    \"next\": \"reprehenderit ex anim Lorem\",\n    \"prev\": \"aute ex\",\n    \"self\": \"deserunt\"\n  },\n  \"meta\": {\n    \"pagination\": {\n      \"first_number\": 71439942,\n      \"last_number\": -13516974,\n      \"next_number\": -42474877,\n      \"number\": 60934593,\n      \"prev_number\": -25990176,\n      \"size\": -54076764,\n      \"total\": 58951452,\n      \"type\": \"deserunt et voluptate\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/search?query=tempor Ut sed velit&page[size]=-62147425&page[number]=-62147425&include_facets=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "The query string to filter results based on SLO names.\nSome examples of queries include `service:<service-name>`\nand `<slo-name>`."
										},
										{
											"key": "page[size]",
											"value": "-62147425",
											"description": "The number of files to return in the response `[default=10]`."
										},
										{
											"key": "page[number]",
											"value": "-62147425",
											"description": "The identifier of the first page to return. This parameter is used for the pagination feature `[default=0]`."
										},
										{
											"key": "include_facets",
											"value": "true",
											"description": "Whether or not to return facet information in the response `[default=false]`."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/search?query=tempor Ut sed velit&page[size]=-62147425&page[number]=-62147425&include_facets=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "The query string to filter results based on SLO names.\nSome examples of queries include `service:<service-name>`\nand `<slo-name>`."
										},
										{
											"key": "page[size]",
											"value": "-62147425",
											"description": "The number of files to return in the response `[default=10]`."
										},
										{
											"key": "page[number]",
											"value": "-62147425",
											"description": "The identifier of the first page to return. This parameter is used for the pagination feature `[default=0]`."
										},
										{
											"key": "include_facets",
											"value": "true",
											"description": "Whether or not to return facet information in the response `[default=false]`."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/search?query=tempor Ut sed velit&page[size]=-62147425&page[number]=-62147425&include_facets=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "tempor Ut sed velit",
											"description": "The query string to filter results based on SLO names.\nSome examples of queries include `service:<service-name>`\nand `<slo-name>`."
										},
										{
											"key": "page[size]",
											"value": "-62147425",
											"description": "The number of files to return in the response `[default=10]`."
										},
										{
											"key": "page[number]",
											"value": "-62147425",
											"description": "The identifier of the first page to return. This parameter is used for the pagination feature `[default=0]`."
										},
										{
											"key": "include_facets",
											"value": "true",
											"description": "Whether or not to return facet information in the response `[default=false]`."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete an SLO",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/:slo_id?force=tempor Ut sed velit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								":slo_id"
							],
							"query": [
								{
									"key": "force",
									"value": "tempor Ut sed velit",
									"description": "Delete the monitor even if it's referenced by other resources (for example SLO, composite monitor)."
								}
							],
							"variable": [
								{
									"key": "slo_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Permanently delete the specified service level objective object.\n\nIf an SLO is used in a dashboard, the `DELETE /v1/slo/` endpoint returns\na 409 conflict error because the SLO is referenced in a dashboard."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?force=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "force",
											"value": "tempor Ut sed velit",
											"description": "Delete the monitor even if it's referenced by other resources (for example SLO, composite monitor)."
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    \"consequat dolor\",\n    \"mollit dolore veniam\"\n  ],\n  \"errors\": {\n    \"sitd8\": \"esse ullamco\",\n    \"sit_5\": \"eu laborum nisi culpa\",\n    \"amet_1\": \"ullamco Ut aliqua commodo\",\n    \"dolor_a4\": \"in\"\n  }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?force=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "force",
											"value": "tempor Ut sed velit",
											"description": "Delete the monitor even if it's referenced by other resources (for example SLO, composite monitor)."
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?force=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "force",
											"value": "tempor Ut sed velit",
											"description": "Delete the monitor even if it's referenced by other resources (for example SLO, composite monitor)."
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?force=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "force",
											"value": "tempor Ut sed velit",
											"description": "Delete the monitor even if it's referenced by other resources (for example SLO, composite monitor)."
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    \"consequat dolor\",\n    \"mollit dolore veniam\"\n  ],\n  \"errors\": {\n    \"sitd8\": \"esse ullamco\",\n    \"sit_5\": \"eu laborum nisi culpa\",\n    \"amet_1\": \"ullamco Ut aliqua commodo\",\n    \"dolor_a4\": \"in\"\n  }\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?force=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "force",
											"value": "tempor Ut sed velit",
											"description": "Delete the monitor even if it's referenced by other resources (for example SLO, composite monitor)."
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get an SLO's details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/:slo_id?with_configured_alert_ids=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								":slo_id"
							],
							"query": [
								{
									"key": "with_configured_alert_ids",
									"value": "true",
									"description": "Get the IDs of SLO monitors that reference this SLO."
								}
							],
							"variable": [
								{
									"key": "slo_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get a service level objective object."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?with_configured_alert_ids=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "with_configured_alert_ids",
											"value": "true",
											"description": "Get the IDs of SLO monitors that reference this SLO."
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"configured_alert_ids\": [\n      123,\n      456,\n      789\n    ],\n    \"created_at\": 17466638,\n    \"creator\": {\n      \"email\": \"proident ex ullamco\",\n      \"handle\": \"laborum ad ex non\",\n      \"name\": \"officia dolor consectetur nisi\"\n    },\n    \"description\": \"est id\",\n    \"groups\": [\n      \"env:prod\",\n      \"role:mysql\"\n    ],\n    \"id\": \"esse cillum anim \",\n    \"modified_at\": -26273532,\n    \"monitor_ids\": [\n      -91642399,\n      93741\n    ],\n    \"monitor_tags\": [\n      \"aliquip nulla Lorem ut\",\n      \"reprehenderit velit\"\n    ],\n    \"name\": \"Custom Metric SLO\",\n    \"query\": {\n      \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n      \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n    },\n    \"tags\": [\n      \"env:prod\",\n      \"app:core\"\n    ],\n    \"target_threshold\": 99.9,\n    \"thresholds\": [\n      {\n        \"target\": 95,\n        \"timeframe\": \"7d\"\n      },\n      {\n        \"target\": 95,\n        \"timeframe\": \"30d\",\n        \"warning\": 97\n      }\n    ],\n    \"timeframe\": \"30d\",\n    \"type\": \"metric\",\n    \"warning_threshold\": 99.95\n  },\n  \"errors\": [\n    \"consectetur velit\",\n    \"elit in\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?with_configured_alert_ids=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "with_configured_alert_ids",
											"value": "true",
											"description": "Get the IDs of SLO monitors that reference this SLO."
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?with_configured_alert_ids=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "with_configured_alert_ids",
											"value": "true",
											"description": "Get the IDs of SLO monitors that reference this SLO."
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?with_configured_alert_ids=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "with_configured_alert_ids",
											"value": "true",
											"description": "Get the IDs of SLO monitors that reference this SLO."
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update an SLO",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Custom Metric SLO\",\n  \"thresholds\": [\n    {\n      \"target\": 95,\n      \"timeframe\": \"7d\"\n    },\n    {\n      \"target\": 95,\n      \"timeframe\": \"30d\",\n      \"warning\": 97\n    }\n  ],\n  \"type\": \"metric\",\n  \"created_at\": -99964498,\n  \"creator\": {\n    \"email\": \"nostrud aliqua dolore adipisicing\",\n    \"handle\": \"esse ad\",\n    \"name\": \"est\"\n  },\n  \"description\": \"adipisicing est quis ipsum\",\n  \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n  ],\n  \"id\": \"nostrud officia\",\n  \"modified_at\": -83338646,\n  \"monitor_ids\": [\n    -42604664,\n    -6863832\n  ],\n  \"monitor_tags\": [\n    \"sint\",\n    \"cillum nisi ipsum\"\n  ],\n  \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n  },\n  \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n  ],\n  \"target_threshold\": 99.9,\n  \"timeframe\": \"30d\",\n  \"warning_threshold\": 99.95\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/:slo_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								":slo_id"
							],
							"variable": [
								{
									"key": "slo_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Update the specified service level objective object."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Custom Metric SLO\",\n  \"thresholds\": [\n    {\n      \"target\": 95,\n      \"timeframe\": \"7d\"\n    },\n    {\n      \"target\": 95,\n      \"timeframe\": \"30d\",\n      \"warning\": 97\n    }\n  ],\n  \"type\": \"metric\",\n  \"created_at\": -99964498,\n  \"creator\": {\n    \"email\": \"nostrud aliqua dolore adipisicing\",\n    \"handle\": \"esse ad\",\n    \"name\": \"est\"\n  },\n  \"description\": \"adipisicing est quis ipsum\",\n  \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n  ],\n  \"id\": \"nostrud officia\",\n  \"modified_at\": -83338646,\n  \"monitor_ids\": [\n    -42604664,\n    -6863832\n  ],\n  \"monitor_tags\": [\n    \"sint\",\n    \"cillum nisi ipsum\"\n  ],\n  \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n  },\n  \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n  ],\n  \"target_threshold\": 99.9,\n  \"timeframe\": \"30d\",\n  \"warning_threshold\": 99.95\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"name\": \"Custom Metric SLO\",\n      \"thresholds\": [\n        {\n          \"target\": 95,\n          \"timeframe\": \"7d\"\n        },\n        {\n          \"target\": 95,\n          \"timeframe\": \"30d\",\n          \"warning\": 97\n        }\n      ],\n      \"type\": \"metric\",\n      \"created_at\": -94400396,\n      \"creator\": {\n        \"email\": \"esse ullamco\",\n        \"handle\": \"pariatur irure sit non\",\n        \"name\": \"in proident laborum\"\n      },\n      \"description\": \"est proident magna reprehenderit\",\n      \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n      ],\n      \"id\": \"ipsum laboris consequat\",\n      \"modified_at\": -34908193,\n      \"monitor_ids\": [\n        35412081,\n        -51315393\n      ],\n      \"monitor_tags\": [\n        \"voluptate adipisicing fugiat elit\",\n        \"reprehenderit et nostrud pariatur Excepteur\"\n      ],\n      \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n      },\n      \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n      ],\n      \"target_threshold\": 99.9,\n      \"timeframe\": \"30d\",\n      \"warning_threshold\": 99.95\n    },\n    {\n      \"name\": \"Custom Metric SLO\",\n      \"thresholds\": [\n        {\n          \"target\": 95,\n          \"timeframe\": \"7d\"\n        },\n        {\n          \"target\": 95,\n          \"timeframe\": \"30d\",\n          \"warning\": 97\n        }\n      ],\n      \"type\": \"metric\",\n      \"created_at\": -83055437,\n      \"creator\": {\n        \"email\": \"exercitation\",\n        \"handle\": \"commodo aute incididunt ut\",\n        \"name\": \"Lorem dolor irure\"\n      },\n      \"description\": \"do nostrud ex sit\",\n      \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n      ],\n      \"id\": \"ut elit commodo\",\n      \"modified_at\": -65512371,\n      \"monitor_ids\": [\n        70922825,\n        -10561601\n      ],\n      \"monitor_tags\": [\n        \"laborum aliqua proident\",\n        \"ullamco cillum ea consectetur\"\n      ],\n      \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n      },\n      \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n      ],\n      \"target_threshold\": 99.9,\n      \"timeframe\": \"30d\",\n      \"warning_threshold\": 99.95\n    }\n  ],\n  \"errors\": [\n    \"deserunt in fugiat\",\n    \"proident\"\n  ],\n  \"metadata\": {\n    \"page\": {\n      \"total_count\": 69715777,\n      \"total_filtered_count\": -16033264\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Custom Metric SLO\",\n  \"thresholds\": [\n    {\n      \"target\": 95,\n      \"timeframe\": \"7d\"\n    },\n    {\n      \"target\": 95,\n      \"timeframe\": \"30d\",\n      \"warning\": 97\n    }\n  ],\n  \"type\": \"metric\",\n  \"created_at\": -99964498,\n  \"creator\": {\n    \"email\": \"nostrud aliqua dolore adipisicing\",\n    \"handle\": \"esse ad\",\n    \"name\": \"est\"\n  },\n  \"description\": \"adipisicing est quis ipsum\",\n  \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n  ],\n  \"id\": \"nostrud officia\",\n  \"modified_at\": -83338646,\n  \"monitor_ids\": [\n    -42604664,\n    -6863832\n  ],\n  \"monitor_tags\": [\n    \"sint\",\n    \"cillum nisi ipsum\"\n  ],\n  \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n  },\n  \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n  ],\n  \"target_threshold\": 99.9,\n  \"timeframe\": \"30d\",\n  \"warning_threshold\": 99.95\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Custom Metric SLO\",\n  \"thresholds\": [\n    {\n      \"target\": 95,\n      \"timeframe\": \"7d\"\n    },\n    {\n      \"target\": 95,\n      \"timeframe\": \"30d\",\n      \"warning\": 97\n    }\n  ],\n  \"type\": \"metric\",\n  \"created_at\": -99964498,\n  \"creator\": {\n    \"email\": \"nostrud aliqua dolore adipisicing\",\n    \"handle\": \"esse ad\",\n    \"name\": \"est\"\n  },\n  \"description\": \"adipisicing est quis ipsum\",\n  \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n  ],\n  \"id\": \"nostrud officia\",\n  \"modified_at\": -83338646,\n  \"monitor_ids\": [\n    -42604664,\n    -6863832\n  ],\n  \"monitor_tags\": [\n    \"sint\",\n    \"cillum nisi ipsum\"\n  ],\n  \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n  },\n  \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n  ],\n  \"target_threshold\": 99.9,\n  \"timeframe\": \"30d\",\n  \"warning_threshold\": 99.95\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Custom Metric SLO\",\n  \"thresholds\": [\n    {\n      \"target\": 95,\n      \"timeframe\": \"7d\"\n    },\n    {\n      \"target\": 95,\n      \"timeframe\": \"30d\",\n      \"warning\": 97\n    }\n  ],\n  \"type\": \"metric\",\n  \"created_at\": -99964498,\n  \"creator\": {\n    \"email\": \"nostrud aliqua dolore adipisicing\",\n    \"handle\": \"esse ad\",\n    \"name\": \"est\"\n  },\n  \"description\": \"adipisicing est quis ipsum\",\n  \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n  ],\n  \"id\": \"nostrud officia\",\n  \"modified_at\": -83338646,\n  \"monitor_ids\": [\n    -42604664,\n    -6863832\n  ],\n  \"monitor_tags\": [\n    \"sint\",\n    \"cillum nisi ipsum\"\n  ],\n  \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n  },\n  \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n  ],\n  \"target_threshold\": 99.9,\n  \"timeframe\": \"30d\",\n  \"warning_threshold\": 99.95\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Custom Metric SLO\",\n  \"thresholds\": [\n    {\n      \"target\": 95,\n      \"timeframe\": \"7d\"\n    },\n    {\n      \"target\": 95,\n      \"timeframe\": \"30d\",\n      \"warning\": 97\n    }\n  ],\n  \"type\": \"metric\",\n  \"created_at\": -99964498,\n  \"creator\": {\n    \"email\": \"nostrud aliqua dolore adipisicing\",\n    \"handle\": \"esse ad\",\n    \"name\": \"est\"\n  },\n  \"description\": \"adipisicing est quis ipsum\",\n  \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n  ],\n  \"id\": \"nostrud officia\",\n  \"modified_at\": -83338646,\n  \"monitor_ids\": [\n    -42604664,\n    -6863832\n  ],\n  \"monitor_tags\": [\n    \"sint\",\n    \"cillum nisi ipsum\"\n  ],\n  \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n  },\n  \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n  ],\n  \"target_threshold\": 99.9,\n  \"timeframe\": \"30d\",\n  \"warning_threshold\": 99.95\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Corrections For an SLO",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/:slo_id/corrections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								":slo_id",
								"corrections"
							],
							"variable": [
								{
									"key": "slo_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get corrections applied to an SLO"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id/corrections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id",
										"corrections"
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"category\": \"Scheduled Maintenance\",\n        \"created_at\": -74919575,\n        \"creator\": {\n          \"email\": \"ex veniam\",\n          \"handle\": \"velit\",\n          \"name\": \"voluptate in sit veniam Lorem\"\n        },\n        \"description\": \"veniam laboris\",\n        \"duration\": 3600,\n        \"end\": -8908818,\n        \"modified_at\": 5115488,\n        \"modifier\": {\n          \"email\": \"sit consequat\",\n          \"handle\": \"magna irure consequat\",\n          \"name\": \"labore aliquip consequat fugiat\"\n        },\n        \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n        \"slo_id\": \"labore commodo\",\n        \"start\": 6104289,\n        \"timezone\": \"consectetur fugiat elit laborum deserunt\"\n      },\n      \"id\": \"anim\",\n      \"type\": \"correction\"\n    },\n    {\n      \"attributes\": {\n        \"category\": \"Scheduled Maintenance\",\n        \"created_at\": -50145390,\n        \"creator\": {\n          \"email\": \"aliquip amet\",\n          \"handle\": \"amet ex\",\n          \"name\": \"sed non proident\"\n        },\n        \"description\": \"laborum reprehenderit\",\n        \"duration\": 3600,\n        \"end\": -50463285,\n        \"modified_at\": -64168623,\n        \"modifier\": {\n          \"email\": \"in minim s\",\n          \"handle\": \"id aliqua\",\n          \"name\": \"officia do fugiat\"\n        },\n        \"rrule\": \"FREQ=DAILY;INTERVAL=10;COUNT=5\",\n        \"slo_id\": \"sit nost\",\n        \"start\": 47690351,\n        \"timezone\": \"consequat ipsum quis ut\"\n      },\n      \"id\": \"incididunt eiusmod id\",\n      \"type\": \"correction\"\n    }\n  ],\n  \"meta\": {\n    \"page\": {\n      \"total_count\": -1541220,\n      \"total_filtered_count\": -20550176\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id/corrections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id",
										"corrections"
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id/corrections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id",
										"corrections"
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id/corrections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id",
										"corrections"
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id/corrections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id",
										"corrections"
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get an SLO's history",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/:slo_id/history?from_ts=-62147425&to_ts=-62147425&target=49.34019051965387&apply_correction=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								":slo_id",
								"history"
							],
							"query": [
								{
									"key": "from_ts",
									"value": "-62147425",
									"description": "(Required) The `from` timestamp for the query window in epoch seconds."
								},
								{
									"key": "to_ts",
									"value": "-62147425",
									"description": "(Required) The `to` timestamp for the query window in epoch seconds."
								},
								{
									"key": "target",
									"value": "49.34019051965387",
									"description": "The SLO target. If `target` is passed in, the response will include the remaining error budget and a timeframe value of `custom`."
								},
								{
									"key": "apply_correction",
									"value": "true",
									"description": "Defaults to `true`. If any SLO corrections are applied and this parameter is set to `false`,\nthen the corrections will not be applied and the SLI values will not be affected."
								}
							],
							"variable": [
								{
									"key": "slo_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get a specific SLO’s history, regardless of its SLO type.\n\nThe detailed history data is structured according to the source data type.\nFor example, metric data is included for event SLOs that use\nthe metric source, and monitor SLO types include the monitor transition history.\n\n**Note:** There are different response formats for event based and time based SLOs.\nExamples of both are shown."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id/history?from_ts=-62147425&to_ts=-62147425&target=49.34019051965387&apply_correction=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id",
										"history"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "-62147425",
											"description": "(Required) The `from` timestamp for the query window in epoch seconds."
										},
										{
											"key": "to_ts",
											"value": "-62147425",
											"description": "(Required) The `to` timestamp for the query window in epoch seconds."
										},
										{
											"key": "target",
											"value": "49.34019051965387",
											"description": "The SLO target. If `target` is passed in, the response will include the remaining error budget and a timeframe value of `custom`."
										},
										{
											"key": "apply_correction",
											"value": "true",
											"description": "Defaults to `true`. If any SLO corrections are applied and this parameter is set to `false`,\nthen the corrections will not be applied and the SLI values will not be affected."
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"from_ts\": 1615323990,\n    \"group_by\": [\n      \"aliqua pariatur\",\n      \"labor\"\n    ],\n    \"groups\": [\n      {\n        \"error_budget_remaining\": {\n          \"7d\": 100\n        },\n        \"errors\": [\n          {\n            \"error_type\": \"\",\n            \"error_message\": \"\"\n          },\n          {\n            \"error_type\": \"\",\n            \"error_message\": \"\"\n          }\n        ],\n        \"group\": \"name\",\n        \"history\": [\n          [\n            1579212382,\n            0\n          ]\n        ],\n        \"monitor_modified\": 1615867200,\n        \"monitor_type\": \"string\",\n        \"name\": \"string\",\n        \"precision\": 2,\n        \"preview\": true,\n        \"sli_value\": 99.99,\n        \"span_precision\": 2,\n        \"uptime\": 99.99\n      },\n      {\n        \"error_budget_remaining\": {\n          \"7d\": 100\n        },\n        \"errors\": [\n          {\n            \"error_type\": \"\",\n            \"error_message\": \"\"\n          },\n          {\n            \"error_type\": \"\",\n            \"error_message\": \"\"\n          }\n        ],\n        \"group\": \"name\",\n        \"history\": [\n          [\n            1579212382,\n            0\n          ]\n        ],\n        \"monitor_modified\": 1615867200,\n        \"monitor_type\": \"string\",\n        \"name\": \"string\",\n        \"precision\": 2,\n        \"preview\": true,\n        \"sli_value\": 99.99,\n        \"span_precision\": 2,\n        \"uptime\": 99.99\n      }\n    ],\n    \"monitors\": [\n      {\n        \"error_budget_remaining\": {\n          \"7d\": 100\n        },\n        \"errors\": [\n          {\n            \"error_type\": \"\",\n            \"error_message\": \"\"\n          },\n          {\n            \"error_type\": \"\",\n            \"error_message\": \"\"\n          }\n        ],\n        \"group\": \"name\",\n        \"history\": [\n          [\n            1579212382,\n            0\n          ]\n        ],\n        \"monitor_modified\": 1615867200,\n        \"monitor_type\": \"string\",\n        \"name\": \"string\",\n        \"precision\": 2,\n        \"preview\": true,\n        \"sli_value\": 99.99,\n        \"span_precision\": 2,\n        \"uptime\": 99.99\n      },\n      {\n        \"error_budget_remaining\": {\n          \"7d\": 100\n        },\n        \"errors\": [\n          {\n            \"error_type\": \"\",\n            \"error_message\": \"\"\n          },\n          {\n            \"error_type\": \"\",\n            \"error_message\": \"\"\n          }\n        ],\n        \"group\": \"name\",\n        \"history\": [\n          [\n            1579212382,\n            0\n          ]\n        ],\n        \"monitor_modified\": 1615867200,\n        \"monitor_type\": \"string\",\n        \"name\": \"string\",\n        \"precision\": 2,\n        \"preview\": true,\n        \"sli_value\": 99.99,\n        \"span_precision\": 2,\n        \"uptime\": 99.99\n      }\n    ],\n    \"overall\": {\n      \"error_budget_remaining\": {\n        \"7d\": 100\n      },\n      \"errors\": [\n        {\n          \"error_type\": \"\",\n          \"error_message\": \"\"\n        },\n        {\n          \"error_type\": \"\",\n          \"error_message\": \"\"\n        }\n      ],\n      \"group\": \"name\",\n      \"history\": [\n        [\n          1579212382,\n          0\n        ]\n      ],\n      \"monitor_modified\": 1615867200,\n      \"monitor_type\": \"string\",\n      \"name\": \"string\",\n      \"precision\": {\n        \"30d\": 1,\n        \"7d\": 2\n      },\n      \"preview\": true,\n      \"sli_value\": 99.99,\n      \"span_precision\": 2,\n      \"uptime\": 99.99\n    },\n    \"series\": {\n      \"res_type\": \"\",\n      \"interval\": 0,\n      \"resp_version\": 0,\n      \"query\": \"\",\n      \"times\": [],\n      \"numerator\": {\n        \"count\": 0,\n        \"sum\": 0,\n        \"metadata\": {}\n      },\n      \"denominator\": {\n        \"count\": 0,\n        \"sum\": 0,\n        \"metadata\": {}\n      },\n      \"message\": \"\"\n    },\n    \"thresholds\": {\n      \"my_service\": {\n        \"target\": 95,\n        \"timeframe\": \"7d\"\n      }\n    },\n    \"to_ts\": 1615928790,\n    \"type\": \"metric\",\n    \"type_id\": 0\n  },\n  \"errors\": [\n    {\n      \"error\": \"ullamco pariatur\"\n    },\n    {\n      \"error\": \"aliquip anim do laborum commodo\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id/history?from_ts=-62147425&to_ts=-62147425&target=49.34019051965387&apply_correction=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id",
										"history"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "-62147425",
											"description": "(Required) The `from` timestamp for the query window in epoch seconds."
										},
										{
											"key": "to_ts",
											"value": "-62147425",
											"description": "(Required) The `to` timestamp for the query window in epoch seconds."
										},
										{
											"key": "target",
											"value": "49.34019051965387",
											"description": "The SLO target. If `target` is passed in, the response will include the remaining error budget and a timeframe value of `custom`."
										},
										{
											"key": "apply_correction",
											"value": "true",
											"description": "Defaults to `true`. If any SLO corrections are applied and this parameter is set to `false`,\nthen the corrections will not be applied and the SLI values will not be affected."
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id/history?from_ts=-62147425&to_ts=-62147425&target=49.34019051965387&apply_correction=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id",
										"history"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "-62147425",
											"description": "(Required) The `from` timestamp for the query window in epoch seconds."
										},
										{
											"key": "to_ts",
											"value": "-62147425",
											"description": "(Required) The `to` timestamp for the query window in epoch seconds."
										},
										{
											"key": "target",
											"value": "49.34019051965387",
											"description": "The SLO target. If `target` is passed in, the response will include the remaining error budget and a timeframe value of `custom`."
										},
										{
											"key": "apply_correction",
											"value": "true",
											"description": "Defaults to `true`. If any SLO corrections are applied and this parameter is set to `false`,\nthen the corrections will not be applied and the SLI values will not be affected."
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id/history?from_ts=-62147425&to_ts=-62147425&target=49.34019051965387&apply_correction=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id",
										"history"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "-62147425",
											"description": "(Required) The `from` timestamp for the query window in epoch seconds."
										},
										{
											"key": "to_ts",
											"value": "-62147425",
											"description": "(Required) The `to` timestamp for the query window in epoch seconds."
										},
										{
											"key": "target",
											"value": "49.34019051965387",
											"description": "The SLO target. If `target` is passed in, the response will include the remaining error budget and a timeframe value of `custom`."
										},
										{
											"key": "apply_correction",
											"value": "true",
											"description": "Defaults to `true`. If any SLO corrections are applied and this parameter is set to `false`,\nthen the corrections will not be applied and the SLI values will not be affected."
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id/history?from_ts=-62147425&to_ts=-62147425&target=49.34019051965387&apply_correction=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id",
										"history"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "-62147425",
											"description": "(Required) The `from` timestamp for the query window in epoch seconds."
										},
										{
											"key": "to_ts",
											"value": "-62147425",
											"description": "(Required) The `to` timestamp for the query window in epoch seconds."
										},
										{
											"key": "target",
											"value": "49.34019051965387",
											"description": "The SLO target. If `target` is passed in, the response will include the remaining error budget and a timeframe value of `custom`."
										},
										{
											"key": "apply_correction",
											"value": "true",
											"description": "Defaults to `true`. If any SLO corrections are applied and this parameter is set to `false`,\nthen the corrections will not be applied and the SLI values will not be affected."
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "[Service Level Objectives](https://docs.datadoghq.com/monitors/service_level_objectives/#configuration)\n(or SLOs) are a key part of the site reliability engineering toolkit.\nSLOs provide a framework for defining clear targets around application performance,\nwhich ultimately help teams provide a consistent customer experience,\nbalance feature development with platform stability,\nand improve communication with internal and external users."
		},
		{
			"name": "Slack Integration",
			"item": [
				{
					"name": "Create a Slack integration channel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"slack",
								"configuration",
								"accounts",
								":account_name",
								"channels"
							],
							"variable": [
								{
									"key": "account_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Add a channel to your Datadog-Slack integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all channels in a Slack integration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"slack",
								"configuration",
								"accounts",
								":account_name",
								"channels"
							],
							"variable": [
								{
									"key": "account_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get a list of all channels configured for your Datadog-Slack integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"display\": {\n      \"message\": true,\n      \"notified\": true,\n      \"snapshot\": true,\n      \"tags\": true\n    },\n    \"name\": \"#channel_name_main_account\"\n  },\n  {\n    \"display\": {\n      \"message\": true,\n      \"notified\": true,\n      \"snapshot\": false,\n      \"tags\": true\n    },\n    \"name\": \"#channel_name_doghouse\"\n  }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Remove a Slack integration channel",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"slack",
								"configuration",
								"accounts",
								":account_name",
								"channels",
								":channel_name"
							],
							"variable": [
								{
									"key": "account_name",
									"value": "tempor Ut sed velit"
								},
								{
									"key": "channel_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Remove a channel from your Datadog-Slack integration."
					},
					"response": [
						{
							"name": "The channel was removed successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a Slack integration channel",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"slack",
								"configuration",
								"accounts",
								":account_name",
								"channels",
								":channel_name"
							],
							"variable": [
								{
									"key": "account_name",
									"value": "tempor Ut sed velit"
								},
								{
									"key": "channel_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get a channel configured for your Datadog-Slack integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a Slack integration channel",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"slack",
								"configuration",
								"accounts",
								":account_name",
								"channels",
								":channel_name"
							],
							"variable": [
								{
									"key": "account_name",
									"value": "tempor Ut sed velit"
								},
								{
									"key": "channel_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Update a channel used in your Datadog-Slack integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"display\": {\n    \"message\": true,\n    \"notified\": true,\n    \"snapshot\": true,\n    \"tags\": true\n  },\n  \"name\": \"#general\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Configure your [Datadog-Slack integration](https://docs.datadoghq.com/integrations/slack)\ndirectly through the Datadog API."
		},
		{
			"name": "Snapshots",
			"item": [
				{
					"name": "Take graph snapshots",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/graph/snapshot?metric_query=tempor Ut sed velit&start=-62147425&end=-62147425&event_query=tempor Ut sed velit&graph_def=tempor Ut sed velit&title=tempor Ut sed velit&height=-62147425&width=-62147425",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"snapshot"
							],
							"query": [
								{
									"key": "metric_query",
									"value": "tempor Ut sed velit",
									"description": "The metric query."
								},
								{
									"key": "start",
									"value": "-62147425",
									"description": "(Required) The POSIX timestamp of the start of the query in seconds."
								},
								{
									"key": "end",
									"value": "-62147425",
									"description": "(Required) The POSIX timestamp of the end of the query in seconds."
								},
								{
									"key": "event_query",
									"value": "tempor Ut sed velit",
									"description": "A query that adds event bands to the graph."
								},
								{
									"key": "graph_def",
									"value": "tempor Ut sed velit",
									"description": "A JSON document defining the graph. `graph_def` can be used instead of `metric_query`.\nThe JSON document uses the [grammar defined here](https://docs.datadoghq.com/graphing/graphing_json/#grammar)\nand should be formatted to a single line then URL encoded."
								},
								{
									"key": "title",
									"value": "tempor Ut sed velit",
									"description": "A title for the graph. If no title is specified, the graph does not have a title."
								},
								{
									"key": "height",
									"value": "-62147425",
									"description": "The height of the graph. If no height is specified, the graph's original height is used."
								},
								{
									"key": "width",
									"value": "-62147425",
									"description": "The width of the graph. If no width is specified, the graph's original width is used."
								}
							]
						},
						"description": "Take graph snapshots.\n**Note**: When a snapshot is created, there is some delay before it is available."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/snapshot?metric_query=tempor Ut sed velit&start=-62147425&end=-62147425&event_query=tempor Ut sed velit&graph_def=tempor Ut sed velit&title=tempor Ut sed velit&height=-62147425&width=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"snapshot"
									],
									"query": [
										{
											"key": "metric_query",
											"value": "tempor Ut sed velit",
											"description": "The metric query."
										},
										{
											"key": "start",
											"value": "-62147425",
											"description": "(Required) The POSIX timestamp of the start of the query in seconds."
										},
										{
											"key": "end",
											"value": "-62147425",
											"description": "(Required) The POSIX timestamp of the end of the query in seconds."
										},
										{
											"key": "event_query",
											"value": "tempor Ut sed velit",
											"description": "A query that adds event bands to the graph."
										},
										{
											"key": "graph_def",
											"value": "tempor Ut sed velit",
											"description": "A JSON document defining the graph. `graph_def` can be used instead of `metric_query`.\nThe JSON document uses the [grammar defined here](https://docs.datadoghq.com/graphing/graphing_json/#grammar)\nand should be formatted to a single line then URL encoded."
										},
										{
											"key": "title",
											"value": "tempor Ut sed velit",
											"description": "A title for the graph. If no title is specified, the graph does not have a title."
										},
										{
											"key": "height",
											"value": "-62147425",
											"description": "The height of the graph. If no height is specified, the graph's original height is used."
										},
										{
											"key": "width",
											"value": "-62147425",
											"description": "The width of the graph. If no width is specified, the graph's original width is used."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"graph_def\": \"aliquip pariatur non\",\n  \"metric_query\": \"sit veniam dolore Ut\",\n  \"snapshot_url\": \"https://app.datadoghq.com/s/f12345678/aaa-bbb-ccc\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/snapshot?metric_query=tempor Ut sed velit&start=-62147425&end=-62147425&event_query=tempor Ut sed velit&graph_def=tempor Ut sed velit&title=tempor Ut sed velit&height=-62147425&width=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"snapshot"
									],
									"query": [
										{
											"key": "metric_query",
											"value": "tempor Ut sed velit",
											"description": "The metric query."
										},
										{
											"key": "start",
											"value": "-62147425",
											"description": "(Required) The POSIX timestamp of the start of the query in seconds."
										},
										{
											"key": "end",
											"value": "-62147425",
											"description": "(Required) The POSIX timestamp of the end of the query in seconds."
										},
										{
											"key": "event_query",
											"value": "tempor Ut sed velit",
											"description": "A query that adds event bands to the graph."
										},
										{
											"key": "graph_def",
											"value": "tempor Ut sed velit",
											"description": "A JSON document defining the graph. `graph_def` can be used instead of `metric_query`.\nThe JSON document uses the [grammar defined here](https://docs.datadoghq.com/graphing/graphing_json/#grammar)\nand should be formatted to a single line then URL encoded."
										},
										{
											"key": "title",
											"value": "tempor Ut sed velit",
											"description": "A title for the graph. If no title is specified, the graph does not have a title."
										},
										{
											"key": "height",
											"value": "-62147425",
											"description": "The height of the graph. If no height is specified, the graph's original height is used."
										},
										{
											"key": "width",
											"value": "-62147425",
											"description": "The width of the graph. If no width is specified, the graph's original width is used."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/snapshot?metric_query=tempor Ut sed velit&start=-62147425&end=-62147425&event_query=tempor Ut sed velit&graph_def=tempor Ut sed velit&title=tempor Ut sed velit&height=-62147425&width=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"snapshot"
									],
									"query": [
										{
											"key": "metric_query",
											"value": "tempor Ut sed velit",
											"description": "The metric query."
										},
										{
											"key": "start",
											"value": "-62147425",
											"description": "(Required) The POSIX timestamp of the start of the query in seconds."
										},
										{
											"key": "end",
											"value": "-62147425",
											"description": "(Required) The POSIX timestamp of the end of the query in seconds."
										},
										{
											"key": "event_query",
											"value": "tempor Ut sed velit",
											"description": "A query that adds event bands to the graph."
										},
										{
											"key": "graph_def",
											"value": "tempor Ut sed velit",
											"description": "A JSON document defining the graph. `graph_def` can be used instead of `metric_query`.\nThe JSON document uses the [grammar defined here](https://docs.datadoghq.com/graphing/graphing_json/#grammar)\nand should be formatted to a single line then URL encoded."
										},
										{
											"key": "title",
											"value": "tempor Ut sed velit",
											"description": "A title for the graph. If no title is specified, the graph does not have a title."
										},
										{
											"key": "height",
											"value": "-62147425",
											"description": "The height of the graph. If no height is specified, the graph's original height is used."
										},
										{
											"key": "width",
											"value": "-62147425",
											"description": "The width of the graph. If no width is specified, the graph's original width is used."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/snapshot?metric_query=tempor Ut sed velit&start=-62147425&end=-62147425&event_query=tempor Ut sed velit&graph_def=tempor Ut sed velit&title=tempor Ut sed velit&height=-62147425&width=-62147425",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"snapshot"
									],
									"query": [
										{
											"key": "metric_query",
											"value": "tempor Ut sed velit",
											"description": "The metric query."
										},
										{
											"key": "start",
											"value": "-62147425",
											"description": "(Required) The POSIX timestamp of the start of the query in seconds."
										},
										{
											"key": "end",
											"value": "-62147425",
											"description": "(Required) The POSIX timestamp of the end of the query in seconds."
										},
										{
											"key": "event_query",
											"value": "tempor Ut sed velit",
											"description": "A query that adds event bands to the graph."
										},
										{
											"key": "graph_def",
											"value": "tempor Ut sed velit",
											"description": "A JSON document defining the graph. `graph_def` can be used instead of `metric_query`.\nThe JSON document uses the [grammar defined here](https://docs.datadoghq.com/graphing/graphing_json/#grammar)\nand should be formatted to a single line then URL encoded."
										},
										{
											"key": "title",
											"value": "tempor Ut sed velit",
											"description": "A title for the graph. If no title is specified, the graph does not have a title."
										},
										{
											"key": "height",
											"value": "-62147425",
											"description": "The height of the graph. If no height is specified, the graph's original height is used."
										},
										{
											"key": "width",
											"value": "-62147425",
											"description": "The width of the graph. If no width is specified, the graph's original width is used."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Take graph snapshots using the API."
		},
		{
			"name": "Spans",
			"item": [
				{
					"name": "Aggregate spans",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"compute\": [\n        {\n          \"aggregation\": \"avg\",\n          \"interval\": \"<string>\",\n          \"metric\": \"<string>\",\n          \"type\": \"total\"\n        },\n        {\n          \"aggregation\": \"pc98\",\n          \"interval\": \"<string>\",\n          \"metric\": \"<string>\",\n          \"type\": \"total\"\n        }\n      ],\n      \"filter\": {\n        \"from\": \"now-15m\",\n        \"query\": \"*\",\n        \"to\": \"now\"\n      },\n      \"group_by\": [\n        {\n          \"facet\": \"<string>\",\n          \"histogram\": {\n            \"interval\": \"<double>\",\n            \"min\": \"<double>\",\n            \"max\": \"<double>\"\n          },\n          \"limit\": 10,\n          \"missing\": \"<string>\",\n          \"sort\": {\n            \"aggregation\": \"count\",\n            \"metric\": \"<string>\",\n            \"order\": \"desc\",\n            \"type\": \"alphabetical\"\n          },\n          \"total\": \"<boolean>\"\n        },\n        {\n          \"facet\": \"<string>\",\n          \"histogram\": {\n            \"interval\": \"<double>\",\n            \"min\": \"<double>\",\n            \"max\": \"<double>\"\n          },\n          \"limit\": 10,\n          \"missing\": \"<string>\",\n          \"sort\": {\n            \"aggregation\": \"pc99\",\n            \"metric\": \"<string>\",\n            \"order\": \"desc\",\n            \"type\": \"alphabetical\"\n          },\n          \"total\": \"<boolean>\"\n        }\n      ],\n      \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"UTC\"\n      }\n    },\n    \"type\": \"aggregate_request\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/spans/analytics/aggregate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"spans",
								"analytics",
								"aggregate"
							]
						},
						"description": "The API endpoint to aggregate spans into buckets and compute metrics and timeseries.\nThis endpoint is rate limited to `300` requests per hour."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"compute\": [\n        {\n          \"aggregation\": \"avg\",\n          \"interval\": \"<string>\",\n          \"metric\": \"<string>\",\n          \"type\": \"total\"\n        },\n        {\n          \"aggregation\": \"pc98\",\n          \"interval\": \"<string>\",\n          \"metric\": \"<string>\",\n          \"type\": \"total\"\n        }\n      ],\n      \"filter\": {\n        \"from\": \"now-15m\",\n        \"query\": \"*\",\n        \"to\": \"now\"\n      },\n      \"group_by\": [\n        {\n          \"facet\": \"<string>\",\n          \"histogram\": {\n            \"interval\": \"<double>\",\n            \"min\": \"<double>\",\n            \"max\": \"<double>\"\n          },\n          \"limit\": 10,\n          \"missing\": \"<string>\",\n          \"sort\": {\n            \"aggregation\": \"count\",\n            \"metric\": \"<string>\",\n            \"order\": \"desc\",\n            \"type\": \"alphabetical\"\n          },\n          \"total\": \"<boolean>\"\n        },\n        {\n          \"facet\": \"<string>\",\n          \"histogram\": {\n            \"interval\": \"<double>\",\n            \"min\": \"<double>\",\n            \"max\": \"<double>\"\n          },\n          \"limit\": 10,\n          \"missing\": \"<string>\",\n          \"sort\": {\n            \"aggregation\": \"pc99\",\n            \"metric\": \"<string>\",\n            \"order\": \"desc\",\n            \"type\": \"alphabetical\"\n          },\n          \"total\": \"<boolean>\"\n        }\n      ],\n      \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"UTC\"\n      }\n    },\n    \"type\": \"aggregate_request\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/spans/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"spans",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"by\": {\n          \"ea3\": {\n            \"description\": \"The values for each group by.\"\n          },\n          \"nulla_7fe\": {\n            \"description\": \"The values for each group by.\"\n          }\n        },\n        \"compute\": {},\n        \"computes\": {\n          \"ullamco_2f\": \"<string>\",\n          \"do_fc0\": \"<string>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"type\": \"bucket\"\n    },\n    {\n      \"attributes\": {\n        \"by\": {\n          \"nisi9a\": {\n            \"description\": \"The values for each group by.\"\n          }\n        },\n        \"compute\": {},\n        \"computes\": {\n          \"sunt_d\": \"<string>\",\n          \"elit_d4\": \"<string>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"type\": \"bucket\"\n    }\n  ],\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"request_id\": \"<string>\",\n    \"status\": \"timeout\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"compute\": [\n        {\n          \"aggregation\": \"avg\",\n          \"interval\": \"<string>\",\n          \"metric\": \"<string>\",\n          \"type\": \"total\"\n        },\n        {\n          \"aggregation\": \"pc98\",\n          \"interval\": \"<string>\",\n          \"metric\": \"<string>\",\n          \"type\": \"total\"\n        }\n      ],\n      \"filter\": {\n        \"from\": \"now-15m\",\n        \"query\": \"*\",\n        \"to\": \"now\"\n      },\n      \"group_by\": [\n        {\n          \"facet\": \"<string>\",\n          \"histogram\": {\n            \"interval\": \"<double>\",\n            \"min\": \"<double>\",\n            \"max\": \"<double>\"\n          },\n          \"limit\": 10,\n          \"missing\": \"<string>\",\n          \"sort\": {\n            \"aggregation\": \"count\",\n            \"metric\": \"<string>\",\n            \"order\": \"desc\",\n            \"type\": \"alphabetical\"\n          },\n          \"total\": \"<boolean>\"\n        },\n        {\n          \"facet\": \"<string>\",\n          \"histogram\": {\n            \"interval\": \"<double>\",\n            \"min\": \"<double>\",\n            \"max\": \"<double>\"\n          },\n          \"limit\": 10,\n          \"missing\": \"<string>\",\n          \"sort\": {\n            \"aggregation\": \"pc99\",\n            \"metric\": \"<string>\",\n            \"order\": \"desc\",\n            \"type\": \"alphabetical\"\n          },\n          \"total\": \"<boolean>\"\n        }\n      ],\n      \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"UTC\"\n      }\n    },\n    \"type\": \"aggregate_request\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/spans/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"spans",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"compute\": [\n        {\n          \"aggregation\": \"avg\",\n          \"interval\": \"<string>\",\n          \"metric\": \"<string>\",\n          \"type\": \"total\"\n        },\n        {\n          \"aggregation\": \"pc98\",\n          \"interval\": \"<string>\",\n          \"metric\": \"<string>\",\n          \"type\": \"total\"\n        }\n      ],\n      \"filter\": {\n        \"from\": \"now-15m\",\n        \"query\": \"*\",\n        \"to\": \"now\"\n      },\n      \"group_by\": [\n        {\n          \"facet\": \"<string>\",\n          \"histogram\": {\n            \"interval\": \"<double>\",\n            \"min\": \"<double>\",\n            \"max\": \"<double>\"\n          },\n          \"limit\": 10,\n          \"missing\": \"<string>\",\n          \"sort\": {\n            \"aggregation\": \"count\",\n            \"metric\": \"<string>\",\n            \"order\": \"desc\",\n            \"type\": \"alphabetical\"\n          },\n          \"total\": \"<boolean>\"\n        },\n        {\n          \"facet\": \"<string>\",\n          \"histogram\": {\n            \"interval\": \"<double>\",\n            \"min\": \"<double>\",\n            \"max\": \"<double>\"\n          },\n          \"limit\": 10,\n          \"missing\": \"<string>\",\n          \"sort\": {\n            \"aggregation\": \"pc99\",\n            \"metric\": \"<string>\",\n            \"order\": \"desc\",\n            \"type\": \"alphabetical\"\n          },\n          \"total\": \"<boolean>\"\n        }\n      ],\n      \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"UTC\"\n      }\n    },\n    \"type\": \"aggregate_request\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/spans/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"spans",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"compute\": [\n        {\n          \"aggregation\": \"avg\",\n          \"interval\": \"<string>\",\n          \"metric\": \"<string>\",\n          \"type\": \"total\"\n        },\n        {\n          \"aggregation\": \"pc98\",\n          \"interval\": \"<string>\",\n          \"metric\": \"<string>\",\n          \"type\": \"total\"\n        }\n      ],\n      \"filter\": {\n        \"from\": \"now-15m\",\n        \"query\": \"*\",\n        \"to\": \"now\"\n      },\n      \"group_by\": [\n        {\n          \"facet\": \"<string>\",\n          \"histogram\": {\n            \"interval\": \"<double>\",\n            \"min\": \"<double>\",\n            \"max\": \"<double>\"\n          },\n          \"limit\": 10,\n          \"missing\": \"<string>\",\n          \"sort\": {\n            \"aggregation\": \"count\",\n            \"metric\": \"<string>\",\n            \"order\": \"desc\",\n            \"type\": \"alphabetical\"\n          },\n          \"total\": \"<boolean>\"\n        },\n        {\n          \"facet\": \"<string>\",\n          \"histogram\": {\n            \"interval\": \"<double>\",\n            \"min\": \"<double>\",\n            \"max\": \"<double>\"\n          },\n          \"limit\": 10,\n          \"missing\": \"<string>\",\n          \"sort\": {\n            \"aggregation\": \"pc99\",\n            \"metric\": \"<string>\",\n            \"order\": \"desc\",\n            \"type\": \"alphabetical\"\n          },\n          \"total\": \"<boolean>\"\n        }\n      ],\n      \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"UTC\"\n      }\n    },\n    \"type\": \"aggregate_request\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/spans/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"spans",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a list of spans",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/spans/events?filter[query]=<string>&filter[from]=<string>&filter[to]=<string>&sort=timestamp&page[cursor]=<string>&page[limit]=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"spans",
								"events"
							],
							"query": [
								{
									"key": "filter[query]",
									"value": "<string>",
									"description": "Search query following spans syntax."
								},
								{
									"key": "filter[from]",
									"value": "<string>",
									"description": "Minimum timestamp for requested spans. Supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
								},
								{
									"key": "filter[to]",
									"value": "<string>",
									"description": "Maximum timestamp for requested spans. Supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
								},
								{
									"key": "sort",
									"value": "timestamp",
									"description": "Order of spans in results."
								},
								{
									"key": "page[cursor]",
									"value": "<string>",
									"description": "List following results with a cursor provided in the previous query."
								},
								{
									"key": "page[limit]",
									"value": "10",
									"description": "Maximum number of spans in the response."
								}
							]
						},
						"description": "List endpoint returns spans that match a span search query.\n[Results are paginated][1].\n\nUse this endpoint to see your latest spans.\nThis endpoint is rate limited to `300` requests per hour.\n\n[1]: /logs/guide/collect-multiple-logs-with-pagination?tab=v2api"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/spans/events?filter[query]=<string>&filter[from]=<string>&filter[to]=<string>&sort=timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"spans",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following spans syntax."
										},
										{
											"key": "filter[from]",
											"value": "<string>",
											"description": "Minimum timestamp for requested spans. Supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
										},
										{
											"key": "filter[to]",
											"value": "<string>",
											"description": "Maximum timestamp for requested spans. Supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
										},
										{
											"key": "sort",
											"value": "timestamp",
											"description": "Order of spans in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of spans in the response."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"culpac\": {}\n        },\n        \"custom\": {\n          \"aliquip_8\": {},\n          \"commodo_9c1\": {}\n        },\n        \"end_timestamp\": \"<dateTime>\",\n        \"env\": \"<string>\",\n        \"host\": \"<string>\",\n        \"ingestion_reason\": \"<string>\",\n        \"parent_id\": \"<string>\",\n        \"resource_hash\": \"<string>\",\n        \"resource_name\": \"<string>\",\n        \"retained_by\": \"<string>\",\n        \"service\": \"<string>\",\n        \"single_span\": \"<boolean>\",\n        \"span_id\": \"<string>\",\n        \"start_timestamp\": \"<dateTime>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"trace_id\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"spans\"\n    },\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"Lorem_c\": {}\n        },\n        \"custom\": {\n          \"culpa_c\": {},\n          \"consectetur_cf\": {}\n        },\n        \"end_timestamp\": \"<dateTime>\",\n        \"env\": \"<string>\",\n        \"host\": \"<string>\",\n        \"ingestion_reason\": \"<string>\",\n        \"parent_id\": \"<string>\",\n        \"resource_hash\": \"<string>\",\n        \"resource_name\": \"<string>\",\n        \"retained_by\": \"<string>\",\n        \"service\": \"<string>\",\n        \"single_span\": \"<boolean>\",\n        \"span_id\": \"<string>\",\n        \"start_timestamp\": \"<dateTime>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"trace_id\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"spans\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"timeout\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/spans/events?filter[query]=<string>&filter[from]=<string>&filter[to]=<string>&sort=timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"spans",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following spans syntax."
										},
										{
											"key": "filter[from]",
											"value": "<string>",
											"description": "Minimum timestamp for requested spans. Supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
										},
										{
											"key": "filter[to]",
											"value": "<string>",
											"description": "Maximum timestamp for requested spans. Supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
										},
										{
											"key": "sort",
											"value": "timestamp",
											"description": "Order of spans in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of spans in the response."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden: Access denied.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/spans/events?filter[query]=<string>&filter[from]=<string>&filter[to]=<string>&sort=timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"spans",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following spans syntax."
										},
										{
											"key": "filter[from]",
											"value": "<string>",
											"description": "Minimum timestamp for requested spans. Supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
										},
										{
											"key": "filter[to]",
											"value": "<string>",
											"description": "Maximum timestamp for requested spans. Supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
										},
										{
											"key": "sort",
											"value": "timestamp",
											"description": "Order of spans in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of spans in the response."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unprocessable Entity.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/spans/events?filter[query]=<string>&filter[from]=<string>&filter[to]=<string>&sort=timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"spans",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following spans syntax."
										},
										{
											"key": "filter[from]",
											"value": "<string>",
											"description": "Minimum timestamp for requested spans. Supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
										},
										{
											"key": "filter[to]",
											"value": "<string>",
											"description": "Maximum timestamp for requested spans. Supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
										},
										{
											"key": "sort",
											"value": "timestamp",
											"description": "Order of spans in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of spans in the response."
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Too many requests: The rate limit set by the API has been exceeded.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/spans/events?filter[query]=<string>&filter[from]=<string>&filter[to]=<string>&sort=timestamp&page[cursor]=<string>&page[limit]=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"spans",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "<string>",
											"description": "Search query following spans syntax."
										},
										{
											"key": "filter[from]",
											"value": "<string>",
											"description": "Minimum timestamp for requested spans. Supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
										},
										{
											"key": "filter[to]",
											"value": "<string>",
											"description": "Maximum timestamp for requested spans. Supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
										},
										{
											"key": "sort",
											"value": "timestamp",
											"description": "Order of spans in results."
										},
										{
											"key": "page[cursor]",
											"value": "<string>",
											"description": "List following results with a cursor provided in the previous query."
										},
										{
											"key": "page[limit]",
											"value": "10",
											"description": "Maximum number of spans in the response."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Search spans",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"filter\": {\n        \"from\": \"now-15m\",\n        \"query\": \"*\",\n        \"to\": \"now\"\n      },\n      \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"UTC\"\n      },\n      \"page\": {\n        \"cursor\": \"<string>\",\n        \"limit\": 10\n      },\n      \"sort\": \"-timestamp\"\n    },\n    \"type\": \"search_request\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/spans/events/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"spans",
								"events",
								"search"
							]
						},
						"description": "List endpoint returns spans that match a span search query.\n[Results are paginated][1].\n\nUse this endpoint to build complex spans filtering and search.\nThis endpoint is rate limited to `300` requests per hour.\n\n[1]: /logs/guide/collect-multiple-logs-with-pagination?tab=v2api"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"filter\": {\n        \"from\": \"now-15m\",\n        \"query\": \"*\",\n        \"to\": \"now\"\n      },\n      \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"UTC\"\n      },\n      \"page\": {\n        \"cursor\": \"<string>\",\n        \"limit\": 10\n      },\n      \"sort\": \"-timestamp\"\n    },\n    \"type\": \"search_request\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/spans/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"spans",
										"events",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"culpac\": {}\n        },\n        \"custom\": {\n          \"aliquip_8\": {},\n          \"commodo_9c1\": {}\n        },\n        \"end_timestamp\": \"<dateTime>\",\n        \"env\": \"<string>\",\n        \"host\": \"<string>\",\n        \"ingestion_reason\": \"<string>\",\n        \"parent_id\": \"<string>\",\n        \"resource_hash\": \"<string>\",\n        \"resource_name\": \"<string>\",\n        \"retained_by\": \"<string>\",\n        \"service\": \"<string>\",\n        \"single_span\": \"<boolean>\",\n        \"span_id\": \"<string>\",\n        \"start_timestamp\": \"<dateTime>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"trace_id\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"spans\"\n    },\n    {\n      \"attributes\": {\n        \"attributes\": {\n          \"Lorem_c\": {}\n        },\n        \"custom\": {\n          \"culpa_c\": {},\n          \"consectetur_cf\": {}\n        },\n        \"end_timestamp\": \"<dateTime>\",\n        \"env\": \"<string>\",\n        \"host\": \"<string>\",\n        \"ingestion_reason\": \"<string>\",\n        \"parent_id\": \"<string>\",\n        \"resource_hash\": \"<string>\",\n        \"resource_name\": \"<string>\",\n        \"retained_by\": \"<string>\",\n        \"service\": \"<string>\",\n        \"single_span\": \"<boolean>\",\n        \"span_id\": \"<string>\",\n        \"start_timestamp\": \"<dateTime>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"trace_id\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"spans\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"elapsed\": \"<long>\",\n    \"page\": {\n      \"after\": \"<string>\"\n    },\n    \"request_id\": \"<string>\",\n    \"status\": \"timeout\",\n    \"warnings\": [\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"detail\": \"<string>\",\n        \"title\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"filter\": {\n        \"from\": \"now-15m\",\n        \"query\": \"*\",\n        \"to\": \"now\"\n      },\n      \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"UTC\"\n      },\n      \"page\": {\n        \"cursor\": \"<string>\",\n        \"limit\": 10\n      },\n      \"sort\": \"-timestamp\"\n    },\n    \"type\": \"search_request\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/spans/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"spans",
										"events",
										"search"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden: Access denied.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"filter\": {\n        \"from\": \"now-15m\",\n        \"query\": \"*\",\n        \"to\": \"now\"\n      },\n      \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"UTC\"\n      },\n      \"page\": {\n        \"cursor\": \"<string>\",\n        \"limit\": 10\n      },\n      \"sort\": \"-timestamp\"\n    },\n    \"type\": \"search_request\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/spans/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"spans",
										"events",
										"search"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unprocessable Entity.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"filter\": {\n        \"from\": \"now-15m\",\n        \"query\": \"*\",\n        \"to\": \"now\"\n      },\n      \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"UTC\"\n      },\n      \"page\": {\n        \"cursor\": \"<string>\",\n        \"limit\": 10\n      },\n      \"sort\": \"-timestamp\"\n    },\n    \"type\": \"search_request\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/spans/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"spans",
										"events",
										"search"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Too many requests: The rate limit set by the API has been exceeded.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"filter\": {\n        \"from\": \"now-15m\",\n        \"query\": \"*\",\n        \"to\": \"now\"\n      },\n      \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"UTC\"\n      },\n      \"page\": {\n        \"cursor\": \"<string>\",\n        \"limit\": 10\n      },\n      \"sort\": \"-timestamp\"\n    },\n    \"type\": \"search_request\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/spans/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"spans",
										"events",
										"search"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"detail\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "Search and aggregate your spans from your Datadog platform over HTTP."
		},
		{
			"name": "Spans Metrics",
			"item": [
				{
					"name": "Get all span-based metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/apm/config/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"apm",
								"config",
								"metrics"
							]
						},
						"description": "Get the list of configured span-based metrics with their definitions."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"compute\": {\n          \"aggregation_type\": \"distribution\",\n          \"include_percentiles\": \"<boolean>\",\n          \"path\": \"<string>\"\n        },\n        \"filter\": {\n          \"query\": \"<string>\"\n        },\n        \"group_by\": [\n          {\n            \"path\": \"<string>\",\n            \"tag_name\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"tag_name\": \"<string>\"\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"spans_metrics\"\n    },\n    {\n      \"attributes\": {\n        \"compute\": {\n          \"aggregation_type\": \"distribution\",\n          \"include_percentiles\": \"<boolean>\",\n          \"path\": \"<string>\"\n        },\n        \"filter\": {\n          \"query\": \"<string>\"\n        },\n        \"group_by\": [\n          {\n            \"path\": \"<string>\",\n            \"tag_name\": \"<string>\"\n          },\n          {\n            \"path\": \"<string>\",\n            \"tag_name\": \"<string>\"\n          }\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"spans_metrics\"\n    }\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a span-based metric",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"spans_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/apm/config/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"apm",
								"config",
								"metrics"
							]
						},
						"description": "Create a metric based on your ingested spans in your organization.\nReturns the span-based metric object from the request body when the request is successful."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"spans_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"distribution\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"spans_metrics\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"spans_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"spans_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"spans_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"spans_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"count\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a span-based metric",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"apm",
								"config",
								"metrics",
								":metric_id"
							],
							"variable": [
								{
									"key": "metric_id",
									"value": "<string>"
								}
							]
						},
						"description": "Delete a specific span-based metric from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a span-based metric",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"apm",
								"config",
								"metrics",
								":metric_id"
							],
							"variable": [
								{
									"key": "metric_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a specific span-based metric from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"distribution\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"spans_metrics\"\n  }\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a span-based metric",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"spans_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"include_percentiles\": \"<boolean>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"apm",
								"config",
								"metrics",
								":metric_id"
							],
							"variable": [
								{
									"key": "metric_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a specific span-based metric from your organization.\nReturns the span-based metric object from the request body when the request is successful."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"spans_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"include_percentiles\": \"<boolean>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"compute\": {\n        \"aggregation_type\": \"distribution\",\n        \"include_percentiles\": \"<boolean>\",\n        \"path\": \"<string>\"\n      },\n      \"filter\": {\n        \"query\": \"<string>\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"spans_metrics\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"spans_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"include_percentiles\": \"<boolean>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"spans_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"include_percentiles\": \"<boolean>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"spans_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"include_percentiles\": \"<boolean>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"spans_metrics\",\n    \"attributes\": {\n      \"compute\": {\n        \"include_percentiles\": \"<boolean>\"\n      },\n      \"filter\": {\n        \"query\": \"*\"\n      },\n      \"group_by\": [\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        },\n        {\n          \"path\": \"<string>\",\n          \"tag_name\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/apm/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"apm",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Manage configuration of [span-based metrics](https://app.datadoghq.com/apm/traces/generate-metrics) for your organization."
		},
		{
			"name": "Synthetics",
			"item": [
				{
					"name": "Get details of batch",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/ci/batch/:batch_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"ci",
								"batch",
								":batch_id"
							],
							"variable": [
								{
									"key": "batch_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get a batch's updated details."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/ci/batch/:batch_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"ci",
										"batch",
										":batch_id"
									],
									"variable": [
										{
											"key": "batch_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"metadata\": {\n      \"ci\": {\n        \"pipeline\": {\n          \"url\": \"dolor irure amet aliqua\"\n        },\n        \"provider\": {\n          \"name\": \"velit voluptate minim tempor et\"\n        }\n      },\n      \"git\": {\n        \"branch\": \"proident pariatur cillum ipsum\",\n        \"commitSha\": \"no\"\n      }\n    },\n    \"results\": [\n      {\n        \"device\": \"laptop_large\",\n        \"duration\": 77555392.34670219,\n        \"execution_rule\": \"blocking\",\n        \"location\": \"nostrud consectetur proident elit\",\n        \"result_id\": \"ad in\",\n        \"retries\": 27165346.602910966,\n        \"status\": \"passed\",\n        \"test_name\": \"in Excepteur\",\n        \"test_public_id\": \"aute sint\",\n        \"test_type\": \"browser\"\n      },\n      {\n        \"device\": \"laptop_large\",\n        \"duration\": -71572766.6529502,\n        \"execution_rule\": \"non_blocking\",\n        \"location\": \"velit ullamco\",\n        \"result_id\": \"quis irure officia Lorem enim\",\n        \"retries\": 66253781.442619294,\n        \"status\": \"passed\",\n        \"test_name\": \"reprehenderit voluptate incididu\",\n        \"test_public_id\": \"ipsum Duis\",\n        \"test_type\": \"api\"\n      }\n    ],\n    \"status\": \"passed\"\n  }\n}"
						},
						{
							"name": "Batch does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/ci/batch/:batch_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"ci",
										"batch",
										":batch_id"
									],
									"variable": [
										{
											"key": "batch_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/ci/batch/:batch_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"ci",
										"batch",
										":batch_id"
									],
									"variable": [
										{
											"key": "batch_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all locations (public and private)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"locations"
							]
						},
						"description": "Get the list of public and private locations available for Synthetic\ntests. No arguments required."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"locations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"locations\": [\n    {\n      \"id\": \"cillum voluptate do velit ut\",\n      \"name\": \"labore laborum enim minim quis\"\n    },\n    {\n      \"id\": \"dolore dolor adipisicing in mollit\",\n      \"name\": \"ad nostrud elit\"\n    }\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"locations"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a private location",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New private location\",\n  \"description\": \"Description of private location\",\n  \"tags\": [\n    \"team:front\"\n  ],\n  \"id\": \"Duis incididunt ea Lorem\",\n  \"metadata\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"secrets\": {\n    \"authentication\": {\n      \"id\": \"quis aliqua dolor reprehenderit\",\n      \"key\": \"laboris pariatur\"\n    },\n    \"config_decryption\": {\n      \"key\": \"voluptate mollit commodo deserunt\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/private-locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"private-locations"
							]
						},
						"description": "Create a new Synthetic private location."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New private location\",\n  \"description\": \"Description of private location\",\n  \"tags\": [\n    \"team:front\"\n  ],\n  \"id\": \"Duis incididunt ea Lorem\",\n  \"metadata\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"secrets\": {\n    \"authentication\": {\n      \"id\": \"quis aliqua dolor reprehenderit\",\n      \"key\": \"laboris pariatur\"\n    },\n    \"config_decryption\": {\n      \"key\": \"voluptate mollit commodo deserunt\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"config\": {},\n  \"private_location\": {\n    \"name\": \"New private location\",\n    \"description\": \"Description of private location\",\n    \"tags\": [\n      \"team:front\"\n    ],\n    \"id\": \"amet\",\n    \"metadata\": {\n      \"restricted_roles\": [\n        \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n      ]\n    },\n    \"secrets\": {\n      \"authentication\": {\n        \"id\": \"voluptate enim labore adipisicing\",\n        \"key\": \"cillum\"\n      },\n      \"config_decryption\": {\n        \"key\": \"anim nostrud et\"\n      }\n    }\n  },\n  \"result_encryption\": {\n    \"id\": \"e\",\n    \"key\": \"laboris\"\n  }\n}"
						},
						{
							"name": "Quota reached for private locations",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New private location\",\n  \"description\": \"Description of private location\",\n  \"tags\": [\n    \"team:front\"\n  ],\n  \"id\": \"Duis incididunt ea Lorem\",\n  \"metadata\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"secrets\": {\n    \"authentication\": {\n      \"id\": \"quis aliqua dolor reprehenderit\",\n      \"key\": \"laboris pariatur\"\n    },\n    \"config_decryption\": {\n      \"key\": \"voluptate mollit commodo deserunt\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Private locations are not activated for the user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New private location\",\n  \"description\": \"Description of private location\",\n  \"tags\": [\n    \"team:front\"\n  ],\n  \"id\": \"Duis incididunt ea Lorem\",\n  \"metadata\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"secrets\": {\n    \"authentication\": {\n      \"id\": \"quis aliqua dolor reprehenderit\",\n      \"key\": \"laboris pariatur\"\n    },\n    \"config_decryption\": {\n      \"key\": \"voluptate mollit commodo deserunt\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New private location\",\n  \"description\": \"Description of private location\",\n  \"tags\": [\n    \"team:front\"\n  ],\n  \"id\": \"Duis incididunt ea Lorem\",\n  \"metadata\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"secrets\": {\n    \"authentication\": {\n      \"id\": \"quis aliqua dolor reprehenderit\",\n      \"key\": \"laboris pariatur\"\n    },\n    \"config_decryption\": {\n      \"key\": \"voluptate mollit commodo deserunt\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a private location",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"private-locations",
								":location_id"
							],
							"variable": [
								{
									"key": "location_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Delete a Synthetic private location."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "- Private locations are not activated for the user\n- Private location does not exist",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a private location",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"private-locations",
								":location_id"
							],
							"variable": [
								{
									"key": "location_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get a Synthetic private location."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"New private location\",\n  \"description\": \"Description of private location\",\n  \"tags\": [\n    \"team:front\"\n  ],\n  \"id\": \"Duis incididunt ea Lorem\",\n  \"metadata\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"secrets\": {\n    \"authentication\": {\n      \"id\": \"quis aliqua dolor reprehenderit\",\n      \"key\": \"laboris pariatur\"\n    },\n    \"config_decryption\": {\n      \"key\": \"voluptate mollit commodo deserunt\"\n    }\n  }\n}"
						},
						{
							"name": "- Synthetic private locations are not activated for the user\n- Private location does not exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Edit a private location",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New private location\",\n  \"description\": \"Description of private location\",\n  \"tags\": [\n    \"team:front\"\n  ],\n  \"id\": \"Duis incididunt ea Lorem\",\n  \"metadata\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"secrets\": {\n    \"authentication\": {\n      \"id\": \"quis aliqua dolor reprehenderit\",\n      \"key\": \"laboris pariatur\"\n    },\n    \"config_decryption\": {\n      \"key\": \"voluptate mollit commodo deserunt\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"private-locations",
								":location_id"
							],
							"variable": [
								{
									"key": "location_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Edit a Synthetic private location."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New private location\",\n  \"description\": \"Description of private location\",\n  \"tags\": [\n    \"team:front\"\n  ],\n  \"id\": \"Duis incididunt ea Lorem\",\n  \"metadata\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"secrets\": {\n    \"authentication\": {\n      \"id\": \"quis aliqua dolor reprehenderit\",\n      \"key\": \"laboris pariatur\"\n    },\n    \"config_decryption\": {\n      \"key\": \"voluptate mollit commodo deserunt\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"New private location\",\n  \"description\": \"Description of private location\",\n  \"tags\": [\n    \"team:front\"\n  ],\n  \"id\": \"Duis incididunt ea Lorem\",\n  \"metadata\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"secrets\": {\n    \"authentication\": {\n      \"id\": \"quis aliqua dolor reprehenderit\",\n      \"key\": \"laboris pariatur\"\n    },\n    \"config_decryption\": {\n      \"key\": \"voluptate mollit commodo deserunt\"\n    }\n  }\n}"
						},
						{
							"name": "- Private locations are not activated for the user\n- Private location does not exist",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New private location\",\n  \"description\": \"Description of private location\",\n  \"tags\": [\n    \"team:front\"\n  ],\n  \"id\": \"Duis incididunt ea Lorem\",\n  \"metadata\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"secrets\": {\n    \"authentication\": {\n      \"id\": \"quis aliqua dolor reprehenderit\",\n      \"key\": \"laboris pariatur\"\n    },\n    \"config_decryption\": {\n      \"key\": \"voluptate mollit commodo deserunt\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New private location\",\n  \"description\": \"Description of private location\",\n  \"tags\": [\n    \"team:front\"\n  ],\n  \"id\": \"Duis incididunt ea Lorem\",\n  \"metadata\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"secrets\": {\n    \"authentication\": {\n      \"id\": \"quis aliqua dolor reprehenderit\",\n      \"key\": \"laboris pariatur\"\n    },\n    \"config_decryption\": {\n      \"key\": \"voluptate mollit commodo deserunt\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get the default locations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/settings/default_locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"settings",
								"default_locations"
							]
						},
						"description": "Get the default locations settings."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/settings/default_locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"settings",
										"default_locations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"aws:eu-west-3\"\n]"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/settings/default_locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"settings",
										"default_locations"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get the list of all Synthetic tests",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests?page_size=tempor Ut sed velit&page_number=tempor Ut sed velit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests"
							],
							"query": [
								{
									"key": "page_size",
									"value": "tempor Ut sed velit",
									"description": "Used for pagination. The number of tests returned in the page."
								},
								{
									"key": "page_number",
									"value": "tempor Ut sed velit",
									"description": "Used for pagination. Which page you want to retrieve. Starts at zero."
								}
							]
						},
						"description": "Get the list of all Synthetic tests."
					},
					"response": [
						{
							"name": "OK - Returns the list of all Synthetic tests.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests?page_size=tempor Ut sed velit&page_number=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests"
									],
									"query": [
										{
											"key": "page_size",
											"value": "tempor Ut sed velit",
											"description": "Used for pagination. The number of tests returned in the page."
										},
										{
											"key": "page_number",
											"value": "tempor Ut sed velit",
											"description": "Used for pagination. Which page you want to retrieve. Starts at zero."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"tests\": [\n    {\n      \"config\": {\n        \"configVariables\": [\n          {\n            \"description\": \"Example for the variable.\",\n            \"type\": \"string\"\n          },\n          {\n            \"description\": \"Example for the variable.\",\n            \"type\": \"string\"\n          }\n        ],\n        \"request\": {\n          \"allow_insecure\": false,\n          \"basicAuth\": {\n            \"password\": \"PaSSw0RD!\",\n            \"username\": \"my_username\",\n            \"type\": \"web\"\n          },\n          \"body\": \"nisi elit aute proident minim\",\n          \"bodyType\": \"text/plain\",\n          \"callType\": \"unary\",\n          \"certificate\": {\n            \"cert\": {\n              \"content\": \"Lorem irure\",\n              \"filename\": \"Excepteur occaecat\",\n              \"updatedAt\": \"quis exercitation\"\n            },\n            \"key\": {\n              \"content\": \"officia aliquip\",\n              \"filename\": \"Lorem in sed\",\n              \"updatedAt\": \"exercitation commodo\"\n            }\n          },\n          \"compressedJsonDescriptor\": \"dolore ea reprehenderit ad\",\n          \"dnsServer\": \"cupida\",\n          \"dnsServerPort\": 54877,\n          \"follow_redirects\": true,\n          \"headers\": {\n            \"site_\": \"adipisicing ea\",\n            \"sit1\": \"in incididunt exercitation eu\"\n          },\n          \"host\": \"ipsum\",\n          \"message\": \"in cupidatat\",\n          \"metadata\": {\n            \"pariaturd5f\": \"qui sed ullamco et\",\n            \"veniam2\": \"in ut adipisicing voluptate velit\",\n            \"consectetura\": \"laborum sed Lorem in\"\n          },\n          \"method\": \"commodo non\",\n          \"noSavingResponseBody\": false,\n          \"numberOfPackets\": 6,\n          \"persistCookies\": false,\n          \"port\": 4381428,\n          \"proxy\": {\n            \"url\": \"https://example.com\",\n            \"headers\": {\n              \"in081\": \"exercitation a\"\n            }\n          },\n          \"query\": {},\n          \"servername\": \"in\",\n          \"service\": \"Greeter\",\n          \"shouldTrackHops\": false,\n          \"timeout\": -9075364.229425669,\n          \"url\": \"https://example.com\"\n        },\n        \"variables\": [\n          {\n            \"description\": \"Example for the variable.\",\n            \"type\": \"string\"\n          },\n          {\n            \"description\": \"Example for the variable.\",\n            \"type\": \"string\"\n          }\n        ]\n      },\n      \"creator\": {\n        \"email\": \"eiusmod in\",\n        \"handle\": \"commodo enim\",\n        \"name\": \"magna do occaeca\"\n      },\n      \"locations\": [\n        \"aws:eu-west-3\"\n      ],\n      \"message\": \"velit Lorem amet non\",\n      \"monitor_id\": -1212470,\n      \"name\": \"esse incididunt consectetur labore\",\n      \"options\": {\n        \"accept_self_signed\": false,\n        \"allow_insecure\": false,\n        \"checkCertificateRevocation\": false,\n        \"ci\": {\n          \"executionRule\": \"blocking\"\n        },\n        \"device_ids\": [\n          \"laptop_large\",\n          \"laptop_large\"\n        ],\n        \"disableCors\": false,\n        \"disableCsp\": false,\n        \"follow_redirects\": false,\n        \"httpVersion\": \"http2\",\n        \"ignoreServerCertificateError\": true,\n        \"initialNavigationTimeout\": -13991278,\n        \"min_failure_duration\": -25741137,\n        \"min_location_failed\": 16891533,\n        \"monitor_name\": \"veniam occaecat Lorem do\",\n        \"monitor_options\": {\n          \"renotify_interval\": 206\n        },\n        \"monitor_priority\": 1,\n        \"noScreenshot\": true,\n        \"restricted_roles\": [\n          \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n        ],\n        \"retry\": {\n          \"count\": 75644948,\n          \"interval\": 62584402.461459786\n        },\n        \"rumSettings\": {\n          \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n          \"clientTokenId\": 12345,\n          \"isEnabled\": true\n        },\n        \"scheduling\": {\n          \"timeframes\": [\n            {\n              \"day\": 1,\n              \"from\": \"07:00\",\n              \"to\": \"16:00\"\n            },\n            {\n              \"day\": 3,\n              \"from\": \"07:00\",\n              \"to\": \"16:00\"\n            }\n          ],\n          \"timezone\": \"America/New_York\"\n        },\n        \"tick_every\": 276495\n      },\n      \"public_id\": \"incididunt consequat officia nisi\",\n      \"status\": \"live\",\n      \"steps\": [\n        {\n          \"allowFailure\": false,\n          \"isCritical\": false,\n          \"name\": \"qui\",\n          \"noScreenshot\": false,\n          \"params\": {},\n          \"timeout\": 50285708,\n          \"type\": \"assertElementContent\"\n        },\n        {\n          \"allowFailure\": true,\n          \"isCritical\": false,\n          \"name\": \"esse minim ullamco occaecat\",\n          \"noScreenshot\": true,\n          \"params\": {},\n          \"timeout\": -14507495,\n          \"type\": \"assertElementContent\"\n        }\n      ],\n      \"subtype\": \"http\",\n      \"tags\": [\n        \"exercitation Ut\",\n        \"esse et sit\"\n      ],\n      \"type\": \"browser\"\n    },\n    {\n      \"config\": {\n        \"configVariables\": [\n          {\n            \"description\": \"Example for the variable.\",\n            \"type\": \"string\"\n          },\n          {\n            \"description\": \"Example for the variable.\",\n            \"type\": \"string\"\n          }\n        ],\n        \"request\": {\n          \"allow_insecure\": false,\n          \"basicAuth\": {\n            \"password\": \"PaSSw0RD!\",\n            \"username\": \"my_username\",\n            \"type\": \"web\"\n          },\n          \"body\": \"voluptate minim\",\n          \"bodyType\": \"text/plain\",\n          \"callType\": \"unary\",\n          \"certificate\": {\n            \"cert\": {\n              \"content\": \"qui Lorem non\",\n              \"filename\": \"nostrud laboris culpa adipisicing\",\n              \"updatedAt\": \"et esse cupidatat consectetur do\"\n            },\n            \"key\": {\n              \"content\": \"cupidatat sunt\",\n              \"filename\": \"pariatur nostru\",\n              \"updatedAt\": \"Lorem dolor\"\n            }\n          },\n          \"compressedJsonDescriptor\": \"aliquip laboris amet\",\n          \"dnsServer\": \"magna\",\n          \"dnsServerPort\": 35750,\n          \"follow_redirects\": false,\n          \"headers\": {\n            \"est_d9d\": \"anim\",\n            \"cupidatat98f\": \"esse\"\n          },\n          \"host\": \"ea esse\",\n          \"message\": \"consequat ipsum ut Lorem\",\n          \"metadata\": {\n            \"esse_ef4\": \"commodo\",\n            \"do_b06\": \"tempor adipisicing dolor\",\n            \"dolore_a5a\": \"nostrud\"\n          },\n          \"method\": \"laboris\",\n          \"noSavingResponseBody\": true,\n          \"numberOfPackets\": 9,\n          \"persistCookies\": true,\n          \"port\": -288377,\n          \"proxy\": {\n            \"url\": \"https://example.com\",\n            \"headers\": {\n              \"irure_15\": \"in\",\n              \"tempor40\": \"laboris veniam tempor qui nulla\"\n            }\n          },\n          \"query\": {},\n          \"servername\": \"ad laborum cupidatat\",\n          \"service\": \"Greeter\",\n          \"shouldTrackHops\": true,\n          \"timeout\": -4889397.044413894,\n          \"url\": \"https://example.com\"\n        },\n        \"variables\": [\n          {\n            \"description\": \"Example for the variable.\",\n            \"type\": \"string\"\n          },\n          {\n            \"description\": \"Example for the variable.\",\n            \"type\": \"string\"\n          }\n        ]\n      },\n      \"creator\": {\n        \"email\": \"in Duis nisi ex\",\n        \"handle\": \"fugiat sint sed consequa\",\n        \"name\": \"ipsum ut\"\n      },\n      \"locations\": [\n        \"aws:eu-west-3\"\n      ],\n      \"message\": \"Excepteur ipsum exercitat\",\n      \"monitor_id\": 17707116,\n      \"name\": \"deserunt elit proident Lorem\",\n      \"options\": {\n        \"accept_self_signed\": false,\n        \"allow_insecure\": false,\n        \"checkCertificateRevocation\": false,\n        \"ci\": {\n          \"executionRule\": \"skipped\"\n        },\n        \"device_ids\": [\n          \"laptop_large\",\n          \"laptop_large\"\n        ],\n        \"disableCors\": false,\n        \"disableCsp\": false,\n        \"follow_redirects\": false,\n        \"httpVersion\": \"http1\",\n        \"ignoreServerCertificateError\": false,\n        \"initialNavigationTimeout\": 29100273,\n        \"min_failure_duration\": 5817749,\n        \"min_location_failed\": 84916784,\n        \"monitor_name\": \"velit quis\",\n        \"monitor_options\": {\n          \"renotify_interval\": 427\n        },\n        \"monitor_priority\": 1,\n        \"noScreenshot\": false,\n        \"restricted_roles\": [\n          \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n        ],\n        \"retry\": {\n          \"count\": 37028687,\n          \"interval\": -23788886.712954804\n        },\n        \"rumSettings\": {\n          \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n          \"clientTokenId\": 12345,\n          \"isEnabled\": true\n        },\n        \"scheduling\": {\n          \"timeframes\": [\n            {\n              \"day\": 1,\n              \"from\": \"07:00\",\n              \"to\": \"16:00\"\n            },\n            {\n              \"day\": 3,\n              \"from\": \"07:00\",\n              \"to\": \"16:00\"\n            }\n          ],\n          \"timezone\": \"America/New_York\"\n        },\n        \"tick_every\": 256938\n      },\n      \"public_id\": \"Exc\",\n      \"status\": \"live\",\n      \"steps\": [\n        {\n          \"allowFailure\": true,\n          \"isCritical\": true,\n          \"name\": \"ipsum conse\",\n          \"noScreenshot\": false,\n          \"params\": {},\n          \"timeout\": -75416003,\n          \"type\": \"assertElementContent\"\n        },\n        {\n          \"allowFailure\": false,\n          \"isCritical\": false,\n          \"name\": \"non do ex\",\n          \"noScreenshot\": false,\n          \"params\": {},\n          \"timeout\": -91980592,\n          \"type\": \"assertElementContent\"\n        }\n      ],\n      \"subtype\": \"http\",\n      \"tags\": [\n        \"fugiat ex amet minim\",\n        \"dolore occaecat ad dolor ex\"\n      ],\n      \"type\": \"api\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests?page_size=tempor Ut sed velit&page_number=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests"
									],
									"query": [
										{
											"key": "page_size",
											"value": "tempor Ut sed velit",
											"description": "Used for pagination. The number of tests returned in the page."
										},
										{
											"key": "page_number",
											"value": "tempor Ut sed velit",
											"description": "Used for pagination. Which page you want to retrieve. Starts at zero."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Synthetic Monitoring is not activated for the user.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests?page_size=tempor Ut sed velit&page_number=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests"
									],
									"query": [
										{
											"key": "page_size",
											"value": "tempor Ut sed velit",
											"description": "Used for pagination. The number of tests returned in the page."
										},
										{
											"key": "page_number",
											"value": "tempor Ut sed velit",
											"description": "Used for pagination. Which page you want to retrieve. Starts at zero."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests?page_size=tempor Ut sed velit&page_number=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests"
									],
									"query": [
										{
											"key": "page_size",
											"value": "tempor Ut sed velit",
											"description": "Used for pagination. The number of tests returned in the page."
										},
										{
											"key": "page_number",
											"value": "tempor Ut sed velit",
											"description": "Used for pagination. Which page you want to retrieve. Starts at zero."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create an API test",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      },\n      {\n        \"operator\": \"is\",\n        \"target\": 200,\n        \"type\": \"statusCode\"\n      },\n      {\n        \"operator\": \"is\",\n        \"property\": \"content-type\",\n        \"target\": \"text/html; charset=UTF-8\",\n        \"type\": \"header\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"azure:eastus\",\n    \"aws:eu-west-3\"\n  ],\n  \"message\": \"MY_NOTIFICATION_MESSAGE\",\n  \"name\": \"MY_TEST_NAME\",\n  \"options\": {\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"monitor_options\": {\n      \"include_tags\": true,\n      \"locked\": false,\n      \"new_host_delay\": 300,\n      \"notify_audit\": false,\n      \"notify_no_data\": false,\n      \"renotify_interval\": 0\n    },\n    \"tick_every\": 60\n  },\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ],\n  \"type\": \"api\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/api",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"api"
							]
						},
						"description": "Create a Synthetic API test."
					},
					"response": [
						{
							"name": "OK - Returns the created test details.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      },\n      {\n        \"operator\": \"is\",\n        \"target\": 200,\n        \"type\": \"statusCode\"\n      },\n      {\n        \"operator\": \"is\",\n        \"property\": \"content-type\",\n        \"target\": \"text/html; charset=UTF-8\",\n        \"type\": \"header\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"azure:eastus\",\n    \"aws:eu-west-3\"\n  ],\n  \"message\": \"MY_NOTIFICATION_MESSAGE\",\n  \"name\": \"MY_TEST_NAME\",\n  \"options\": {\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"monitor_options\": {\n      \"include_tags\": true,\n      \"locked\": false,\n      \"new_host_delay\": 300,\n      \"notify_audit\": false,\n      \"notify_no_data\": false,\n      \"renotify_interval\": 0\n    },\n    \"tick_every\": 60\n  },\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ],\n  \"type\": \"api\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"Example test name\",\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": true,\n    \"checkCertificateRevocation\": true,\n    \"ci\": {\n      \"executionRule\": \"non_blocking\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": false,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http1\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": 87780679,\n    \"min_failure_duration\": -32472759,\n    \"min_location_failed\": -5806955,\n    \"monitor_name\": \"et deserunt \",\n    \"monitor_options\": {\n      \"renotify_interval\": 834\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": -50657150,\n      \"interval\": -91565669.0691471\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 384020\n  },\n  \"type\": \"api\",\n  \"message\": \"Notification message\",\n  \"monitor_id\": 12345678,\n  \"public_id\": \"123-abc-456\",\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ]\n}"
						},
						{
							"name": "- JSON format is wrong\n- Creation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      },\n      {\n        \"operator\": \"is\",\n        \"target\": 200,\n        \"type\": \"statusCode\"\n      },\n      {\n        \"operator\": \"is\",\n        \"property\": \"content-type\",\n        \"target\": \"text/html; charset=UTF-8\",\n        \"type\": \"header\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"azure:eastus\",\n    \"aws:eu-west-3\"\n  ],\n  \"message\": \"MY_NOTIFICATION_MESSAGE\",\n  \"name\": \"MY_TEST_NAME\",\n  \"options\": {\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"monitor_options\": {\n      \"include_tags\": true,\n      \"locked\": false,\n      \"new_host_delay\": 300,\n      \"notify_audit\": false,\n      \"notify_no_data\": false,\n      \"renotify_interval\": 0\n    },\n    \"tick_every\": 60\n  },\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ],\n  \"type\": \"api\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Test quota is reached",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      },\n      {\n        \"operator\": \"is\",\n        \"target\": 200,\n        \"type\": \"statusCode\"\n      },\n      {\n        \"operator\": \"is\",\n        \"property\": \"content-type\",\n        \"target\": \"text/html; charset=UTF-8\",\n        \"type\": \"header\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"azure:eastus\",\n    \"aws:eu-west-3\"\n  ],\n  \"message\": \"MY_NOTIFICATION_MESSAGE\",\n  \"name\": \"MY_TEST_NAME\",\n  \"options\": {\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"monitor_options\": {\n      \"include_tags\": true,\n      \"locked\": false,\n      \"new_host_delay\": 300,\n      \"notify_audit\": false,\n      \"notify_no_data\": false,\n      \"renotify_interval\": 0\n    },\n    \"tick_every\": 60\n  },\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ],\n  \"type\": \"api\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      },\n      {\n        \"operator\": \"is\",\n        \"target\": 200,\n        \"type\": \"statusCode\"\n      },\n      {\n        \"operator\": \"is\",\n        \"property\": \"content-type\",\n        \"target\": \"text/html; charset=UTF-8\",\n        \"type\": \"header\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"azure:eastus\",\n    \"aws:eu-west-3\"\n  ],\n  \"message\": \"MY_NOTIFICATION_MESSAGE\",\n  \"name\": \"MY_TEST_NAME\",\n  \"options\": {\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"monitor_options\": {\n      \"include_tags\": true,\n      \"locked\": false,\n      \"new_host_delay\": 300,\n      \"notify_audit\": false,\n      \"notify_no_data\": false,\n      \"renotify_interval\": 0\n    },\n    \"tick_every\": 60\n  },\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ],\n  \"type\": \"api\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      },\n      {\n        \"operator\": \"is\",\n        \"target\": 200,\n        \"type\": \"statusCode\"\n      },\n      {\n        \"operator\": \"is\",\n        \"property\": \"content-type\",\n        \"target\": \"text/html; charset=UTF-8\",\n        \"type\": \"header\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"azure:eastus\",\n    \"aws:eu-west-3\"\n  ],\n  \"message\": \"MY_NOTIFICATION_MESSAGE\",\n  \"name\": \"MY_TEST_NAME\",\n  \"options\": {\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1,\n    \"monitor_options\": {\n      \"include_tags\": true,\n      \"locked\": false,\n      \"new_host_delay\": 300,\n      \"notify_audit\": false,\n      \"notify_no_data\": false,\n      \"renotify_interval\": 0\n    },\n    \"tick_every\": 60\n  },\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ],\n  \"type\": \"api\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get an API test",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"api",
								":public_id"
							],
							"variable": [
								{
									"key": "public_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get the detailed configuration associated with\na Synthetic API test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"Example test name\",\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": true,\n    \"checkCertificateRevocation\": true,\n    \"ci\": {\n      \"executionRule\": \"non_blocking\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": false,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http1\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": 87780679,\n    \"min_failure_duration\": -32472759,\n    \"min_location_failed\": -5806955,\n    \"monitor_name\": \"et deserunt \",\n    \"monitor_options\": {\n      \"renotify_interval\": 834\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": -50657150,\n      \"interval\": -91565669.0691471\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 384020\n  },\n  \"type\": \"api\",\n  \"message\": \"Notification message\",\n  \"monitor_id\": 12345678,\n  \"public_id\": \"123-abc-456\",\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "- Synthetic Monitoring is not activated for the user\n- Test is not owned by the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Edit an API test",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Example test name\",\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": true,\n    \"checkCertificateRevocation\": true,\n    \"ci\": {\n      \"executionRule\": \"non_blocking\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": false,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http1\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": 87780679,\n    \"min_failure_duration\": -32472759,\n    \"min_location_failed\": -5806955,\n    \"monitor_name\": \"et deserunt \",\n    \"monitor_options\": {\n      \"renotify_interval\": 834\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": -50657150,\n      \"interval\": -91565669.0691471\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 384020\n  },\n  \"type\": \"api\",\n  \"message\": \"Notification message\",\n  \"monitor_id\": 12345678,\n  \"public_id\": \"123-abc-456\",\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"api",
								":public_id"
							],
							"variable": [
								{
									"key": "public_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Edit the configuration of a Synthetic API test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Example test name\",\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": true,\n    \"checkCertificateRevocation\": true,\n    \"ci\": {\n      \"executionRule\": \"non_blocking\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": false,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http1\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": 87780679,\n    \"min_failure_duration\": -32472759,\n    \"min_location_failed\": -5806955,\n    \"monitor_name\": \"et deserunt \",\n    \"monitor_options\": {\n      \"renotify_interval\": 834\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": -50657150,\n      \"interval\": -91565669.0691471\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 384020\n  },\n  \"type\": \"api\",\n  \"message\": \"Notification message\",\n  \"monitor_id\": 12345678,\n  \"public_id\": \"123-abc-456\",\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"Example test name\",\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": true,\n    \"checkCertificateRevocation\": true,\n    \"ci\": {\n      \"executionRule\": \"non_blocking\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": false,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http1\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": 87780679,\n    \"min_failure_duration\": -32472759,\n    \"min_location_failed\": -5806955,\n    \"monitor_name\": \"et deserunt \",\n    \"monitor_options\": {\n      \"renotify_interval\": 834\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": -50657150,\n      \"interval\": -91565669.0691471\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 384020\n  },\n  \"type\": \"api\",\n  \"message\": \"Notification message\",\n  \"monitor_id\": 12345678,\n  \"public_id\": \"123-abc-456\",\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ]\n}"
						},
						{
							"name": "- JSON format is wrong\n- Updating sub-type is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Example test name\",\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": true,\n    \"checkCertificateRevocation\": true,\n    \"ci\": {\n      \"executionRule\": \"non_blocking\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": false,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http1\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": 87780679,\n    \"min_failure_duration\": -32472759,\n    \"min_location_failed\": -5806955,\n    \"monitor_name\": \"et deserunt \",\n    \"monitor_options\": {\n      \"renotify_interval\": 834\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": -50657150,\n      \"interval\": -91565669.0691471\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 384020\n  },\n  \"type\": \"api\",\n  \"message\": \"Notification message\",\n  \"monitor_id\": 12345678,\n  \"public_id\": \"123-abc-456\",\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Example test name\",\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": true,\n    \"checkCertificateRevocation\": true,\n    \"ci\": {\n      \"executionRule\": \"non_blocking\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": false,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http1\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": 87780679,\n    \"min_failure_duration\": -32472759,\n    \"min_location_failed\": -5806955,\n    \"monitor_name\": \"et deserunt \",\n    \"monitor_options\": {\n      \"renotify_interval\": 834\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": -50657150,\n      \"interval\": -91565669.0691471\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 384020\n  },\n  \"type\": \"api\",\n  \"message\": \"Notification message\",\n  \"monitor_id\": 12345678,\n  \"public_id\": \"123-abc-456\",\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "- Synthetic Monitoring is not activated for the user\n- Test is not owned by the user\n- Test can't be found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Example test name\",\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": true,\n    \"checkCertificateRevocation\": true,\n    \"ci\": {\n      \"executionRule\": \"non_blocking\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": false,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http1\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": 87780679,\n    \"min_failure_duration\": -32472759,\n    \"min_location_failed\": -5806955,\n    \"monitor_name\": \"et deserunt \",\n    \"monitor_options\": {\n      \"renotify_interval\": 834\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": -50657150,\n      \"interval\": -91565669.0691471\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 384020\n  },\n  \"type\": \"api\",\n  \"message\": \"Notification message\",\n  \"monitor_id\": 12345678,\n  \"public_id\": \"123-abc-456\",\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Example test name\",\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"target\": 1000,\n        \"type\": \"responseTime\"\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://example.com\"\n    }\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": true,\n    \"checkCertificateRevocation\": true,\n    \"ci\": {\n      \"executionRule\": \"non_blocking\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": false,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http1\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": 87780679,\n    \"min_failure_duration\": -32472759,\n    \"min_location_failed\": -5806955,\n    \"monitor_name\": \"et deserunt \",\n    \"monitor_options\": {\n      \"renotify_interval\": 834\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": -50657150,\n      \"interval\": -91565669.0691471\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 384020\n  },\n  \"type\": \"api\",\n  \"message\": \"Notification message\",\n  \"monitor_id\": 12345678,\n  \"public_id\": \"123-abc-456\",\n  \"status\": \"live\",\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"env:production\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a browser test",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"browser"
							]
						},
						"description": "Create a Synthetic browser test."
					},
					"response": [
						{
							"name": "OK - Returns the created test details.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}"
						},
						{
							"name": "- JSON format is wrong\n- Creation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Test quota is reached",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a browser test",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"browser",
								":public_id"
							],
							"variable": [
								{
									"key": "public_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get the detailed configuration (including steps) associated with\na Synthetic browser test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "- Synthetic Monitoring is not activated for the user\n- Test is not owned by the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Edit a browser test",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"browser",
								":public_id"
							],
							"variable": [
								{
									"key": "public_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Edit the configuration of a Synthetic browser test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}"
						},
						{
							"name": "- JSON format is wrong\n- Updating sub-type is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "- Synthetic Monitoring is not activated for the user\n- Test is not owned by the user\n- Test can't be found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"dolore\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"dolor mollit id eu\",\n          \"filename\": \"enim \",\n          \"updatedAt\": \"ad labore d\"\n        },\n        \"key\": {\n          \"content\": \"anim ut consequat eiusmod\",\n          \"filename\": \"non consectetur voluptate\",\n          \"updatedAt\": \"proi\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"velit cillum\",\n      \"dnsServer\": \"sint irure sit commodo\",\n      \"dnsServerPort\": 63263,\n      \"follow_redirects\": true,\n      \"headers\": {\n        \"nulla_735\": \"esse enim velit\",\n        \"nulla_b_\": \"laboris ut\"\n      },\n      \"host\": \"aliquip nostrud\",\n      \"message\": \"Lorem laboris\",\n      \"metadata\": {\n        \"eub0d\": \"sint\",\n        \"exercitation1\": \"ut Duis\"\n      },\n      \"method\": \"dolo\",\n      \"noSavingResponseBody\": false,\n      \"numberOfPackets\": 1,\n      \"persistCookies\": true,\n      \"port\": 82704033,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ipsum83a\": \"ea laborum\",\n          \"irure_8\": \"dolor eiusmod aliqua \",\n          \"esse67f\": \"veniam qui in\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"Duis sed minim quis\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 48414705.45711616,\n      \"url\": \"https://example.com\"\n    },\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"setCookie\": \"anim\",\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"name\": \"Example test name\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": false,\n    \"checkCertificateRevocation\": false,\n    \"ci\": {\n      \"executionRule\": \"skipped\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": false,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -93160400,\n    \"min_failure_duration\": 9338007,\n    \"min_location_failed\": -22553383,\n    \"monitor_name\": \"nostrud dolor ullamco\",\n    \"monitor_options\": {\n      \"renotify_interval\": 261\n    },\n    \"monitor_priority\": 3,\n    \"noScreenshot\": false,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 67368482,\n      \"interval\": 59042710.53770983\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 427884\n  },\n  \"type\": \"browser\",\n  \"message\": \"\",\n  \"monitor_id\": -23388126,\n  \"public_id\": \"cupidatat ipsum\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"proident dolore ex\",\n      \"noScreenshot\": true,\n      \"params\": {},\n      \"timeout\": 70509439,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": true,\n      \"isCritical\": true,\n      \"name\": \"adipisicing volupt\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": -22942790,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"tags\": [\n    \"env:prod\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a browser test's latest results summaries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results?from_ts=-62147425&to_ts=-62147425&probe_dc=dolor cillum in&probe_dc=proident",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"browser",
								":public_id",
								"results"
							],
							"query": [
								{
									"key": "from_ts",
									"value": "-62147425",
									"description": "Timestamp in milliseconds from which to start querying results."
								},
								{
									"key": "to_ts",
									"value": "-62147425",
									"description": "Timestamp in milliseconds up to which to query results."
								},
								{
									"key": "probe_dc",
									"value": "dolor cillum in",
									"description": "Locations for which to query results."
								},
								{
									"key": "probe_dc",
									"value": "proident",
									"description": "Locations for which to query results."
								}
							],
							"variable": [
								{
									"key": "public_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get the last 150 test results summaries for a given Synthetic browser test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results?from_ts=-62147425&to_ts=-62147425&probe_dc=proident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id",
										"results"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds from which to start querying results."
										},
										{
											"key": "to_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds up to which to query results."
										},
										{
											"key": "probe_dc",
											"value": "proident",
											"description": "Locations for which to query results."
										}
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"last_timestamp_fetched\": 65993172,\n  \"results\": [\n    {\n      \"check_time\": -9878780.847290918,\n      \"probe_dc\": \"i\",\n      \"result\": {\n        \"device\": {\n          \"id\": \"laptop_large\",\n          \"name\": \"\",\n          \"height\": 0,\n          \"width\": 0,\n          \"isMobile\": true\n        },\n        \"duration\": 65442267.72030264,\n        \"errorCount\": 64702081,\n        \"stepCountCompleted\": -72535032,\n        \"stepCountTotal\": 82995949\n      },\n      \"result_id\": \"labore\",\n      \"status\": 2\n    },\n    {\n      \"check_time\": -2600599.1306800246,\n      \"probe_dc\": \"ex et tempor\",\n      \"result\": {\n        \"device\": {\n          \"id\": \"laptop_large\",\n          \"name\": \"\",\n          \"height\": 0,\n          \"width\": 0,\n          \"isMobile\": false\n        },\n        \"duration\": 61853655.027596265,\n        \"errorCount\": -10809730,\n        \"stepCountCompleted\": 76168853,\n        \"stepCountTotal\": 95663724\n      },\n      \"result_id\": \"occaecat\",\n      \"status\": 1\n    }\n  ]\n}"
						},
						{
							"name": "forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results?from_ts=-62147425&to_ts=-62147425&probe_dc=proident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id",
										"results"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds from which to start querying results."
										},
										{
											"key": "to_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds up to which to query results."
										},
										{
											"key": "probe_dc",
											"value": "proident",
											"description": "Locations for which to query results."
										}
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "- Synthetic Monitoring is not activated for the user\n- Test is not owned by the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results?from_ts=-62147425&to_ts=-62147425&probe_dc=proident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id",
										"results"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds from which to start querying results."
										},
										{
											"key": "to_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds up to which to query results."
										},
										{
											"key": "probe_dc",
											"value": "proident",
											"description": "Locations for which to query results."
										}
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results?from_ts=-62147425&to_ts=-62147425&probe_dc=proident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id",
										"results"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds from which to start querying results."
										},
										{
											"key": "to_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds up to which to query results."
										},
										{
											"key": "probe_dc",
											"value": "proident",
											"description": "Locations for which to query results."
										}
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a browser test result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results/:result_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"browser",
								":public_id",
								"results",
								":result_id"
							],
							"variable": [
								{
									"key": "public_id",
									"value": "tempor Ut sed velit"
								},
								{
									"key": "result_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get a specific full result from a given Synthetic browser test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id",
										"results",
										":result_id"
									],
									"variable": [
										{
											"key": "public_id"
										},
										{
											"key": "result_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id",
										"results",
										":result_id"
									],
									"variable": [
										{
											"key": "public_id"
										},
										{
											"key": "result_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "- Synthetic Monitoring is not activated for the user\n- Test or result is not owned by the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id",
										"results",
										":result_id"
									],
									"variable": [
										{
											"key": "public_id"
										},
										{
											"key": "result_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id",
										"results",
										":result_id"
									],
									"variable": [
										{
											"key": "public_id"
										},
										{
											"key": "result_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete tests",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"delete"
							]
						},
						"description": "Delete multiple Synthetic tests by ID."
					},
					"response": [
						{
							"name": "OK.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deleted_tests\": [\n    {\n      \"deleted_at\": \"1946-09-13T21:38:01.793Z\",\n      \"public_id\": \"culpa commodo officia consequat\"\n    },\n    {\n      \"deleted_at\": \"1961-09-17T12:51:57.031Z\",\n      \"public_id\": \"in ullamco eu temp\"\n    }\n  ]\n}"
						},
						{
							"name": "- JSON format is wrong\n- Test cannot be deleted as it's used elsewhere (as a sub-test or in an uptime widget)\n- Some IDs are not owned by the user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "- Tests to be deleted can't be found\n- Synthetic is not activated for the user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"delete"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Trigger Synthetic tests",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tests\": [\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"aliquip in ex do\"\n          },\n          \"provider\": {\n            \"name\": \"nostrud culpa\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"esse\",\n          \"commitSha\": \"occaecat incididunt aute exercitation\"\n        }\n      }\n    },\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"pariatur ullamco sed\"\n          },\n          \"provider\": {\n            \"name\": \"adipisicing exercitation laborum non\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"tempor fugiat consequat Lorem\",\n          \"commitSha\": \"esse aliqua\"\n        }\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/trigger",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"trigger"
							]
						},
						"description": "Trigger a set of Synthetic tests."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tests\": [\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"aliquip in ex do\"\n          },\n          \"provider\": {\n            \"name\": \"nostrud culpa\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"esse\",\n          \"commitSha\": \"occaecat incididunt aute exercitation\"\n        }\n      }\n    },\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"pariatur ullamco sed\"\n          },\n          \"provider\": {\n            \"name\": \"adipisicing exercitation laborum non\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"tempor fugiat consequat Lorem\",\n          \"commitSha\": \"esse aliqua\"\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/trigger",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"trigger"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"batch_id\": \"anim quis\",\n  \"locations\": [\n    {\n      \"id\": -79104764,\n      \"name\": \"laborum\"\n    },\n    {\n      \"id\": -12473023,\n      \"name\": \"ullamco eu\"\n    }\n  ],\n  \"results\": [\n    {\n      \"device\": \"laptop_large\",\n      \"location\": -53475818,\n      \"public_id\": \"Excepteur et\",\n      \"result_id\": \"in\"\n    },\n    {\n      \"device\": \"laptop_large\",\n      \"location\": 59458053,\n      \"public_id\": \"ut labore\",\n      \"result_id\": \"quis tempor cillum est eu\"\n    }\n  ],\n  \"triggered_check_ids\": [\n    \"in irure culpa\",\n    \"sit ad do Ut esse\"\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tests\": [\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"aliquip in ex do\"\n          },\n          \"provider\": {\n            \"name\": \"nostrud culpa\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"esse\",\n          \"commitSha\": \"occaecat incididunt aute exercitation\"\n        }\n      }\n    },\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"pariatur ullamco sed\"\n          },\n          \"provider\": {\n            \"name\": \"adipisicing exercitation laborum non\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"tempor fugiat consequat Lorem\",\n          \"commitSha\": \"esse aliqua\"\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/trigger",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"trigger"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tests\": [\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"aliquip in ex do\"\n          },\n          \"provider\": {\n            \"name\": \"nostrud culpa\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"esse\",\n          \"commitSha\": \"occaecat incididunt aute exercitation\"\n        }\n      }\n    },\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"pariatur ullamco sed\"\n          },\n          \"provider\": {\n            \"name\": \"adipisicing exercitation laborum non\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"tempor fugiat consequat Lorem\",\n          \"commitSha\": \"esse aliqua\"\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/trigger",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"trigger"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Trigger tests from CI/CD pipelines",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tests\": [\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"allowInsecureCertificates\": true,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"commo\",\n      \"bodyType\": \"reprehenderit elit magna\",\n      \"cookies\": \"elit magna in\",\n      \"deviceIds\": [\n        \"laptop_large\",\n        \"laptop_large\"\n      ],\n      \"followRedirects\": true,\n      \"headers\": {\n        \"ametaeb\": \"veniam culpa Excepteur amet\",\n        \"esta\": \"exercitation eu nulla irure\"\n      },\n      \"locations\": [\n        \"aws:eu-west-3\"\n      ],\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"velit veniam quis\"\n          },\n          \"provider\": {\n            \"name\": \"amet\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"cillum nostrud\",\n          \"commitSha\": \"esse anim mollit labore\"\n        }\n      },\n      \"retry\": {\n        \"count\": 44207270,\n        \"interval\": 51741128.422602236\n      },\n      \"startUrl\": \"sed pariatur reprehenderit\",\n      \"variables\": {\n        \"eu_4\": \"voluptate Duis Excepteur\",\n        \"reprehenderit385\": \"mollit i\"\n      }\n    },\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"allowInsecureCertificates\": true,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"officia consectetur\",\n      \"bodyType\": \"in consequat\",\n      \"cookies\": \"exercitation non proident\",\n      \"deviceIds\": [\n        \"laptop_large\",\n        \"laptop_large\"\n      ],\n      \"followRedirects\": false,\n      \"headers\": {\n        \"commodo__\": \"occaecat cupidatat elit\",\n        \"utb78\": \"consequat\",\n        \"est_cc\": \"ullamco Ut officia voluptate veniam\"\n      },\n      \"locations\": [\n        \"aws:eu-west-3\"\n      ],\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"dolor officia fugiat tempor\"\n          },\n          \"provider\": {\n            \"name\": \"occaecat nisi i\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"anim sint\",\n          \"commitSha\": \"ut sunt in\"\n        }\n      },\n      \"retry\": {\n        \"count\": -91157506,\n        \"interval\": 92707099.30434671\n      },\n      \"startUrl\": \"nostrud elit ali\",\n      \"variables\": {\n        \"id0_c\": \"ut officia ea\",\n        \"sunt2b\": \"voluptate commodo velit elit eu\",\n        \"laborum_ff\": \"quis laboris nisi ut\",\n        \"id_ba7\": \"dolore veniam\",\n        \"non59\": \"officia culpa Lorem nisi proident\"\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/trigger/ci",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"trigger",
								"ci"
							]
						},
						"description": "Trigger a set of Synthetic tests for continuous integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tests\": [\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"allowInsecureCertificates\": true,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"commo\",\n      \"bodyType\": \"reprehenderit elit magna\",\n      \"cookies\": \"elit magna in\",\n      \"deviceIds\": [\n        \"laptop_large\",\n        \"laptop_large\"\n      ],\n      \"followRedirects\": true,\n      \"headers\": {\n        \"ametaeb\": \"veniam culpa Excepteur amet\",\n        \"esta\": \"exercitation eu nulla irure\"\n      },\n      \"locations\": [\n        \"aws:eu-west-3\"\n      ],\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"velit veniam quis\"\n          },\n          \"provider\": {\n            \"name\": \"amet\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"cillum nostrud\",\n          \"commitSha\": \"esse anim mollit labore\"\n        }\n      },\n      \"retry\": {\n        \"count\": 44207270,\n        \"interval\": 51741128.422602236\n      },\n      \"startUrl\": \"sed pariatur reprehenderit\",\n      \"variables\": {\n        \"eu_4\": \"voluptate Duis Excepteur\",\n        \"reprehenderit385\": \"mollit i\"\n      }\n    },\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"allowInsecureCertificates\": true,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"officia consectetur\",\n      \"bodyType\": \"in consequat\",\n      \"cookies\": \"exercitation non proident\",\n      \"deviceIds\": [\n        \"laptop_large\",\n        \"laptop_large\"\n      ],\n      \"followRedirects\": false,\n      \"headers\": {\n        \"commodo__\": \"occaecat cupidatat elit\",\n        \"utb78\": \"consequat\",\n        \"est_cc\": \"ullamco Ut officia voluptate veniam\"\n      },\n      \"locations\": [\n        \"aws:eu-west-3\"\n      ],\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"dolor officia fugiat tempor\"\n          },\n          \"provider\": {\n            \"name\": \"occaecat nisi i\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"anim sint\",\n          \"commitSha\": \"ut sunt in\"\n        }\n      },\n      \"retry\": {\n        \"count\": -91157506,\n        \"interval\": 92707099.30434671\n      },\n      \"startUrl\": \"nostrud elit ali\",\n      \"variables\": {\n        \"id0_c\": \"ut officia ea\",\n        \"sunt2b\": \"voluptate commodo velit elit eu\",\n        \"laborum_ff\": \"quis laboris nisi ut\",\n        \"id_ba7\": \"dolore veniam\",\n        \"non59\": \"officia culpa Lorem nisi proident\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/trigger/ci",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"trigger",
										"ci"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"batch_id\": \"anim quis\",\n  \"locations\": [\n    {\n      \"id\": -79104764,\n      \"name\": \"laborum\"\n    },\n    {\n      \"id\": -12473023,\n      \"name\": \"ullamco eu\"\n    }\n  ],\n  \"results\": [\n    {\n      \"device\": \"laptop_large\",\n      \"location\": -53475818,\n      \"public_id\": \"Excepteur et\",\n      \"result_id\": \"in\"\n    },\n    {\n      \"device\": \"laptop_large\",\n      \"location\": 59458053,\n      \"public_id\": \"ut labore\",\n      \"result_id\": \"quis tempor cillum est eu\"\n    }\n  ],\n  \"triggered_check_ids\": [\n    \"in irure culpa\",\n    \"sit ad do Ut esse\"\n  ]\n}"
						},
						{
							"name": "JSON format is wrong",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tests\": [\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"allowInsecureCertificates\": true,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"commo\",\n      \"bodyType\": \"reprehenderit elit magna\",\n      \"cookies\": \"elit magna in\",\n      \"deviceIds\": [\n        \"laptop_large\",\n        \"laptop_large\"\n      ],\n      \"followRedirects\": true,\n      \"headers\": {\n        \"ametaeb\": \"veniam culpa Excepteur amet\",\n        \"esta\": \"exercitation eu nulla irure\"\n      },\n      \"locations\": [\n        \"aws:eu-west-3\"\n      ],\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"velit veniam quis\"\n          },\n          \"provider\": {\n            \"name\": \"amet\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"cillum nostrud\",\n          \"commitSha\": \"esse anim mollit labore\"\n        }\n      },\n      \"retry\": {\n        \"count\": 44207270,\n        \"interval\": 51741128.422602236\n      },\n      \"startUrl\": \"sed pariatur reprehenderit\",\n      \"variables\": {\n        \"eu_4\": \"voluptate Duis Excepteur\",\n        \"reprehenderit385\": \"mollit i\"\n      }\n    },\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"allowInsecureCertificates\": true,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"officia consectetur\",\n      \"bodyType\": \"in consequat\",\n      \"cookies\": \"exercitation non proident\",\n      \"deviceIds\": [\n        \"laptop_large\",\n        \"laptop_large\"\n      ],\n      \"followRedirects\": false,\n      \"headers\": {\n        \"commodo__\": \"occaecat cupidatat elit\",\n        \"utb78\": \"consequat\",\n        \"est_cc\": \"ullamco Ut officia voluptate veniam\"\n      },\n      \"locations\": [\n        \"aws:eu-west-3\"\n      ],\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"dolor officia fugiat tempor\"\n          },\n          \"provider\": {\n            \"name\": \"occaecat nisi i\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"anim sint\",\n          \"commitSha\": \"ut sunt in\"\n        }\n      },\n      \"retry\": {\n        \"count\": -91157506,\n        \"interval\": 92707099.30434671\n      },\n      \"startUrl\": \"nostrud elit ali\",\n      \"variables\": {\n        \"id0_c\": \"ut officia ea\",\n        \"sunt2b\": \"voluptate commodo velit elit eu\",\n        \"laborum_ff\": \"quis laboris nisi ut\",\n        \"id_ba7\": \"dolore veniam\",\n        \"non59\": \"officia culpa Lorem nisi proident\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/trigger/ci",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"trigger",
										"ci"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tests\": [\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"allowInsecureCertificates\": true,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"commo\",\n      \"bodyType\": \"reprehenderit elit magna\",\n      \"cookies\": \"elit magna in\",\n      \"deviceIds\": [\n        \"laptop_large\",\n        \"laptop_large\"\n      ],\n      \"followRedirects\": true,\n      \"headers\": {\n        \"ametaeb\": \"veniam culpa Excepteur amet\",\n        \"esta\": \"exercitation eu nulla irure\"\n      },\n      \"locations\": [\n        \"aws:eu-west-3\"\n      ],\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"velit veniam quis\"\n          },\n          \"provider\": {\n            \"name\": \"amet\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"cillum nostrud\",\n          \"commitSha\": \"esse anim mollit labore\"\n        }\n      },\n      \"retry\": {\n        \"count\": 44207270,\n        \"interval\": 51741128.422602236\n      },\n      \"startUrl\": \"sed pariatur reprehenderit\",\n      \"variables\": {\n        \"eu_4\": \"voluptate Duis Excepteur\",\n        \"reprehenderit385\": \"mollit i\"\n      }\n    },\n    {\n      \"public_id\": \"aaa-aaa-aaa\",\n      \"allowInsecureCertificates\": true,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"officia consectetur\",\n      \"bodyType\": \"in consequat\",\n      \"cookies\": \"exercitation non proident\",\n      \"deviceIds\": [\n        \"laptop_large\",\n        \"laptop_large\"\n      ],\n      \"followRedirects\": false,\n      \"headers\": {\n        \"commodo__\": \"occaecat cupidatat elit\",\n        \"utb78\": \"consequat\",\n        \"est_cc\": \"ullamco Ut officia voluptate veniam\"\n      },\n      \"locations\": [\n        \"aws:eu-west-3\"\n      ],\n      \"metadata\": {\n        \"ci\": {\n          \"pipeline\": {\n            \"url\": \"dolor officia fugiat tempor\"\n          },\n          \"provider\": {\n            \"name\": \"occaecat nisi i\"\n          }\n        },\n        \"git\": {\n          \"branch\": \"anim sint\",\n          \"commitSha\": \"ut sunt in\"\n        }\n      },\n      \"retry\": {\n        \"count\": -91157506,\n        \"interval\": 92707099.30434671\n      },\n      \"startUrl\": \"nostrud elit ali\",\n      \"variables\": {\n        \"id0_c\": \"ut officia ea\",\n        \"sunt2b\": \"voluptate commodo velit elit eu\",\n        \"laborum_ff\": \"quis laboris nisi ut\",\n        \"id_ba7\": \"dolore veniam\",\n        \"non59\": \"officia culpa Lorem nisi proident\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/trigger/ci",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"trigger",
										"ci"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a test configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								":public_id"
							],
							"variable": [
								{
									"key": "public_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get the detailed configuration associated with a Synthetic test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"config\": {\n    \"configVariables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ],\n    \"request\": {\n      \"allow_insecure\": false,\n      \"basicAuth\": {\n        \"password\": \"PaSSw0RD!\",\n        \"username\": \"my_username\",\n        \"type\": \"web\"\n      },\n      \"body\": \"deserunt non\",\n      \"bodyType\": \"text/plain\",\n      \"callType\": \"unary\",\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"ad dolor\",\n          \"filename\": \"culpa adipisicing\",\n          \"updatedAt\": \"ipsum magna irure aliquip\"\n        },\n        \"key\": {\n          \"content\": \"in labore\",\n          \"filename\": \"sit magna non dolore\",\n          \"updatedAt\": \"ipsum aute in\"\n        }\n      },\n      \"compressedJsonDescriptor\": \"co\",\n      \"dnsServer\": \"adipisicing dolore fugiat\",\n      \"dnsServerPort\": 43085,\n      \"follow_redirects\": false,\n      \"headers\": {\n        \"dolor77f\": \"laboris aliquip in\",\n        \"Excepteur5\": \"in ullamco est repr\",\n        \"cupidatatb2\": \"ex magna dolore\"\n      },\n      \"host\": \"qui eu\",\n      \"message\": \"dolore anim tempor minim dolor\",\n      \"metadata\": {\n        \"cillum_f\": \"elit ad ex ven\",\n        \"quicbd\": \"ut ipsum Duis cillum dolor\",\n        \"dolore2_7\": \"pariatur adipisicing enim dolore nulla\"\n      },\n      \"method\": \"deserunt\",\n      \"noSavingResponseBody\": true,\n      \"numberOfPackets\": 9,\n      \"persistCookies\": false,\n      \"port\": -81939613,\n      \"proxy\": {\n        \"url\": \"https://example.com\",\n        \"headers\": {\n          \"ut_a\": \"ut\"\n        }\n      },\n      \"query\": {},\n      \"servername\": \"adipisicing id dolore\",\n      \"service\": \"Greeter\",\n      \"shouldTrackHops\": false,\n      \"timeout\": 10817249.274777964,\n      \"url\": \"https://example.com\"\n    },\n    \"variables\": [\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      },\n      {\n        \"description\": \"Example for the variable.\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  \"creator\": {\n    \"email\": \"enim exercitation commodo in\",\n    \"handle\": \"et nulla eu\",\n    \"name\": \"cupidatat proident\"\n  },\n  \"locations\": [\n    \"aws:eu-west-3\"\n  ],\n  \"message\": \"eu do sunt commodo aliquip\",\n  \"monitor_id\": -1517547,\n  \"name\": \"deserunt amet occaecat\",\n  \"options\": {\n    \"accept_self_signed\": true,\n    \"allow_insecure\": true,\n    \"checkCertificateRevocation\": true,\n    \"ci\": {\n      \"executionRule\": \"non_blocking\"\n    },\n    \"device_ids\": [\n      \"laptop_large\",\n      \"laptop_large\"\n    ],\n    \"disableCors\": true,\n    \"disableCsp\": true,\n    \"follow_redirects\": true,\n    \"httpVersion\": \"http2\",\n    \"ignoreServerCertificateError\": false,\n    \"initialNavigationTimeout\": -26222184,\n    \"min_failure_duration\": 76083858,\n    \"min_location_failed\": -39662994,\n    \"monitor_name\": \"paria\",\n    \"monitor_options\": {\n      \"renotify_interval\": 214\n    },\n    \"monitor_priority\": 4,\n    \"noScreenshot\": true,\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ],\n    \"retry\": {\n      \"count\": 1859540,\n      \"interval\": -51339928.952870026\n    },\n    \"rumSettings\": {\n      \"applicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"clientTokenId\": 12345,\n      \"isEnabled\": true\n    },\n    \"scheduling\": {\n      \"timeframes\": [\n        {\n          \"day\": 1,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        },\n        {\n          \"day\": 3,\n          \"from\": \"07:00\",\n          \"to\": \"16:00\"\n        }\n      ],\n      \"timezone\": \"America/New_York\"\n    },\n    \"tick_every\": 74879\n  },\n  \"public_id\": \"magna\",\n  \"status\": \"live\",\n  \"steps\": [\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"ea laborum ve\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": 51909556,\n      \"type\": \"assertElementContent\"\n    },\n    {\n      \"allowFailure\": false,\n      \"isCritical\": true,\n      \"name\": \"pariatur reprehenderit do\",\n      \"noScreenshot\": false,\n      \"params\": {},\n      \"timeout\": 72919471,\n      \"type\": \"assertElementContent\"\n    }\n  ],\n  \"subtype\": \"http\",\n  \"tags\": [\n    \"dolor Ut anim nisi ea\",\n    \"dolore anim ipsum pariatur\"\n  ],\n  \"type\": \"browser\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "- Synthetic is not activated for the user\n- Test is not owned by the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get an API test's latest results summaries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results?from_ts=-62147425&to_ts=-62147425&probe_dc=dolor cillum in&probe_dc=proident",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								":public_id",
								"results"
							],
							"query": [
								{
									"key": "from_ts",
									"value": "-62147425",
									"description": "Timestamp in milliseconds from which to start querying results."
								},
								{
									"key": "to_ts",
									"value": "-62147425",
									"description": "Timestamp in milliseconds up to which to query results."
								},
								{
									"key": "probe_dc",
									"value": "dolor cillum in",
									"description": "Locations for which to query results."
								},
								{
									"key": "probe_dc",
									"value": "proident",
									"description": "Locations for which to query results."
								}
							],
							"variable": [
								{
									"key": "public_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get the last 150 test results summaries for a given Synthetic API test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results?from_ts=-62147425&to_ts=-62147425&probe_dc=proident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"results"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds from which to start querying results."
										},
										{
											"key": "to_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds up to which to query results."
										},
										{
											"key": "probe_dc",
											"value": "proident",
											"description": "Locations for which to query results."
										}
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"last_timestamp_fetched\": -96513461,\n  \"results\": [\n    {\n      \"check_time\": -32755115.034457833,\n      \"probe_dc\": \"ex aliquip elit\",\n      \"result\": {\n        \"passed\": false,\n        \"timings\": {\n          \"dns\": -97211663.12516338,\n          \"download\": 69787304.59130791,\n          \"firstByte\": 7063435.657899752,\n          \"handshake\": 58647320.32120216,\n          \"redirect\": -39297333.858247004,\n          \"ssl\": 39645260.31412804,\n          \"tcp\": 20665973.93464838,\n          \"total\": 20845012.956068933,\n          \"wait\": -39822886.67901743\n        }\n      },\n      \"result_id\": \"ipsum in\",\n      \"status\": 0\n    },\n    {\n      \"check_time\": -45161819.38632564,\n      \"probe_dc\": \"esse ipsum pariatur do et\",\n      \"result\": {\n        \"passed\": true,\n        \"timings\": {\n          \"dns\": -36593755.469836965,\n          \"download\": 12698868.215193078,\n          \"firstByte\": 33271607.027867228,\n          \"handshake\": -31538483.54689482,\n          \"redirect\": -78495392.91587453,\n          \"ssl\": 64556481.18909925,\n          \"tcp\": -77981358.8267188,\n          \"total\": 41359471.650199294,\n          \"wait\": 38487717.98797688\n        }\n      },\n      \"result_id\": \"commodo adipisicing in exercitation\",\n      \"status\": 2\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results?from_ts=-62147425&to_ts=-62147425&probe_dc=proident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"results"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds from which to start querying results."
										},
										{
											"key": "to_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds up to which to query results."
										},
										{
											"key": "probe_dc",
											"value": "proident",
											"description": "Locations for which to query results."
										}
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "- Synthetic is not activated for the user\n- Test is not owned by the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results?from_ts=-62147425&to_ts=-62147425&probe_dc=proident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"results"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds from which to start querying results."
										},
										{
											"key": "to_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds up to which to query results."
										},
										{
											"key": "probe_dc",
											"value": "proident",
											"description": "Locations for which to query results."
										}
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results?from_ts=-62147425&to_ts=-62147425&probe_dc=proident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"results"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds from which to start querying results."
										},
										{
											"key": "to_ts",
											"value": "-62147425",
											"description": "Timestamp in milliseconds up to which to query results."
										},
										{
											"key": "probe_dc",
											"value": "proident",
											"description": "Locations for which to query results."
										}
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get an API test result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results/:result_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								":public_id",
								"results",
								":result_id"
							],
							"variable": [
								{
									"key": "public_id",
									"value": "tempor Ut sed velit"
								},
								{
									"key": "result_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get a specific full result from a given Synthetic API test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"results",
										":result_id"
									],
									"variable": [
										{
											"key": "public_id"
										},
										{
											"key": "result_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"check\": {\n    \"config\": {\n      \"configVariables\": [\n        {\n          \"description\": \"Example for the variable.\",\n          \"type\": \"string\"\n        },\n        {\n          \"description\": \"Example for the variable.\",\n          \"type\": \"string\"\n        }\n      ],\n      \"request\": {\n        \"allow_insecure\": false,\n        \"basicAuth\": {\n          \"password\": \"PaSSw0RD!\",\n          \"username\": \"my_username\",\n          \"type\": \"web\"\n        },\n        \"body\": \"proident\",\n        \"bodyType\": \"text/plain\",\n        \"callType\": \"unary\",\n        \"certificate\": {\n          \"cert\": {\n            \"content\": \"reprehenderit labore Ut sed mollit\",\n            \"filename\": \"Duis consectetur incididunt eiusmod\",\n            \"updatedAt\": \"aliquip in\"\n          },\n          \"key\": {\n            \"content\": \"consequat sint nulla aute aliquip\",\n            \"filename\": \"non nisi\",\n            \"updatedAt\": \"et\"\n          }\n        },\n        \"compressedJsonDescriptor\": \"dolore\",\n        \"dnsServer\": \"elit nostrud in adipisic\",\n        \"dnsServerPort\": 60578,\n        \"follow_redirects\": false,\n        \"headers\": {\n          \"proident_69\": \"quis dolor occaecat\"\n        },\n        \"host\": \"laborum laboris\",\n        \"message\": \"aliqua ea laborum laboris\",\n        \"metadata\": {\n          \"dolor_d\": \"veniam nostrud anim nulla\",\n          \"labore_7c6\": \"consequat eu\",\n          \"sed002\": \"Excepteur eiusmod adipisicing\"\n        },\n        \"method\": \"et irure\",\n        \"noSavingResponseBody\": false,\n        \"numberOfPackets\": 9,\n        \"persistCookies\": false,\n        \"port\": 99104800,\n        \"proxy\": {\n          \"url\": \"https://example.com\",\n          \"headers\": {\n            \"ead\": \"i\"\n          }\n        },\n        \"query\": {},\n        \"servername\": \"cillum enim adipisicing\",\n        \"service\": \"Greeter\",\n        \"shouldTrackHops\": true,\n        \"timeout\": -43666416.92792323,\n        \"url\": \"https://example.com\"\n      },\n      \"variables\": [\n        {\n          \"description\": \"Example for the variable.\",\n          \"type\": \"string\"\n        },\n        {\n          \"description\": \"Example for the variable.\",\n          \"type\": \"string\"\n        }\n      ]\n    }\n  },\n  \"check_time\": -61984290.348021574,\n  \"check_version\": -35585398,\n  \"probe_dc\": \"Duis aute\",\n  \"result\": {\n    \"cert\": {\n      \"cipher\": \"laborum dolore elit reprehenderit\",\n      \"exponent\": -97057115.16341409,\n      \"extKeyUsage\": [\n        \"e\",\n        \"non nulla\"\n      ],\n      \"fingerprint\": \"enim\",\n      \"fingerprint256\": \"commodo Duis elit culpa\",\n      \"issuer\": {\n        \"C\": \"id\",\n        \"CN\": \"dolor esse\",\n        \"L\": \"Lorem magna\",\n        \"O\": \"adipisicing ullamco\",\n        \"OU\": \"nostrud labore\",\n        \"ST\": \"proident consequat ut\"\n      },\n      \"modulus\": \"ut dolore cupidatat officia\",\n      \"protocol\": \"cillum dolor commodo sit\",\n      \"serialNumber\": \"velit\",\n      \"subject\": {\n        \"C\": \"aliquip ad voluptate\",\n        \"CN\": \"irure\",\n        \"L\": \"elit\",\n        \"O\": \"in\",\n        \"OU\": \"cillum dolor dolor aliquip nulla\",\n        \"ST\": \"mollit velit et\",\n        \"altName\": \"veniam eu mollit irure\"\n      },\n      \"validFrom\": \"1993-10-19T21:25:09.532Z\",\n      \"validTo\": \"2015-01-05T06:21:16.689Z\"\n    },\n    \"eventType\": \"finished_with_error\",\n    \"failure\": {\n      \"code\": \"DECRYPTION\",\n      \"message\": \"Error during DNS resolution (ENOTFOUND).\"\n    },\n    \"httpStatusCode\": 81890255,\n    \"requestHeaders\": {\n      \"Ut2\": {},\n      \"ad_29\": {}\n    },\n    \"responseBody\": \"Excepteur laboris Ut dolor\",\n    \"responseHeaders\": {\n      \"ut19b\": {\n        \"description\": \"Returned request header.\"\n      },\n      \"Ut_270\": {\n        \"description\": \"Returned request header.\"\n      }\n    },\n    \"responseSize\": -51226186,\n    \"timings\": {\n      \"dns\": 31944439.48881416,\n      \"download\": -87539924.41719314,\n      \"firstByte\": -96589047.25818287,\n      \"handshake\": 84645232.54590705,\n      \"redirect\": -32741896.0310553,\n      \"ssl\": -93300794.33204812,\n      \"tcp\": 65643.03422442079,\n      \"total\": 82914630.9958055,\n      \"wait\": 29723058.510239527\n    }\n  },\n  \"result_id\": \"culpa adipisicing consectetur sit\",\n  \"status\": 1\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"results",
										":result_id"
									],
									"variable": [
										{
											"key": "public_id"
										},
										{
											"key": "result_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "- Synthetic Monitoring is not activated for the user\n- Test or result is not owned by the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"results",
										":result_id"
									],
									"variable": [
										{
											"key": "public_id"
										},
										{
											"key": "result_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"results",
										":result_id"
									],
									"variable": [
										{
											"key": "public_id"
										},
										{
											"key": "result_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Pause or start a test",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"new_status\": \"live\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								":public_id",
								"status"
							],
							"variable": [
								{
									"key": "public_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Pause or start a Synthetic test by changing the status."
					},
					"response": [
						{
							"name": "OK - Returns a boolean indicating if the update was successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"new_status\": \"live\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"status"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "true"
						},
						{
							"name": "JSON format is wrong.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"new_status\": \"live\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"status"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"new_status\": \"live\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"status"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "- Synthetic Monitoring is not activated for the user\n- Test is not owned by the user",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"new_status\": \"live\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"status"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"new_status\": \"live\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"status"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all global variables",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/variables",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"variables"
							]
						},
						"description": "Get the list of all Synthetic global variables."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"variables\": [\n    {\n      \"description\": \"Example description\",\n      \"name\": \"MY_VARIABLE\",\n      \"tags\": [\n        \"team:front\",\n        \"test:workflow-1\"\n      ],\n      \"value\": {\n        \"secure\": true,\n        \"value\": \"value\"\n      },\n      \"attributes\": {\n        \"restricted_roles\": [\n          \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n        ]\n      },\n      \"id\": \"id Ut Excepteur commodo consectetur\",\n      \"parse_test_options\": {\n        \"type\": \"http_body\",\n        \"field\": \"content-type\",\n        \"localVariableName\": \"LOCAL_VARIABLE\",\n        \"parser\": {\n          \"type\": \"regex\",\n          \"value\": \".*\"\n        }\n      },\n      \"parse_test_public_id\": \"abc-def-123\"\n    },\n    {\n      \"description\": \"Example description\",\n      \"name\": \"MY_VARIABLE\",\n      \"tags\": [\n        \"team:front\",\n        \"test:workflow-1\"\n      ],\n      \"value\": {\n        \"secure\": true,\n        \"value\": \"value\"\n      },\n      \"attributes\": {\n        \"restricted_roles\": [\n          \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n        ]\n      },\n      \"id\": \"consectetur enim magna\",\n      \"parse_test_options\": {\n        \"type\": \"http_body\",\n        \"field\": \"content-type\",\n        \"localVariableName\": \"LOCAL_VARIABLE\",\n        \"parser\": {\n          \"type\": \"regex\",\n          \"value\": \".*\"\n        }\n      },\n      \"parse_test_public_id\": \"abc-def-123\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a global variable",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Example description\",\n  \"name\": \"MY_VARIABLE\",\n  \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n  ],\n  \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n  },\n  \"attributes\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"id\": \"anim irure id cupidatat\",\n  \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"field\": \"content-type\",\n    \"localVariableName\": \"LOCAL_VARIABLE\",\n    \"parser\": {\n      \"type\": \"regex\",\n      \"value\": \".*\"\n    }\n  },\n  \"parse_test_public_id\": \"abc-def-123\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/variables",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"variables"
							]
						},
						"description": "Create a Synthetic global variable."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Example description\",\n  \"name\": \"MY_VARIABLE\",\n  \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n  ],\n  \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n  },\n  \"attributes\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"id\": \"anim irure id cupidatat\",\n  \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"field\": \"content-type\",\n    \"localVariableName\": \"LOCAL_VARIABLE\",\n    \"parser\": {\n      \"type\": \"regex\",\n      \"value\": \".*\"\n    }\n  },\n  \"parse_test_public_id\": \"abc-def-123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"description\": \"Example description\",\n  \"name\": \"MY_VARIABLE\",\n  \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n  ],\n  \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n  },\n  \"attributes\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"id\": \"anim irure id cupidatat\",\n  \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"field\": \"content-type\",\n    \"localVariableName\": \"LOCAL_VARIABLE\",\n    \"parser\": {\n      \"type\": \"regex\",\n      \"value\": \".*\"\n    }\n  },\n  \"parse_test_public_id\": \"abc-def-123\"\n}"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Example description\",\n  \"name\": \"MY_VARIABLE\",\n  \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n  ],\n  \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n  },\n  \"attributes\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"id\": \"anim irure id cupidatat\",\n  \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"field\": \"content-type\",\n    \"localVariableName\": \"LOCAL_VARIABLE\",\n    \"parser\": {\n      \"type\": \"regex\",\n      \"value\": \".*\"\n    }\n  },\n  \"parse_test_public_id\": \"abc-def-123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Example description\",\n  \"name\": \"MY_VARIABLE\",\n  \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n  ],\n  \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n  },\n  \"attributes\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"id\": \"anim irure id cupidatat\",\n  \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"field\": \"content-type\",\n    \"localVariableName\": \"LOCAL_VARIABLE\",\n    \"parser\": {\n      \"type\": \"regex\",\n      \"value\": \".*\"\n    }\n  },\n  \"parse_test_public_id\": \"abc-def-123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Example description\",\n  \"name\": \"MY_VARIABLE\",\n  \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n  ],\n  \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n  },\n  \"attributes\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"id\": \"anim irure id cupidatat\",\n  \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"field\": \"content-type\",\n    \"localVariableName\": \"LOCAL_VARIABLE\",\n    \"parser\": {\n      \"type\": \"regex\",\n      \"value\": \".*\"\n    }\n  },\n  \"parse_test_public_id\": \"abc-def-123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a global variable",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"variables",
								":variable_id"
							],
							"variable": [
								{
									"key": "variable_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Delete a Synthetic global variable."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "JSON format is wrong",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a global variable",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"variables",
								":variable_id"
							],
							"variable": [
								{
									"key": "variable_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Get the detailed configuration of a global variable."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"description\": \"Example description\",\n  \"name\": \"MY_VARIABLE\",\n  \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n  ],\n  \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n  },\n  \"attributes\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"id\": \"anim irure id cupidatat\",\n  \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"field\": \"content-type\",\n    \"localVariableName\": \"LOCAL_VARIABLE\",\n    \"parser\": {\n      \"type\": \"regex\",\n      \"value\": \".*\"\n    }\n  },\n  \"parse_test_public_id\": \"abc-def-123\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Edit a global variable",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Example description\",\n  \"name\": \"MY_VARIABLE\",\n  \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n  ],\n  \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n  },\n  \"attributes\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"id\": \"anim irure id cupidatat\",\n  \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"field\": \"content-type\",\n    \"localVariableName\": \"LOCAL_VARIABLE\",\n    \"parser\": {\n      \"type\": \"regex\",\n      \"value\": \".*\"\n    }\n  },\n  \"parse_test_public_id\": \"abc-def-123\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"variables",
								":variable_id"
							],
							"variable": [
								{
									"key": "variable_id",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Edit a Synthetic global variable."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Example description\",\n  \"name\": \"MY_VARIABLE\",\n  \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n  ],\n  \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n  },\n  \"attributes\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"id\": \"anim irure id cupidatat\",\n  \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"field\": \"content-type\",\n    \"localVariableName\": \"LOCAL_VARIABLE\",\n    \"parser\": {\n      \"type\": \"regex\",\n      \"value\": \".*\"\n    }\n  },\n  \"parse_test_public_id\": \"abc-def-123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"description\": \"Example description\",\n  \"name\": \"MY_VARIABLE\",\n  \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n  ],\n  \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n  },\n  \"attributes\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"id\": \"anim irure id cupidatat\",\n  \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"field\": \"content-type\",\n    \"localVariableName\": \"LOCAL_VARIABLE\",\n    \"parser\": {\n      \"type\": \"regex\",\n      \"value\": \".*\"\n    }\n  },\n  \"parse_test_public_id\": \"abc-def-123\"\n}"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Example description\",\n  \"name\": \"MY_VARIABLE\",\n  \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n  ],\n  \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n  },\n  \"attributes\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"id\": \"anim irure id cupidatat\",\n  \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"field\": \"content-type\",\n    \"localVariableName\": \"LOCAL_VARIABLE\",\n    \"parser\": {\n      \"type\": \"regex\",\n      \"value\": \".*\"\n    }\n  },\n  \"parse_test_public_id\": \"abc-def-123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Example description\",\n  \"name\": \"MY_VARIABLE\",\n  \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n  ],\n  \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n  },\n  \"attributes\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"id\": \"anim irure id cupidatat\",\n  \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"field\": \"content-type\",\n    \"localVariableName\": \"LOCAL_VARIABLE\",\n    \"parser\": {\n      \"type\": \"regex\",\n      \"value\": \".*\"\n    }\n  },\n  \"parse_test_public_id\": \"abc-def-123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Example description\",\n  \"name\": \"MY_VARIABLE\",\n  \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n  ],\n  \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n  },\n  \"attributes\": {\n    \"restricted_roles\": [\n      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    ]\n  },\n  \"id\": \"anim irure id cupidatat\",\n  \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"field\": \"content-type\",\n    \"localVariableName\": \"LOCAL_VARIABLE\",\n    \"parser\": {\n      \"type\": \"regex\",\n      \"value\": \".*\"\n    }\n  },\n  \"parse_test_public_id\": \"abc-def-123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get the on-demand concurrency cap",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/synthetics/settings/on_demand_concurrency_cap",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"synthetics",
								"settings",
								"on_demand_concurrency_cap"
							]
						},
						"description": "Get the on-demand concurrency cap."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/synthetics/settings/on_demand_concurrency_cap",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"synthetics",
										"settings",
										"on_demand_concurrency_cap"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"on_demand_concurrency_cap\": \"<double>\"\n    },\n    \"type\": \"on_demand_concurrency_cap\"\n  }\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/synthetics/settings/on_demand_concurrency_cap",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"synthetics",
										"settings",
										"on_demand_concurrency_cap"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Save new value for on-demand concurrency cap",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"on_demand_concurrency_cap\": \"<double>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/synthetics/settings/on_demand_concurrency_cap",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"synthetics",
								"settings",
								"on_demand_concurrency_cap"
							]
						},
						"description": "Save new value for on-demand concurrency cap."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"on_demand_concurrency_cap\": \"<double>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/synthetics/settings/on_demand_concurrency_cap",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"synthetics",
										"settings",
										"on_demand_concurrency_cap"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"on_demand_concurrency_cap\": \"<double>\"\n    },\n    \"type\": \"on_demand_concurrency_cap\"\n  }\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"on_demand_concurrency_cap\": \"<double>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/synthetics/settings/on_demand_concurrency_cap",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"synthetics",
										"settings",
										"on_demand_concurrency_cap"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Datadog Synthetic Monitoring uses simulated user requests and browser rendering to help you ensure uptime,\nidentify regional issues, and track your application performance. Synthetic tests come in\ntwo different flavors, [API tests](https://docs.datadoghq.com/synthetics/api_tests/?tab=httptest)\nand [browser tests](https://docs.datadoghq.com/synthetics/browser_tests). You can use Datadog’s API to\nmanage both test types programmatically.\n\nFor more information, see the [Synthetic Monitoring documentation](https://docs.datadoghq.com/synthetics/)."
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "Get Tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tags/hosts?source=tempor Ut sed velit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts"
							],
							"query": [
								{
									"key": "source",
									"value": "tempor Ut sed velit",
									"description": "When specified, filters host list to those tags with the specified source."
								}
							]
						},
						"description": "Return a mapping of tags to hosts for your whole infrastructure."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "When specified, filters host list to those tags with the specified source."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"tags\": {\n    \"dolor_0e\": [\n      \"test.metric.host\",\n      \"test.metric.host\"\n    ],\n    \"doff\": [\n      \"test.metric.host\",\n      \"test.metric.host\"\n    ]\n  }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "When specified, filters host list to those tags with the specified source."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "When specified, filters host list to those tags with the specified source."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "When specified, filters host list to those tags with the specified source."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Remove host tags",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":host_name"
							],
							"query": [
								{
									"key": "source",
									"value": "tempor Ut sed velit",
									"description": "The source of the tags (for example chef, puppet).\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)."
								}
							],
							"variable": [
								{
									"key": "host_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "This endpoint allows you to remove all user-assigned tags\nfor a single host."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "The source of the tags (for example chef, puppet).\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)."
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "The source of the tags (for example chef, puppet).\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)."
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "The source of the tags (for example chef, puppet).\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)."
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "The source of the tags (for example chef, puppet).\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)."
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get host tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":host_name"
							],
							"query": [
								{
									"key": "source",
									"value": "tempor Ut sed velit",
									"description": "Source to filter."
								}
							],
							"variable": [
								{
									"key": "host_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Return the list of tags that apply to a given host."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "Source to filter."
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"host\": \"test.host\",\n  \"tags\": [\n    \"environment:production\",\n    \"environment:production\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "Source to filter."
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "Source to filter."
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "Source to filter."
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Add tags to a host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"host\": \"test.host\",\n  \"tags\": [\n    \"environment:production\",\n    \"environment:production\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=chef",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":host_name"
							],
							"query": [
								{
									"key": "source",
									"value": "chef",
									"description": "The source of the tags.\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)."
								}
							],
							"variable": [
								{
									"key": "host_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "This endpoint allows you to add new tags to a host,\noptionally specifying where these tags come from."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"host\": \"test.host\",\n  \"tags\": [\n    \"environment:production\",\n    \"environment:production\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=chef",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "chef",
											"description": "The source of the tags.\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)."
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"host\": \"test.host\",\n  \"tags\": [\n    \"environment:production\",\n    \"environment:production\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"host\": \"test.host\",\n  \"tags\": [\n    \"environment:production\",\n    \"environment:production\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=chef",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "chef",
											"description": "The source of the tags.\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)."
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"host\": \"test.host\",\n  \"tags\": [\n    \"environment:production\",\n    \"environment:production\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=chef",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "chef",
											"description": "The source of the tags.\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)."
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"host\": \"test.host\",\n  \"tags\": [\n    \"environment:production\",\n    \"environment:production\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=chef",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "chef",
											"description": "The source of the tags.\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)."
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update host tags",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"host\": \"test.host\",\n  \"tags\": [\n    \"environment:production\",\n    \"environment:production\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":host_name"
							],
							"query": [
								{
									"key": "source",
									"value": "tempor Ut sed velit",
									"description": "The source of the tags (for example chef, puppet).\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)"
								}
							],
							"variable": [
								{
									"key": "host_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "This endpoint allows you to update/replace all tags in\nan integration source with those supplied in the request."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"host\": \"test.host\",\n  \"tags\": [\n    \"environment:production\",\n    \"environment:production\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "The source of the tags (for example chef, puppet).\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"host\": \"test.host\",\n  \"tags\": [\n    \"environment:production\",\n    \"environment:production\"\n  ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"host\": \"test.host\",\n  \"tags\": [\n    \"environment:production\",\n    \"environment:production\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "The source of the tags (for example chef, puppet).\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"host\": \"test.host\",\n  \"tags\": [\n    \"environment:production\",\n    \"environment:production\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "The source of the tags (for example chef, puppet).\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"host\": \"test.host\",\n  \"tags\": [\n    \"environment:production\",\n    \"environment:production\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "tempor Ut sed velit",
											"description": "The source of the tags (for example chef, puppet).\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "The tag endpoint allows you to assign tags to hosts,\nfor example: `role:database`. Those tags are applied to\nall metrics sent by the host. Refer to hosts by name\n(`yourhost.example.com`) when fetching and applying\ntags to a particular host.\n\nThe component of your infrastructure responsible for a tag is identified\nby a source. For example, some valid sources include nagios, hudson, jenkins,\nusers, feed, chef, puppet, git, bitbucket, fabric, capistrano, etc.\n\nRead more about tags on the dedicated\n[documentation page](https://docs.datadoghq.com/tagging)."
		},
		{
			"name": "Teams",
			"item": [
				{
					"name": "Get all teams",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/team?page[number]=0&page[size]=10&sort=user_count&include=user_team_permissions&include=team_links&filter[keyword]=<string>&filter[me]=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team"
							],
							"query": [
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page. The maximum allowed value is 100."
								},
								{
									"key": "sort",
									"value": "user_count",
									"description": "Specifies the order of the returned teams"
								},
								{
									"key": "include",
									"value": "user_team_permissions",
									"description": "Included related resources optionally requested. Allowed enum values: `team_links, user_team_permissions`"
								},
								{
									"key": "include",
									"value": "team_links",
									"description": "Included related resources optionally requested. Allowed enum values: `team_links, user_team_permissions`"
								},
								{
									"key": "filter[keyword]",
									"value": "<string>",
									"description": "Search query. Can be team name, team handle, or email of team member"
								},
								{
									"key": "filter[me]",
									"value": "<boolean>",
									"description": "When true, only returns teams the current user belongs to"
								}
							]
						},
						"description": "Get all teams.\nCan be used to search for teams using the `filter[keyword]` and `filter[me]` query parameters."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team?page[number]=0&page[size]=10&sort=user_count&include=team_links&filter[keyword]=<string>&filter[me]=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team"
									],
									"query": [
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "sort",
											"value": "user_count",
											"description": "Specifies the order of the returned teams"
										},
										{
											"key": "include",
											"value": "team_links",
											"description": "Included related resources optionally requested. Allowed enum values: `team_links, user_team_permissions`"
										},
										{
											"key": "filter[keyword]",
											"value": "<string>",
											"description": "Search query. Can be team name, team handle, or email of team member"
										},
										{
											"key": "filter[me]",
											"value": "<boolean>",
											"description": "When true, only returns teams the current user belongs to"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\",\n        \"avatar\": \"<string>\",\n        \"banner\": \"<long>\",\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"hidden_modules\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"link_count\": \"<integer>\",\n        \"modified_at\": \"<dateTime>\",\n        \"summary\": \"<string>\",\n        \"user_count\": \"<integer>\",\n        \"visible_modules\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"team\",\n      \"relationships\": {\n        \"team_links\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"team_links\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"team_links\"\n            }\n          ],\n          \"links\": {\n            \"related\": \"<string>\"\n          }\n        },\n        \"user_team_permissions\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"user_team_permissions\"\n          },\n          \"links\": {\n            \"related\": \"<string>\"\n          }\n        }\n      }\n    },\n    {\n      \"attributes\": {\n        \"handle\": \"<string>\",\n        \"name\": \"<string>\",\n        \"avatar\": \"<string>\",\n        \"banner\": \"<long>\",\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"hidden_modules\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"link_count\": \"<integer>\",\n        \"modified_at\": \"<dateTime>\",\n        \"summary\": \"<string>\",\n        \"user_count\": \"<integer>\",\n        \"visible_modules\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"id\": \"<string>\",\n      \"type\": \"team\",\n      \"relationships\": {\n        \"team_links\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"team_links\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"team_links\"\n            }\n          ],\n          \"links\": {\n            \"related\": \"<string>\"\n          }\n        },\n        \"user_team_permissions\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"user_team_permissions\"\n          },\n          \"links\": {\n            \"related\": \"<string>\"\n          }\n        }\n      }\n    }\n  ],\n  \"included\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"<string>\",\n    \"last\": \"<string>\",\n    \"next\": \"<string>\",\n    \"prev\": \"<string>\",\n    \"self\": \"<string>\"\n  },\n  \"meta\": {\n    \"pagination\": {\n      \"first_offset\": \"<long>\",\n      \"last_offset\": \"<long>\",\n      \"limit\": \"<long>\",\n      \"next_offset\": \"<long>\",\n      \"offset\": \"<long>\",\n      \"prev_offset\": \"<long>\",\n      \"total\": \"<long>\",\n      \"type\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team?page[number]=0&page[size]=10&sort=user_count&include=team_links&filter[keyword]=<string>&filter[me]=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team"
									],
									"query": [
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "sort",
											"value": "user_count",
											"description": "Specifies the order of the returned teams"
										},
										{
											"key": "include",
											"value": "team_links",
											"description": "Included related resources optionally requested. Allowed enum values: `team_links, user_team_permissions`"
										},
										{
											"key": "filter[keyword]",
											"value": "<string>",
											"description": "Search query. Can be team name, team handle, or email of team member"
										},
										{
											"key": "filter[me]",
											"value": "<boolean>",
											"description": "When true, only returns teams the current user belongs to"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a team",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"banner\": \"<long>\",\n      \"description\": \"<string>\",\n      \"hidden_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"visible_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"team\",\n    \"relationships\": {\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/team",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team"
							]
						},
						"description": "Create a new team.\nUser IDs passed through the `users` relationship field are added to the team."
					},
					"response": [
						{
							"name": "CREATED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"banner\": \"<long>\",\n      \"description\": \"<string>\",\n      \"hidden_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"visible_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"team\",\n    \"relationships\": {\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"banner\": \"<long>\",\n      \"created_at\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"hidden_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"link_count\": \"<integer>\",\n      \"modified_at\": \"<dateTime>\",\n      \"summary\": \"<string>\",\n      \"user_count\": \"<integer>\",\n      \"visible_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"team\",\n    \"relationships\": {\n      \"team_links\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          }\n        ],\n        \"links\": {\n          \"related\": \"<string>\"\n        }\n      },\n      \"user_team_permissions\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"user_team_permissions\"\n        },\n        \"links\": {\n          \"related\": \"<string>\"\n        }\n      }\n    }\n  }\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"banner\": \"<long>\",\n      \"description\": \"<string>\",\n      \"hidden_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"visible_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"team\",\n    \"relationships\": {\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"banner\": \"<long>\",\n      \"description\": \"<string>\",\n      \"hidden_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"visible_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"team\",\n    \"relationships\": {\n      \"users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Remove a team",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/team/:team_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team",
								":team_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>"
								}
							]
						},
						"description": "Remove a team using the team's `id`."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a team",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/team/:team_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team",
								":team_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a single team using the team's `id`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"banner\": \"<long>\",\n      \"created_at\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"hidden_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"link_count\": \"<integer>\",\n      \"modified_at\": \"<dateTime>\",\n      \"summary\": \"<string>\",\n      \"user_count\": \"<integer>\",\n      \"visible_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"team\",\n    \"relationships\": {\n      \"team_links\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          }\n        ],\n        \"links\": {\n          \"related\": \"<string>\"\n        }\n      },\n      \"user_team_permissions\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"user_team_permissions\"\n        },\n        \"links\": {\n          \"related\": \"<string>\"\n        }\n      }\n    }\n  }\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a team",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"banner\": \"<long>\",\n      \"color\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"hidden_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"visible_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"team\",\n    \"relationships\": {\n      \"team_links\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          }\n        ],\n        \"links\": {\n          \"related\": \"<string>\"\n        }\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/team/:team_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team",
								":team_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a team using the team's `id`.\nIf the `team_links` relationship is present, the associated links are updated to be in the order they appear in the array, and any existing team links not present are removed."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"banner\": \"<long>\",\n      \"color\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"hidden_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"visible_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"team\",\n    \"relationships\": {\n      \"team_links\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          }\n        ],\n        \"links\": {\n          \"related\": \"<string>\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"banner\": \"<long>\",\n      \"created_at\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"hidden_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"link_count\": \"<integer>\",\n      \"modified_at\": \"<dateTime>\",\n      \"summary\": \"<string>\",\n      \"user_count\": \"<integer>\",\n      \"visible_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"id\": \"<string>\",\n    \"type\": \"team\",\n    \"relationships\": {\n      \"team_links\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          }\n        ],\n        \"links\": {\n          \"related\": \"<string>\"\n        }\n      },\n      \"user_team_permissions\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"user_team_permissions\"\n        },\n        \"links\": {\n          \"related\": \"<string>\"\n        }\n      }\n    }\n  }\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"banner\": \"<long>\",\n      \"color\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"hidden_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"visible_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"team\",\n    \"relationships\": {\n      \"team_links\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          }\n        ],\n        \"links\": {\n          \"related\": \"<string>\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"banner\": \"<long>\",\n      \"color\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"hidden_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"visible_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"team\",\n    \"relationships\": {\n      \"team_links\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          }\n        ],\n        \"links\": {\n          \"related\": \"<string>\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"banner\": \"<long>\",\n      \"color\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"hidden_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"visible_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"team\",\n    \"relationships\": {\n      \"team_links\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          }\n        ],\n        \"links\": {\n          \"related\": \"<string>\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"handle\": \"<string>\",\n      \"name\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"banner\": \"<long>\",\n      \"color\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"hidden_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"visible_modules\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"type\": \"team\",\n    \"relationships\": {\n      \"team_links\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"team_links\"\n          }\n        ],\n        \"links\": {\n          \"related\": \"<string>\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get links for a team",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/team/:team_id/links",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team",
								":team_id",
								"links"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get all links for a given team."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"label\": \"<string>\",\n        \"url\": \"<string>\",\n        \"position\": \"<integer>\",\n        \"team_id\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"team_links\"\n    },\n    {\n      \"attributes\": {\n        \"label\": \"<string>\",\n        \"url\": \"<string>\",\n        \"position\": \"<integer>\",\n        \"team_id\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"team_links\"\n    }\n  ]\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a team link",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"label\": \"<string>\",\n      \"url\": \"<string>\",\n      \"position\": \"<integer>\",\n      \"team_id\": \"<string>\"\n    },\n    \"type\": \"team_links\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/team/:team_id/links",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team",
								":team_id",
								"links"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>"
								}
							]
						},
						"description": "Add a new link to a team."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"label\": \"<string>\",\n      \"url\": \"<string>\",\n      \"position\": \"<integer>\",\n      \"team_id\": \"<string>\"\n    },\n    \"type\": \"team_links\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"label\": \"<string>\",\n      \"url\": \"<string>\",\n      \"position\": \"<integer>\",\n      \"team_id\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"team_links\"\n  }\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"label\": \"<string>\",\n      \"url\": \"<string>\",\n      \"position\": \"<integer>\",\n      \"team_id\": \"<string>\"\n    },\n    \"type\": \"team_links\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"label\": \"<string>\",\n      \"url\": \"<string>\",\n      \"position\": \"<integer>\",\n      \"team_id\": \"<string>\"\n    },\n    \"type\": \"team_links\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"label\": \"<string>\",\n      \"url\": \"<string>\",\n      \"position\": \"<integer>\",\n      \"team_id\": \"<string>\"\n    },\n    \"type\": \"team_links\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Remove a team link",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/team/:team_id/links/:link_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team",
								":team_id",
								"links",
								":link_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>"
								},
								{
									"key": "link_id",
									"value": "<string>"
								}
							]
						},
						"description": "Remove a link from a team."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links/:link_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links",
										":link_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "link_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links/:link_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links",
										":link_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "link_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links/:link_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links",
										":link_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "link_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a team link",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/team/:team_id/links/:link_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team",
								":team_id",
								"links",
								":link_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>"
								},
								{
									"key": "link_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a single link for a team."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links/:link_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links",
										":link_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "link_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"label\": \"<string>\",\n      \"url\": \"<string>\",\n      \"position\": \"<integer>\",\n      \"team_id\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"team_links\"\n  }\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links/:link_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links",
										":link_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "link_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links/:link_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links",
										":link_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "link_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a team link",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"label\": \"<string>\",\n      \"url\": \"<string>\",\n      \"position\": \"<integer>\",\n      \"team_id\": \"<string>\"\n    },\n    \"type\": \"team_links\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/team/:team_id/links/:link_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team",
								":team_id",
								"links",
								":link_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>"
								},
								{
									"key": "link_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a team link."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"label\": \"<string>\",\n      \"url\": \"<string>\",\n      \"position\": \"<integer>\",\n      \"team_id\": \"<string>\"\n    },\n    \"type\": \"team_links\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links/:link_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links",
										":link_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "link_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"label\": \"<string>\",\n      \"url\": \"<string>\",\n      \"position\": \"<integer>\",\n      \"team_id\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"type\": \"team_links\"\n  }\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"label\": \"<string>\",\n      \"url\": \"<string>\",\n      \"position\": \"<integer>\",\n      \"team_id\": \"<string>\"\n    },\n    \"type\": \"team_links\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links/:link_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links",
										":link_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "link_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"label\": \"<string>\",\n      \"url\": \"<string>\",\n      \"position\": \"<integer>\",\n      \"team_id\": \"<string>\"\n    },\n    \"type\": \"team_links\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/links/:link_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"links",
										":link_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "link_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get team memberships",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships?page[size]=10&page[number]=0&sort=email&filter[keyword]=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team",
								":team_id",
								"memberships"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page. The maximum allowed value is 100."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "email",
									"description": "Specifies the order of returned team memberships"
								},
								{
									"key": "filter[keyword]",
									"value": "<string>",
									"description": "Search query, can be user email or name"
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a paginated list of members for a team"
					},
					"response": [
						{
							"name": "Represents a user's association to a team",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships?page[size]=10&page[number]=0&sort=email&filter[keyword]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"memberships"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "email",
											"description": "Specifies the order of returned team memberships"
										},
										{
											"key": "filter[keyword]",
											"value": "<string>",
											"description": "Search query, can be user email or name"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"team_memberships\",\n      \"attributes\": {\n        \"role\": \"admin\"\n      },\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"team_memberships\",\n      \"attributes\": {\n        \"role\": \"admin\"\n      },\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      }\n    }\n  ],\n  \"links\": {\n    \"first\": \"<string>\",\n    \"last\": \"<string>\",\n    \"next\": \"<string>\",\n    \"prev\": \"<string>\",\n    \"self\": \"<string>\"\n  },\n  \"meta\": {\n    \"pagination\": {\n      \"first_offset\": \"<long>\",\n      \"last_offset\": \"<long>\",\n      \"limit\": \"<long>\",\n      \"next_offset\": \"<long>\",\n      \"offset\": \"<long>\",\n      \"prev_offset\": \"<long>\",\n      \"total\": \"<long>\",\n      \"type\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships?page[size]=10&page[number]=0&sort=email&filter[keyword]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"memberships"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "email",
											"description": "Specifies the order of returned team memberships"
										},
										{
											"key": "filter[keyword]",
											"value": "<string>",
											"description": "Search query, can be user email or name"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships?page[size]=10&page[number]=0&sort=email&filter[keyword]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"memberships"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "email",
											"description": "Specifies the order of returned team memberships"
										},
										{
											"key": "filter[keyword]",
											"value": "<string>",
											"description": "Search query, can be user email or name"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a user to a team",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"team_memberships\",\n    \"attributes\": {\n      \"role\": \"admin\"\n    },\n    \"relationships\": {\n      \"user\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team",
								":team_id",
								"memberships"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>"
								}
							]
						},
						"description": "Add a user to a team."
					},
					"response": [
						{
							"name": "Represents a user's association to a team",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"team_memberships\",\n    \"attributes\": {\n      \"role\": \"admin\"\n    },\n    \"relationships\": {\n      \"user\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"memberships"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"team_memberships\",\n    \"attributes\": {\n      \"role\": \"admin\"\n    },\n    \"relationships\": {\n      \"user\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    }\n  }\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"team_memberships\",\n    \"attributes\": {\n      \"role\": \"admin\"\n    },\n    \"relationships\": {\n      \"user\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"memberships"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"team_memberships\",\n    \"attributes\": {\n      \"role\": \"admin\"\n    },\n    \"relationships\": {\n      \"user\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"memberships"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"team_memberships\",\n    \"attributes\": {\n      \"role\": \"admin\"\n    },\n    \"relationships\": {\n      \"user\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"memberships"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Remove a user from a team",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team",
								":team_id",
								"memberships",
								":user_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>"
								},
								{
									"key": "user_id",
									"value": "<string>"
								}
							]
						},
						"description": "Remove a user from a team."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"memberships",
										":user_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"memberships",
										":user_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"memberships",
										":user_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a user's membership attributes on a team",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"team_memberships\",\n    \"attributes\": {\n      \"role\": \"admin\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team",
								":team_id",
								"memberships",
								":user_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>"
								},
								{
									"key": "user_id",
									"value": "<string>"
								}
							]
						},
						"description": "Update a user's membership attributes on a team."
					},
					"response": [
						{
							"name": "Represents a user's association to a team",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"team_memberships\",\n    \"attributes\": {\n      \"role\": \"admin\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"memberships",
										":user_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"team_memberships\",\n    \"attributes\": {\n      \"role\": \"admin\"\n    },\n    \"relationships\": {\n      \"user\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    }\n  }\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"team_memberships\",\n    \"attributes\": {\n      \"role\": \"admin\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"memberships",
										":user_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"team_memberships\",\n    \"attributes\": {\n      \"role\": \"admin\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/memberships/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"memberships",
										":user_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get permission settings for a team",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/team/:team_id/permission-settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team",
								":team_id",
								"permission-settings"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get all permission settings for a given team."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/permission-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"permission-settings"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"team_permission_settings\",\n      \"attributes\": {\n        \"action\": \"manage_membership\",\n        \"editable\": \"<boolean>\",\n        \"options\": [\n          \"teams_manage\",\n          \"admins\"\n        ],\n        \"title\": \"<string>\",\n        \"value\": \"members\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"team_permission_settings\",\n      \"attributes\": {\n        \"action\": \"edit\",\n        \"editable\": \"<boolean>\",\n        \"options\": [\n          \"user_access_manage\",\n          \"admins\"\n        ],\n        \"title\": \"<string>\",\n        \"value\": \"teams_manage\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/permission-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"permission-settings"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/permission-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"permission-settings"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update permission setting for team",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"team_permission_settings\",\n    \"attributes\": {\n      \"value\": \"organization\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/team/:team_id/permission-settings/:action",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"team",
								":team_id",
								"permission-settings",
								":action"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>"
								},
								{
									"key": "action",
									"value": "<string>"
								}
							]
						},
						"description": "Update a team permission setting for a given team."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"team_permission_settings\",\n    \"attributes\": {\n      \"value\": \"organization\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/permission-settings/:action",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"permission-settings",
										":action"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "action"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"type\": \"team_permission_settings\",\n    \"attributes\": {\n      \"action\": \"manage_membership\",\n      \"editable\": \"<boolean>\",\n      \"options\": [\n        \"user_access_manage\",\n        \"user_access_manage\"\n      ],\n      \"title\": \"<string>\",\n      \"value\": \"members\"\n    }\n  }\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"team_permission_settings\",\n    \"attributes\": {\n      \"value\": \"organization\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/permission-settings/:action",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"permission-settings",
										":action"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "action"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"team_permission_settings\",\n    \"attributes\": {\n      \"value\": \"organization\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/team/:team_id/permission-settings/:action",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"team",
										":team_id",
										"permission-settings",
										":action"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "action"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get user memberships",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/users/:user_uuid/memberships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":user_uuid",
								"memberships"
							],
							"variable": [
								{
									"key": "user_uuid",
									"value": "<string>"
								}
							]
						},
						"description": "Get a list of memberships for a user"
					},
					"response": [
						{
							"name": "Represents a user's association to a team",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_uuid/memberships",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_uuid",
										"memberships"
									],
									"variable": [
										{
											"key": "user_uuid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"team_memberships\",\n      \"attributes\": {\n        \"role\": \"admin\"\n      },\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"team_memberships\",\n      \"attributes\": {\n        \"role\": \"admin\"\n      },\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      }\n    }\n  ],\n  \"links\": {\n    \"first\": \"<string>\",\n    \"last\": \"<string>\",\n    \"next\": \"<string>\",\n    \"prev\": \"<string>\",\n    \"self\": \"<string>\"\n  },\n  \"meta\": {\n    \"pagination\": {\n      \"first_offset\": \"<long>\",\n      \"last_offset\": \"<long>\",\n      \"limit\": \"<long>\",\n      \"next_offset\": \"<long>\",\n      \"offset\": \"<long>\",\n      \"prev_offset\": \"<long>\",\n      \"total\": \"<long>\",\n      \"type\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"name": "API error response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_uuid/memberships",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_uuid",
										"memberships"
									],
									"variable": [
										{
											"key": "user_uuid"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_uuid/memberships",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_uuid",
										"memberships"
									],
									"variable": [
										{
											"key": "user_uuid"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "View and manage teams within Datadog."
		},
		{
			"name": "Usage Metering",
			"item": [
				{
					"name": "Get hourly usage for analyzed logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/analyzed_logs?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"analyzed_logs"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for analyzed logs (Security Monitoring).\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/analyzed_logs?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"analyzed_logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"analyzed_logs\": 9223599,\n      \"hour\": \"1992-08-13T02:29:19.901Z\",\n      \"org_name\": \"in tempor\",\n      \"public_id\": \"laborum tempor sed\"\n    },\n    {\n      \"analyzed_logs\": -51610528,\n      \"hour\": \"2023-05-04T01:23:50.066Z\",\n      \"org_name\": \"et in\",\n      \"public_id\": \"sit ut\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/analyzed_logs?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"analyzed_logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/analyzed_logs?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"analyzed_logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/analyzed_logs?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"analyzed_logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for Lambda",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/aws_lambda?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"aws_lambda"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							]
						},
						"description": "Get hourly usage for lambda.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/aws_lambda?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"aws_lambda"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"func_count\": 70293040,\n      \"hour\": \"1943-10-13T21:00:43.633Z\",\n      \"invocations_sum\": 31064846,\n      \"org_name\": \"volupta\",\n      \"public_id\": \"minim ut nulla mollit\"\n    },\n    {\n      \"func_count\": 76407258,\n      \"hour\": \"1986-06-24T01:25:46.921Z\",\n      \"invocations_sum\": 7149812,\n      \"org_name\": \"aliqua dolor aliquip reprehenderit\",\n      \"public_id\": \"fugiat\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/aws_lambda?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"aws_lambda"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/aws_lambda?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"aws_lambda"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/aws_lambda?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"aws_lambda"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get billable usage across your account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/billable-summary?month=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"billable-summary"
							],
							"query": [
								{
									"key": "month",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage starting this month."
								}
							]
						},
						"description": "Get billable usage across your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/billable-summary?month=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"billable-summary"
									],
									"query": [
										{
											"key": "month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage starting this month."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"billing_plan\": \"dolore quis\",\n      \"end_date\": \"2010-12-01T12:25:12.460Z\",\n      \"num_orgs\": 70283159,\n      \"org_name\": \"magna cupidatat\",\n      \"public_id\": \"aliqua esse incididunt\",\n      \"ratio_in_month\": 18240852.496636435,\n      \"region\": \"culpa dolor mollit nulla\",\n      \"start_date\": \"1955-12-02T01:04:14.189Z\",\n      \"usage\": {\n        \"apm_fargate_average\": {\n          \"account_billable_usage\": -93892814,\n          \"elapsed_usage_hours\": -70494916,\n          \"first_billable_usage_hour\": \"1986-10-14T21:38:13.387Z\",\n          \"last_billable_usage_hour\": \"1972-08-12T07:06:32.215Z\",\n          \"org_billable_usage\": -46102239,\n          \"percentage_in_account\": 97625054.49467388,\n          \"usage_unit\": \"nisi est c\"\n        },\n        \"apm_fargate_sum\": {\n          \"account_billable_usage\": -6313865,\n          \"elapsed_usage_hours\": 18812494,\n          \"first_billable_usage_hour\": \"2023-04-27T09:02:23.535Z\",\n          \"last_billable_usage_hour\": \"1960-12-26T14:55:50.621Z\",\n          \"org_billable_usage\": 57455275,\n          \"percentage_in_account\": -15564989.530741662,\n          \"usage_unit\": \"dolor aliqua id velit occaecat\"\n        },\n        \"apm_host_sum\": {\n          \"account_billable_usage\": -55419711,\n          \"elapsed_usage_hours\": 77122581,\n          \"first_billable_usage_hour\": \"1965-02-14T21:39:27.684Z\",\n          \"last_billable_usage_hour\": \"1952-03-28T10:42:48.539Z\",\n          \"org_billable_usage\": 48901543,\n          \"percentage_in_account\": -79634678.96064538,\n          \"usage_unit\": \"eiusmod veniam dolore\"\n        },\n        \"apm_host_top99p\": {\n          \"account_billable_usage\": -16666017,\n          \"elapsed_usage_hours\": -17559560,\n          \"first_billable_usage_hour\": \"2002-04-02T18:13:31.736Z\",\n          \"last_billable_usage_hour\": \"2013-08-26T11:32:03.553Z\",\n          \"org_billable_usage\": 26814200,\n          \"percentage_in_account\": 66320838.27842593,\n          \"usage_unit\": \"amet adipisicing voluptate\"\n        },\n        \"apm_profiler_host_sum\": {\n          \"account_billable_usage\": 14072158,\n          \"elapsed_usage_hours\": 81744469,\n          \"first_billable_usage_hour\": \"2002-01-01T14:21:49.223Z\",\n          \"last_billable_usage_hour\": \"2004-06-19T04:50:46.023Z\",\n          \"org_billable_usage\": -20212166,\n          \"percentage_in_account\": -1035465.6884759068,\n          \"usage_unit\": \"non eiusmod proident et labore\"\n        },\n        \"apm_profiler_host_top99p\": {\n          \"account_billable_usage\": 65070023,\n          \"elapsed_usage_hours\": -14565444,\n          \"first_billable_usage_hour\": \"1979-12-11T12:46:02.840Z\",\n          \"last_billable_usage_hour\": \"1999-03-25T19:00:43.057Z\",\n          \"org_billable_usage\": 17782942,\n          \"percentage_in_account\": -24554268.419589505,\n          \"usage_unit\": \"sunt veniam tempor an\"\n        },\n        \"apm_trace_search_sum\": {\n          \"account_billable_usage\": -74883742,\n          \"elapsed_usage_hours\": -73433574,\n          \"first_billable_usage_hour\": \"1996-05-28T06:25:23.274Z\",\n          \"last_billable_usage_hour\": \"2006-01-26T13:55:33.619Z\",\n          \"org_billable_usage\": -41744947,\n          \"percentage_in_account\": 35820658.95919731,\n          \"usage_unit\": \"in minim\"\n        },\n        \"application_security_fargate_average\": {\n          \"account_billable_usage\": 67773692,\n          \"elapsed_usage_hours\": -59183771,\n          \"first_billable_usage_hour\": \"1984-04-08T17:02:41.726Z\",\n          \"last_billable_usage_hour\": \"1988-06-22T12:07:11.713Z\",\n          \"org_billable_usage\": -18436878,\n          \"percentage_in_account\": -66720995.049279794,\n          \"usage_unit\": \"enim velit aliquip labore\"\n        },\n        \"application_security_host_sum\": {\n          \"account_billable_usage\": -78364365,\n          \"elapsed_usage_hours\": -29142159,\n          \"first_billable_usage_hour\": \"1979-09-26T15:11:13.073Z\",\n          \"last_billable_usage_hour\": \"1978-07-12T03:54:28.510Z\",\n          \"org_billable_usage\": 17557232,\n          \"percentage_in_account\": 58598286.27678484,\n          \"usage_unit\": \"minim\"\n        },\n        \"application_security_host_top99p\": {\n          \"account_billable_usage\": -99997590,\n          \"elapsed_usage_hours\": 75893409,\n          \"first_billable_usage_hour\": \"1985-12-29T11:19:42.047Z\",\n          \"last_billable_usage_hour\": \"1997-09-17T20:38:35.827Z\",\n          \"org_billable_usage\": 80971704,\n          \"percentage_in_account\": 69684949.41225883,\n          \"usage_unit\": \"\"\n        },\n        \"ci_pipeline_indexed_spans_sum\": {\n          \"account_billable_usage\": -31941503,\n          \"elapsed_usage_hours\": -10698135,\n          \"first_billable_usage_hour\": \"1961-01-23T19:01:31.972Z\",\n          \"last_billable_usage_hour\": \"1961-05-24T06:40:00.792Z\",\n          \"org_billable_usage\": 60728390,\n          \"percentage_in_account\": -37330727.9446851,\n          \"usage_unit\": \"tempor nostrud mollit Excepteur\"\n        },\n        \"ci_pipeline_maximum\": {\n          \"account_billable_usage\": -16730392,\n          \"elapsed_usage_hours\": -68344770,\n          \"first_billable_usage_hour\": \"2019-11-15T22:56:07.431Z\",\n          \"last_billable_usage_hour\": \"1948-04-04T00:29:58.742Z\",\n          \"org_billable_usage\": -61070106,\n          \"percentage_in_account\": -93129517.57646549,\n          \"usage_unit\": \"eiusm\"\n        },\n        \"ci_pipeline_sum\": {\n          \"account_billable_usage\": -3220086,\n          \"elapsed_usage_hours\": -58549938,\n          \"first_billable_usage_hour\": \"1992-05-30T00:59:17.240Z\",\n          \"last_billable_usage_hour\": \"1984-09-28T11:11:49.981Z\",\n          \"org_billable_usage\": 61597625,\n          \"percentage_in_account\": 43377993.59722996,\n          \"usage_unit\": \"laboris sit esse\"\n        },\n        \"ci_test_indexed_spans_sum\": {\n          \"account_billable_usage\": 42647065,\n          \"elapsed_usage_hours\": -94406524,\n          \"first_billable_usage_hour\": \"1970-05-05T18:13:36.240Z\",\n          \"last_billable_usage_hour\": \"1990-07-30T08:16:44.163Z\",\n          \"org_billable_usage\": -91681798,\n          \"percentage_in_account\": -89654627.22540928,\n          \"usage_unit\": \"in mollit\"\n        },\n        \"ci_testing_maximum\": {\n          \"account_billable_usage\": 7693320,\n          \"elapsed_usage_hours\": -6453514,\n          \"first_billable_usage_hour\": \"1985-08-21T10:38:05.363Z\",\n          \"last_billable_usage_hour\": \"2018-01-12T07:15:27.703Z\",\n          \"org_billable_usage\": -16360275,\n          \"percentage_in_account\": -42542962.001614004,\n          \"usage_unit\": \"quis\"\n        },\n        \"ci_testing_sum\": {\n          \"account_billable_usage\": 77888698,\n          \"elapsed_usage_hours\": 54815766,\n          \"first_billable_usage_hour\": \"1968-03-07T20:50:20.829Z\",\n          \"last_billable_usage_hour\": \"1971-08-10T11:00:32.404Z\",\n          \"org_billable_usage\": -18275582,\n          \"percentage_in_account\": -68496466.47868264,\n          \"usage_unit\": \"enim ipsum ad cillum\"\n        },\n        \"cloud_cost_management_average\": {\n          \"account_billable_usage\": -63498997,\n          \"elapsed_usage_hours\": -61404887,\n          \"first_billable_usage_hour\": \"1965-09-18T08:59:26.922Z\",\n          \"last_billable_usage_hour\": \"1985-09-27T11:19:21.580Z\",\n          \"org_billable_usage\": 35174816,\n          \"percentage_in_account\": -28539064.244241044,\n          \"usage_unit\": \"velit nostr\"\n        },\n        \"cloud_cost_management_sum\": {\n          \"account_billable_usage\": -21042972,\n          \"elapsed_usage_hours\": 63428937,\n          \"first_billable_usage_hour\": \"1944-08-24T11:05:46.091Z\",\n          \"last_billable_usage_hour\": \"2010-11-07T09:23:21.613Z\",\n          \"org_billable_usage\": 41438756,\n          \"percentage_in_account\": 94334640.83802819,\n          \"usage_unit\": \"nulla dolore Ut qui laborum\"\n        },\n        \"cspm_container_sum\": {\n          \"account_billable_usage\": 75496120,\n          \"elapsed_usage_hours\": -79395965,\n          \"first_billable_usage_hour\": \"1986-05-02T15:10:13.153Z\",\n          \"last_billable_usage_hour\": \"2017-05-14T02:16:24.093Z\",\n          \"org_billable_usage\": -99665669,\n          \"percentage_in_account\": 73140964.11477405,\n          \"usage_unit\": \"sed enim anim\"\n        },\n        \"cspm_host_sum\": {\n          \"account_billable_usage\": 6536908,\n          \"elapsed_usage_hours\": 46217092,\n          \"first_billable_usage_hour\": \"1984-05-07T14:52:09.275Z\",\n          \"last_billable_usage_hour\": \"1986-02-16T09:45:01.799Z\",\n          \"org_billable_usage\": 98799306,\n          \"percentage_in_account\": 33081812.845453843,\n          \"usage_unit\": \"dolore pariatur cupidatat mollit\"\n        },\n        \"cspm_host_top99p\": {\n          \"account_billable_usage\": -71904687,\n          \"elapsed_usage_hours\": -85360079,\n          \"first_billable_usage_hour\": \"1948-03-05T00:17:55.104Z\",\n          \"last_billable_usage_hour\": \"1954-12-11T09:02:35.788Z\",\n          \"org_billable_usage\": 10812357,\n          \"percentage_in_account\": 74436405.98697954,\n          \"usage_unit\": \"ad commodo proident\"\n        },\n        \"custom_event_sum\": {\n          \"account_billable_usage\": 51132331,\n          \"elapsed_usage_hours\": -30884508,\n          \"first_billable_usage_hour\": \"1996-12-12T15:22:38.987Z\",\n          \"last_billable_usage_hour\": \"1969-06-26T04:06:22.475Z\",\n          \"org_billable_usage\": 58787996,\n          \"percentage_in_account\": -73294955.83732685,\n          \"usage_unit\": \"ut adipisicing ut exercitation\"\n        },\n        \"cws_container_sum\": {\n          \"account_billable_usage\": -25159577,\n          \"elapsed_usage_hours\": -36780843,\n          \"first_billable_usage_hour\": \"2001-10-13T21:37:55.823Z\",\n          \"last_billable_usage_hour\": \"1974-02-05T22:19:53.427Z\",\n          \"org_billable_usage\": 78001288,\n          \"percentage_in_account\": 682116.8499491662,\n          \"usage_unit\": \"laboris ut\"\n        },\n        \"cws_host_sum\": {\n          \"account_billable_usage\": -70187093,\n          \"elapsed_usage_hours\": 63951549,\n          \"first_billable_usage_hour\": \"2013-04-16T03:19:43.557Z\",\n          \"last_billable_usage_hour\": \"2012-03-05T21:48:25.295Z\",\n          \"org_billable_usage\": 30014353,\n          \"percentage_in_account\": -33151026.54770752,\n          \"usage_unit\": \"cupidatat nostrud\"\n        },\n        \"cws_host_top99p\": {\n          \"account_billable_usage\": 74267788,\n          \"elapsed_usage_hours\": 11398402,\n          \"first_billable_usage_hour\": \"1976-08-11T10:40:13.334Z\",\n          \"last_billable_usage_hour\": \"1990-05-19T08:29:04.285Z\",\n          \"org_billable_usage\": -44773461,\n          \"percentage_in_account\": 73627338.65227008,\n          \"usage_unit\": \"ullamco dolore ut quis\"\n        },\n        \"dbm_host_sum\": {\n          \"account_billable_usage\": -50654348,\n          \"elapsed_usage_hours\": -89647328,\n          \"first_billable_usage_hour\": \"1994-10-21T10:23:21.613Z\",\n          \"last_billable_usage_hour\": \"1971-12-18T01:02:39.259Z\",\n          \"org_billable_usage\": 99695469,\n          \"percentage_in_account\": -79393748.78870434,\n          \"usage_unit\": \"quis in\"\n        },\n        \"dbm_host_top99p\": {\n          \"account_billable_usage\": -3662557,\n          \"elapsed_usage_hours\": -2014148,\n          \"first_billable_usage_hour\": \"1976-05-11T10:35:27.850Z\",\n          \"last_billable_usage_hour\": \"2015-08-22T09:44:40.377Z\",\n          \"org_billable_usage\": -58366544,\n          \"percentage_in_account\": -50446431.65898357,\n          \"usage_unit\": \"minim enim laboris Duis\"\n        },\n        \"dbm_normalized_queries_average\": {\n          \"account_billable_usage\": 25168628,\n          \"elapsed_usage_hours\": 31397730,\n          \"first_billable_usage_hour\": \"2007-03-12T02:52:33.057Z\",\n          \"last_billable_usage_hour\": \"1967-05-31T05:17:00.680Z\",\n          \"org_billable_usage\": 32707834,\n          \"percentage_in_account\": -74334693.56518185,\n          \"usage_unit\": \"cupida\"\n        },\n        \"dbm_normalized_queries_sum\": {\n          \"account_billable_usage\": -3431439,\n          \"elapsed_usage_hours\": 67614199,\n          \"first_billable_usage_hour\": \"1996-02-05T05:04:18.474Z\",\n          \"last_billable_usage_hour\": \"1987-02-02T02:53:32.048Z\",\n          \"org_billable_usage\": -47493968,\n          \"percentage_in_account\": -60311080.224760264,\n          \"usage_unit\": \"enim quis\"\n        },\n        \"fargate_container_apm_and_profiler_average\": {\n          \"account_billable_usage\": 44838152,\n          \"elapsed_usage_hours\": 62651214,\n          \"first_billable_usage_hour\": \"2022-05-30T11:37:10.624Z\",\n          \"last_billable_usage_hour\": \"1978-12-15T10:01:49.492Z\",\n          \"org_billable_usage\": 26692190,\n          \"percentage_in_account\": 91213922.64866537,\n          \"usage_unit\": \"velit\"\n        },\n        \"fargate_container_apm_and_profiler_sum\": {\n          \"account_billable_usage\": -63428367,\n          \"elapsed_usage_hours\": 16465845,\n          \"first_billable_usage_hour\": \"2008-04-22T20:57:07.800Z\",\n          \"last_billable_usage_hour\": \"2010-04-10T06:51:52.032Z\",\n          \"org_billable_usage\": -90782270,\n          \"percentage_in_account\": 33370654.458355814,\n          \"usage_unit\": \"proident incididunt occaecat\"\n        },\n        \"fargate_container_average\": {\n          \"account_billable_usage\": 1518041,\n          \"elapsed_usage_hours\": 88853460,\n          \"first_billable_usage_hour\": \"1965-12-25T22:44:09.198Z\",\n          \"last_billable_usage_hour\": \"1977-11-18T21:32:51.256Z\",\n          \"org_billable_usage\": -55974612,\n          \"percentage_in_account\": -95874649.07981057,\n          \"usage_unit\": \"ad\"\n        },\n        \"fargate_container_profiler_average\": {\n          \"account_billable_usage\": 26380221,\n          \"elapsed_usage_hours\": 98271607,\n          \"first_billable_usage_hour\": \"2013-08-19T18:21:29.119Z\",\n          \"last_billable_usage_hour\": \"1946-03-16T19:10:15.402Z\",\n          \"org_billable_usage\": -52585962,\n          \"percentage_in_account\": 62048049.29065183,\n          \"usage_unit\": \"sit fugiat\"\n        },\n        \"fargate_container_profiler_sum\": {\n          \"account_billable_usage\": -93374613,\n          \"elapsed_usage_hours\": 49360618,\n          \"first_billable_usage_hour\": \"2000-10-23T21:13:09.287Z\",\n          \"last_billable_usage_hour\": \"1965-07-14T03:09:27.252Z\",\n          \"org_billable_usage\": 64556573,\n          \"percentage_in_account\": 38184067.59202731,\n          \"usage_unit\": \"minim culpa\"\n        },\n        \"fargate_container_sum\": {\n          \"account_billable_usage\": 94205688,\n          \"elapsed_usage_hours\": -33732127,\n          \"first_billable_usage_hour\": \"2014-08-06T03:34:59.673Z\",\n          \"last_billable_usage_hour\": \"1980-01-13T05:35:43.198Z\",\n          \"org_billable_usage\": 28462732,\n          \"percentage_in_account\": 71932041.8984474,\n          \"usage_unit\": \"id c\"\n        },\n        \"incident_management_maximum\": {\n          \"account_billable_usage\": 26274174,\n          \"elapsed_usage_hours\": 81813305,\n          \"first_billable_usage_hour\": \"1957-05-19T20:25:39.839Z\",\n          \"last_billable_usage_hour\": \"2008-10-10T15:08:48.719Z\",\n          \"org_billable_usage\": 61294181,\n          \"percentage_in_account\": -7540892.606367007,\n          \"usage_unit\": \"anim eu cupidatat\"\n        },\n        \"incident_management_sum\": {\n          \"account_billable_usage\": -10273597,\n          \"elapsed_usage_hours\": 72345123,\n          \"first_billable_usage_hour\": \"1952-05-29T19:02:44.113Z\",\n          \"last_billable_usage_hour\": \"1993-12-13T05:15:57.681Z\",\n          \"org_billable_usage\": 95241696,\n          \"percentage_in_account\": -77407842.23852248,\n          \"usage_unit\": \"velit u\"\n        },\n        \"infra_and_apm_host_sum\": {\n          \"account_billable_usage\": 22740355,\n          \"elapsed_usage_hours\": 75896672,\n          \"first_billable_usage_hour\": \"1952-05-09T19:32:24.302Z\",\n          \"last_billable_usage_hour\": \"1948-11-29T07:48:13.801Z\",\n          \"org_billable_usage\": -39546862,\n          \"percentage_in_account\": -83905670.95749737,\n          \"usage_unit\": \"labore min\"\n        },\n        \"infra_and_apm_host_top99p\": {\n          \"account_billable_usage\": 65373034,\n          \"elapsed_usage_hours\": -81131771,\n          \"first_billable_usage_hour\": \"2011-11-23T20:28:09.831Z\",\n          \"last_billable_usage_hour\": \"1979-01-12T05:35:58.402Z\",\n          \"org_billable_usage\": -52151397,\n          \"percentage_in_account\": 13866664.208427653,\n          \"usage_unit\": \"fugiat\"\n        },\n        \"infra_container_sum\": {\n          \"account_billable_usage\": -79168826,\n          \"elapsed_usage_hours\": -23496304,\n          \"first_billable_usage_hour\": \"1960-12-28T10:14:49.031Z\",\n          \"last_billable_usage_hour\": \"2020-12-02T08:56:16.652Z\",\n          \"org_billable_usage\": 33026969,\n          \"percentage_in_account\": 73946344.51313138,\n          \"usage_unit\": \"qui aute\"\n        },\n        \"infra_host_sum\": {\n          \"account_billable_usage\": -50537635,\n          \"elapsed_usage_hours\": -5534001,\n          \"first_billable_usage_hour\": \"1979-06-06T08:17:15.639Z\",\n          \"last_billable_usage_hour\": \"1952-04-02T09:00:32.961Z\",\n          \"org_billable_usage\": 44838568,\n          \"percentage_in_account\": -8810287.595283255,\n          \"usage_unit\": \"nisi\"\n        },\n        \"infra_host_top99p\": {\n          \"account_billable_usage\": 69119125,\n          \"elapsed_usage_hours\": 28679997,\n          \"first_billable_usage_hour\": \"1973-10-03T12:25:22.994Z\",\n          \"last_billable_usage_hour\": \"1992-10-24T07:11:34.497Z\",\n          \"org_billable_usage\": 41028102,\n          \"percentage_in_account\": -41084741.35411653,\n          \"usage_unit\": \"reprehenderit\"\n        },\n        \"ingested_spans_sum\": {\n          \"account_billable_usage\": 47216463,\n          \"elapsed_usage_hours\": 56940435,\n          \"first_billable_usage_hour\": \"1970-02-08T18:58:47.185Z\",\n          \"last_billable_usage_hour\": \"1961-03-11T17:20:41.765Z\",\n          \"org_billable_usage\": 73084532,\n          \"percentage_in_account\": -18729110.52498232,\n          \"usage_unit\": \"pariatur commodo do\"\n        },\n        \"ingested_timeseries_average\": {\n          \"account_billable_usage\": -96001217,\n          \"elapsed_usage_hours\": 25350254,\n          \"first_billable_usage_hour\": \"1960-07-01T16:15:28.285Z\",\n          \"last_billable_usage_hour\": \"1951-06-03T11:26:39.101Z\",\n          \"org_billable_usage\": -19589558,\n          \"percentage_in_account\": -20289556.632436365,\n          \"usage_unit\": \"cupidatat cillum minim aliquip\"\n        },\n        \"ingested_timeseries_sum\": {\n          \"account_billable_usage\": 20528060,\n          \"elapsed_usage_hours\": -53145678,\n          \"first_billable_usage_hour\": \"1956-04-30T19:40:41.390Z\",\n          \"last_billable_usage_hour\": \"2002-03-09T14:50:01.055Z\",\n          \"org_billable_usage\": -21073917,\n          \"percentage_in_account\": -98913653.73474365,\n          \"usage_unit\": \"ut\"\n        },\n        \"iot_sum\": {\n          \"account_billable_usage\": -7013213,\n          \"elapsed_usage_hours\": -91773911,\n          \"first_billable_usage_hour\": \"1965-01-17T05:45:58.588Z\",\n          \"last_billable_usage_hour\": \"2013-03-24T00:09:29.927Z\",\n          \"org_billable_usage\": -60947842,\n          \"percentage_in_account\": -22744885.703924745,\n          \"usage_unit\": \"velit commodo voluptate exercitation\"\n        },\n        \"iot_top99p\": {\n          \"account_billable_usage\": -14894681,\n          \"elapsed_usage_hours\": 85111629,\n          \"first_billable_usage_hour\": \"2008-11-02T07:07:21.077Z\",\n          \"last_billable_usage_hour\": \"1949-08-11T15:33:01.794Z\",\n          \"org_billable_usage\": 75242063,\n          \"percentage_in_account\": -3817452.197388917,\n          \"usage_unit\": \"fugiat\"\n        },\n        \"lambda_function_average\": {\n          \"account_billable_usage\": 5125291,\n          \"elapsed_usage_hours\": 39857209,\n          \"first_billable_usage_hour\": \"2018-12-09T05:50:43.116Z\",\n          \"last_billable_usage_hour\": \"1948-09-04T18:41:57.007Z\",\n          \"org_billable_usage\": -78504911,\n          \"percentage_in_account\": 20805229.986402825,\n          \"usage_unit\": \"quis\"\n        },\n        \"lambda_function_sum\": {\n          \"account_billable_usage\": 45918598,\n          \"elapsed_usage_hours\": 69753380,\n          \"first_billable_usage_hour\": \"1994-12-06T10:37:19.875Z\",\n          \"last_billable_usage_hour\": \"2013-09-14T23:55:45.799Z\",\n          \"org_billable_usage\": 29003627,\n          \"percentage_in_account\": -48195768.71689191,\n          \"usage_unit\": \"voluptate\"\n        },\n        \"logs_forwarding_sum\": {\n          \"account_billable_usage\": -97123306,\n          \"elapsed_usage_hours\": 64289616,\n          \"first_billable_usage_hour\": \"1997-11-17T15:35:07.726Z\",\n          \"last_billable_usage_hour\": \"1978-09-16T17:45:10.787Z\",\n          \"org_billable_usage\": -60201789,\n          \"percentage_in_account\": -84375766.59013222,\n          \"usage_unit\": \"pariatur\"\n        },\n        \"logs_indexed_15day_sum\": {\n          \"account_billable_usage\": -59375432,\n          \"elapsed_usage_hours\": -68899003,\n          \"first_billable_usage_hour\": \"1969-02-01T22:55:12.009Z\",\n          \"last_billable_usage_hour\": \"2001-01-04T23:05:54.250Z\",\n          \"org_billable_usage\": -48683116,\n          \"percentage_in_account\": -18823247.42484665,\n          \"usage_unit\": \"laborum commodo ad\"\n        },\n        \"logs_indexed_180day_sum\": {\n          \"account_billable_usage\": 17723858,\n          \"elapsed_usage_hours\": 25960555,\n          \"first_billable_usage_hour\": \"2018-07-01T06:15:45.119Z\",\n          \"last_billable_usage_hour\": \"2005-03-23T22:19:08.759Z\",\n          \"org_billable_usage\": 87908553,\n          \"percentage_in_account\": 54254222.90363696,\n          \"usage_unit\": \"officia laboris fugiat enim Excepteur\"\n        },\n        \"logs_indexed_30day_sum\": {\n          \"account_billable_usage\": -64333086,\n          \"elapsed_usage_hours\": 21186783,\n          \"first_billable_usage_hour\": \"2017-09-08T14:38:45.680Z\",\n          \"last_billable_usage_hour\": \"1973-02-24T07:38:16.400Z\",\n          \"org_billable_usage\": 2689255,\n          \"percentage_in_account\": -11566996.118141845,\n          \"usage_unit\": \"in labore laborum aliquip velit\"\n        },\n        \"logs_indexed_360day_sum\": {\n          \"account_billable_usage\": 53418363,\n          \"elapsed_usage_hours\": 92678483,\n          \"first_billable_usage_hour\": \"2000-03-19T03:37:43.202Z\",\n          \"last_billable_usage_hour\": \"1993-03-21T02:39:43.585Z\",\n          \"org_billable_usage\": -2035469,\n          \"percentage_in_account\": -75693352.53357351,\n          \"usage_unit\": \"ipsum aliquip magna\"\n        },\n        \"logs_indexed_3day_sum\": {\n          \"account_billable_usage\": 30211750,\n          \"elapsed_usage_hours\": -23323522,\n          \"first_billable_usage_hour\": \"1964-04-25T02:19:26.112Z\",\n          \"last_billable_usage_hour\": \"2011-02-10T08:07:58.271Z\",\n          \"org_billable_usage\": -19062711,\n          \"percentage_in_account\": 64963831.715791404,\n          \"usage_unit\": \"minim voluptate anim laborum\"\n        },\n        \"logs_indexed_45day_sum\": {\n          \"account_billable_usage\": 69521734,\n          \"elapsed_usage_hours\": 86475880,\n          \"first_billable_usage_hour\": \"1981-10-30T16:42:48.790Z\",\n          \"last_billable_usage_hour\": \"1978-03-31T14:16:23.041Z\",\n          \"org_billable_usage\": -23464816,\n          \"percentage_in_account\": -26637874.798235655,\n          \"usage_unit\": \"aliquip\"\n        },\n        \"logs_indexed_60day_sum\": {\n          \"account_billable_usage\": 60618919,\n          \"elapsed_usage_hours\": 56360833,\n          \"first_billable_usage_hour\": \"2012-05-27T03:55:02.174Z\",\n          \"last_billable_usage_hour\": \"1973-08-30T17:56:13.362Z\",\n          \"org_billable_usage\": -71553781,\n          \"percentage_in_account\": 16599798.816852212,\n          \"usage_unit\": \"reprehenderit incididunt ad\"\n        },\n        \"logs_indexed_7day_sum\": {\n          \"account_billable_usage\": -98055957,\n          \"elapsed_usage_hours\": -69658244,\n          \"first_billable_usage_hour\": \"1966-07-17T23:22:30.143Z\",\n          \"last_billable_usage_hour\": \"2001-09-08T21:53:15.597Z\",\n          \"org_billable_usage\": 86155539,\n          \"percentage_in_account\": -19291932.31626813,\n          \"usage_unit\": \"consectetur mollit\"\n        },\n        \"logs_indexed_90day_sum\": {\n          \"account_billable_usage\": -77577013,\n          \"elapsed_usage_hours\": 54555906,\n          \"first_billable_usage_hour\": \"1964-12-03T19:36:00.900Z\",\n          \"last_billable_usage_hour\": \"1973-03-14T00:51:44.505Z\",\n          \"org_billable_usage\": 80382001,\n          \"percentage_in_account\": 34959889.73153499,\n          \"usage_unit\": \"occaecat nulla in dolor\"\n        },\n        \"logs_indexed_custom_retention_sum\": {\n          \"account_billable_usage\": -98202876,\n          \"elapsed_usage_hours\": -95085889,\n          \"first_billable_usage_hour\": \"1998-09-12T19:44:05.012Z\",\n          \"last_billable_usage_hour\": \"1989-05-17T01:35:39.539Z\",\n          \"org_billable_usage\": 25428931,\n          \"percentage_in_account\": 81055392.2432462,\n          \"usage_unit\": \"sed\"\n        },\n        \"logs_indexed_sum\": {\n          \"account_billable_usage\": 51128263,\n          \"elapsed_usage_hours\": -17815091,\n          \"first_billable_usage_hour\": \"1982-09-17T06:38:44.079Z\",\n          \"last_billable_usage_hour\": \"2017-06-15T10:07:59.007Z\",\n          \"org_billable_usage\": -9431350,\n          \"percentage_in_account\": -1505852.4752716124,\n          \"usage_unit\": \"commodo\"\n        },\n        \"logs_ingested_sum\": {\n          \"account_billable_usage\": 64447962,\n          \"elapsed_usage_hours\": 57806452,\n          \"first_billable_usage_hour\": \"1999-01-26T05:48:33.045Z\",\n          \"last_billable_usage_hour\": \"2015-03-08T12:22:50.644Z\",\n          \"org_billable_usage\": 77883793,\n          \"percentage_in_account\": -81830467.16551848,\n          \"usage_unit\": \"ullamco commodo aliqua\"\n        },\n        \"network_device_sum\": {\n          \"account_billable_usage\": -76769035,\n          \"elapsed_usage_hours\": -93217601,\n          \"first_billable_usage_hour\": \"1992-11-25T21:22:56.883Z\",\n          \"last_billable_usage_hour\": \"2017-03-02T04:21:43.073Z\",\n          \"org_billable_usage\": 86332105,\n          \"percentage_in_account\": -92410964.9100886,\n          \"usage_unit\": \"labore magna\"\n        },\n        \"network_device_top99p\": {\n          \"account_billable_usage\": -72695815,\n          \"elapsed_usage_hours\": 78303373,\n          \"first_billable_usage_hour\": \"2001-03-29T20:54:13.126Z\",\n          \"last_billable_usage_hour\": \"2016-04-05T14:48:29.960Z\",\n          \"org_billable_usage\": -96489674,\n          \"percentage_in_account\": -82669058.15764582,\n          \"usage_unit\": \"deserunt exercitation\"\n        },\n        \"npm_flow_sum\": {\n          \"account_billable_usage\": 72946630,\n          \"elapsed_usage_hours\": 62444493,\n          \"first_billable_usage_hour\": \"2020-03-20T20:59:33.531Z\",\n          \"last_billable_usage_hour\": \"1974-05-11T12:44:15.715Z\",\n          \"org_billable_usage\": -74855982,\n          \"percentage_in_account\": 50772951.20343402,\n          \"usage_unit\": \"minim magna incididunt eiusmod\"\n        },\n        \"npm_host_sum\": {\n          \"account_billable_usage\": -23402729,\n          \"elapsed_usage_hours\": 95298557,\n          \"first_billable_usage_hour\": \"1999-03-21T09:34:43.296Z\",\n          \"last_billable_usage_hour\": \"1990-01-09T17:11:14.471Z\",\n          \"org_billable_usage\": 40423187,\n          \"percentage_in_account\": 4965350.588226646,\n          \"usage_unit\": \"tempor\"\n        },\n        \"npm_host_top99p\": {\n          \"account_billable_usage\": -14552971,\n          \"elapsed_usage_hours\": -91032026,\n          \"first_billable_usage_hour\": \"1973-10-05T19:28:35.539Z\",\n          \"last_billable_usage_hour\": \"1991-12-28T08:12:13.739Z\",\n          \"org_billable_usage\": 42769160,\n          \"percentage_in_account\": -98857931.80298643,\n          \"usage_unit\": \"in magna anim laboris cillum\"\n        },\n        \"observability_pipeline_sum\": {\n          \"account_billable_usage\": 28254618,\n          \"elapsed_usage_hours\": 82317517,\n          \"first_billable_usage_hour\": \"1983-12-18T06:27:29.261Z\",\n          \"last_billable_usage_hour\": \"2015-05-23T01:52:33.030Z\",\n          \"org_billable_usage\": 9348558,\n          \"percentage_in_account\": -99464044.8236595,\n          \"usage_unit\": \"ut adipisicing esse\"\n        },\n        \"online_archive_sum\": {\n          \"account_billable_usage\": -13571346,\n          \"elapsed_usage_hours\": 96372812,\n          \"first_billable_usage_hour\": \"1999-06-09T15:19:09.422Z\",\n          \"last_billable_usage_hour\": \"2016-11-23T14:25:28.509Z\",\n          \"org_billable_usage\": -62085813,\n          \"percentage_in_account\": -91598258.41163407,\n          \"usage_unit\": \"eu in aliquip\"\n        },\n        \"prof_container_sum\": {\n          \"account_billable_usage\": 4348456,\n          \"elapsed_usage_hours\": -10142680,\n          \"first_billable_usage_hour\": \"1988-11-07T22:29:39.220Z\",\n          \"last_billable_usage_hour\": \"1953-02-10T19:45:06.850Z\",\n          \"org_billable_usage\": -19604844,\n          \"percentage_in_account\": -14585101.239284411,\n          \"usage_unit\": \"enim fugiat est\"\n        },\n        \"prof_host_sum\": {\n          \"account_billable_usage\": -21072672,\n          \"elapsed_usage_hours\": -34019831,\n          \"first_billable_usage_hour\": \"2014-08-30T01:17:08.330Z\",\n          \"last_billable_usage_hour\": \"1983-01-07T13:38:48.703Z\",\n          \"org_billable_usage\": -74159923,\n          \"percentage_in_account\": -42919913.222605824,\n          \"usage_unit\": \"do Ut magna\"\n        },\n        \"prof_host_top99p\": {\n          \"account_billable_usage\": -37421880,\n          \"elapsed_usage_hours\": -68478507,\n          \"first_billable_usage_hour\": \"1999-03-30T05:19:05.449Z\",\n          \"last_billable_usage_hour\": \"2023-04-04T11:25:07.979Z\",\n          \"org_billable_usage\": 67428687,\n          \"percentage_in_account\": 54352467.19650674,\n          \"usage_unit\": \"Ut fugiat id\"\n        },\n        \"rum_lite_sum\": {\n          \"account_billable_usage\": 98613142,\n          \"elapsed_usage_hours\": -40563712,\n          \"first_billable_usage_hour\": \"1952-01-04T05:38:51.807Z\",\n          \"last_billable_usage_hour\": \"2010-12-11T23:13:15.793Z\",\n          \"org_billable_usage\": -60756032,\n          \"percentage_in_account\": -99005301.50345288,\n          \"usage_unit\": \"consectetur laboris voluptate\"\n        },\n        \"rum_replay_sum\": {\n          \"account_billable_usage\": 91417468,\n          \"elapsed_usage_hours\": 44430140,\n          \"first_billable_usage_hour\": \"1974-07-05T09:09:16.344Z\",\n          \"last_billable_usage_hour\": \"1953-10-12T19:23:46.057Z\",\n          \"org_billable_usage\": 57473909,\n          \"percentage_in_account\": -4665889.464241609,\n          \"usage_unit\": \"deserunt commodo ex\"\n        },\n        \"rum_sum\": {\n          \"account_billable_usage\": 61483950,\n          \"elapsed_usage_hours\": 23089593,\n          \"first_billable_usage_hour\": \"2007-08-10T22:44:15.501Z\",\n          \"last_billable_usage_hour\": \"2000-11-19T09:17:32.209Z\",\n          \"org_billable_usage\": -24845484,\n          \"percentage_in_account\": 35744283.30825606,\n          \"usage_unit\": \"non eu\"\n        },\n        \"rum_units_sum\": {\n          \"account_billable_usage\": 98969807,\n          \"elapsed_usage_hours\": 44743489,\n          \"first_billable_usage_hour\": \"1974-02-05T11:06:49.024Z\",\n          \"last_billable_usage_hour\": \"1962-07-22T22:30:56.560Z\",\n          \"org_billable_usage\": -99240373,\n          \"percentage_in_account\": -35105473.645975985,\n          \"usage_unit\": \"velit Lorem Ut eu\"\n        },\n        \"sensitive_data_scanner_sum\": {\n          \"account_billable_usage\": -79672016,\n          \"elapsed_usage_hours\": -28531024,\n          \"first_billable_usage_hour\": \"1986-09-26T03:47:15.483Z\",\n          \"last_billable_usage_hour\": \"2006-09-30T20:20:45.973Z\",\n          \"org_billable_usage\": 37426557,\n          \"percentage_in_account\": -81080481.03273515,\n          \"usage_unit\": \"Lorem cupidatat in consectetur\"\n        },\n        \"serverless_apm_sum\": {\n          \"account_billable_usage\": -4714546,\n          \"elapsed_usage_hours\": -97210124,\n          \"first_billable_usage_hour\": \"2004-01-11T05:43:39.181Z\",\n          \"last_billable_usage_hour\": \"1951-01-24T12:24:23.004Z\",\n          \"org_billable_usage\": 26970678,\n          \"percentage_in_account\": 30812367.8401504,\n          \"usage_unit\": \"ea elit dolore sed\"\n        },\n        \"serverless_infra_average\": {\n          \"account_billable_usage\": -57406969,\n          \"elapsed_usage_hours\": 10316622,\n          \"first_billable_usage_hour\": \"1987-01-19T22:51:14.843Z\",\n          \"last_billable_usage_hour\": \"2004-08-08T18:45:09.440Z\",\n          \"org_billable_usage\": 99501252,\n          \"percentage_in_account\": -97334736.47798614,\n          \"usage_unit\": \"anim adipisicing labore\"\n        },\n        \"serverless_infra_sum\": {\n          \"account_billable_usage\": 86744937,\n          \"elapsed_usage_hours\": -81860379,\n          \"first_billable_usage_hour\": \"2018-02-26T18:38:50.106Z\",\n          \"last_billable_usage_hour\": \"1962-05-04T14:05:47.277Z\",\n          \"org_billable_usage\": -41580769,\n          \"percentage_in_account\": 61750828.32816091,\n          \"usage_unit\": \"sed eiusmod aliqua\"\n        },\n        \"serverless_invocation_sum\": {\n          \"account_billable_usage\": 21526359,\n          \"elapsed_usage_hours\": -27346100,\n          \"first_billable_usage_hour\": \"1988-10-12T00:43:03.113Z\",\n          \"last_billable_usage_hour\": \"1953-02-26T09:35:30.974Z\",\n          \"org_billable_usage\": 9334852,\n          \"percentage_in_account\": -7888943.834361404,\n          \"usage_unit\": \"commodo dolor\"\n        },\n        \"siem_sum\": {\n          \"account_billable_usage\": 15448992,\n          \"elapsed_usage_hours\": -18229870,\n          \"first_billable_usage_hour\": \"1990-05-27T10:06:27.908Z\",\n          \"last_billable_usage_hour\": \"1972-10-19T14:08:59.527Z\",\n          \"org_billable_usage\": -29426096,\n          \"percentage_in_account\": -34208705.5728924,\n          \"usage_unit\": \"cupidatat non sunt\"\n        },\n        \"standard_timeseries_average\": {\n          \"account_billable_usage\": -52092628,\n          \"elapsed_usage_hours\": -35825472,\n          \"first_billable_usage_hour\": \"1988-04-12T02:06:45.405Z\",\n          \"last_billable_usage_hour\": \"2013-02-26T06:44:08.612Z\",\n          \"org_billable_usage\": 87484883,\n          \"percentage_in_account\": -59340052.106644414,\n          \"usage_unit\": \"id tempor\"\n        },\n        \"synthetics_api_tests_sum\": {\n          \"account_billable_usage\": 17126066,\n          \"elapsed_usage_hours\": -10657670,\n          \"first_billable_usage_hour\": \"1966-09-25T00:56:16.560Z\",\n          \"last_billable_usage_hour\": \"2016-04-17T07:05:52.887Z\",\n          \"org_billable_usage\": 31764180,\n          \"percentage_in_account\": 98255640.13764447,\n          \"usage_unit\": \"anim in eiusmod cupidatat\"\n        },\n        \"synthetics_app_testing_maximum\": {\n          \"account_billable_usage\": -87317734,\n          \"elapsed_usage_hours\": 1168184,\n          \"first_billable_usage_hour\": \"1945-11-20T23:16:27.167Z\",\n          \"last_billable_usage_hour\": \"1970-05-24T01:10:28.917Z\",\n          \"org_billable_usage\": -79565237,\n          \"percentage_in_account\": -90430308.19631648,\n          \"usage_unit\": \"non ut tempor esse\"\n        },\n        \"synthetics_browser_checks_sum\": {\n          \"account_billable_usage\": 29322184,\n          \"elapsed_usage_hours\": -53625479,\n          \"first_billable_usage_hour\": \"1953-10-05T17:10:40.029Z\",\n          \"last_billable_usage_hour\": \"2004-01-04T18:31:50.161Z\",\n          \"org_billable_usage\": -3356911,\n          \"percentage_in_account\": 49520432.37594879,\n          \"usage_unit\": \"veniam consectetur nisi\"\n        },\n        \"timeseries_average\": {\n          \"account_billable_usage\": -77969434,\n          \"elapsed_usage_hours\": 73715055,\n          \"first_billable_usage_hour\": \"1985-12-15T07:59:43.962Z\",\n          \"last_billable_usage_hour\": \"1945-12-27T01:36:16.028Z\",\n          \"org_billable_usage\": 6432094,\n          \"percentage_in_account\": 71235568.06248125,\n          \"usage_unit\": \"ut consequat incididunt\"\n        },\n        \"timeseries_sum\": {\n          \"account_billable_usage\": 83749211,\n          \"elapsed_usage_hours\": 38018158,\n          \"first_billable_usage_hour\": \"1968-08-03T14:19:32.781Z\",\n          \"last_billable_usage_hour\": \"1992-04-15T15:03:41.385Z\",\n          \"org_billable_usage\": -38304506,\n          \"percentage_in_account\": 73246175.1940661,\n          \"usage_unit\": \"dolor tempor pariatur sed\"\n        }\n      }\n    },\n    {\n      \"billing_plan\": \"voluptate consectetur\",\n      \"end_date\": \"1946-07-11T06:01:44.632Z\",\n      \"num_orgs\": -74423313,\n      \"org_name\": \"cillum sit est cupidatat\",\n      \"public_id\": \"esse culpa in consectetur\",\n      \"ratio_in_month\": -16316414.17005074,\n      \"region\": \"labore qui\",\n      \"start_date\": \"1950-10-23T08:45:20.425Z\",\n      \"usage\": {\n        \"apm_fargate_average\": {\n          \"account_billable_usage\": 95201033,\n          \"elapsed_usage_hours\": -54244501,\n          \"first_billable_usage_hour\": \"1957-03-05T13:11:23.384Z\",\n          \"last_billable_usage_hour\": \"1959-08-22T09:54:30.547Z\",\n          \"org_billable_usage\": 94657657,\n          \"percentage_in_account\": 73244933.41395235,\n          \"usage_unit\": \"consequat dolore nostrud\"\n        },\n        \"apm_fargate_sum\": {\n          \"account_billable_usage\": -80772140,\n          \"elapsed_usage_hours\": 9047657,\n          \"first_billable_usage_hour\": \"2013-07-08T03:34:59.775Z\",\n          \"last_billable_usage_hour\": \"1998-11-04T14:43:42.983Z\",\n          \"org_billable_usage\": 18079482,\n          \"percentage_in_account\": -45765242.12504491,\n          \"usage_unit\": \"ex Ut sint\"\n        },\n        \"apm_host_sum\": {\n          \"account_billable_usage\": -71118640,\n          \"elapsed_usage_hours\": 14492898,\n          \"first_billable_usage_hour\": \"1953-11-30T08:37:39.990Z\",\n          \"last_billable_usage_hour\": \"1972-05-12T03:56:52.768Z\",\n          \"org_billable_usage\": 69276513,\n          \"percentage_in_account\": -53494077.57668616,\n          \"usage_unit\": \"in occaecat\"\n        },\n        \"apm_host_top99p\": {\n          \"account_billable_usage\": 25521403,\n          \"elapsed_usage_hours\": 44889277,\n          \"first_billable_usage_hour\": \"2021-02-18T20:24:41.798Z\",\n          \"last_billable_usage_hour\": \"1952-05-05T03:14:56.964Z\",\n          \"org_billable_usage\": 38467741,\n          \"percentage_in_account\": 55785400.424381614,\n          \"usage_unit\": \"eiusmod ea vo\"\n        },\n        \"apm_profiler_host_sum\": {\n          \"account_billable_usage\": -16722797,\n          \"elapsed_usage_hours\": -95795009,\n          \"first_billable_usage_hour\": \"2014-07-13T00:19:00.372Z\",\n          \"last_billable_usage_hour\": \"1994-01-12T23:55:00.733Z\",\n          \"org_billable_usage\": 96183196,\n          \"percentage_in_account\": -83768807.99094474,\n          \"usage_unit\": \"veniam\"\n        },\n        \"apm_profiler_host_top99p\": {\n          \"account_billable_usage\": -15574342,\n          \"elapsed_usage_hours\": -74512231,\n          \"first_billable_usage_hour\": \"1980-08-22T03:45:27.514Z\",\n          \"last_billable_usage_hour\": \"2022-01-07T10:30:59.491Z\",\n          \"org_billable_usage\": 75240180,\n          \"percentage_in_account\": 79972857.5472993,\n          \"usage_unit\": \"pariatur eiusmod est cupidatat ea\"\n        },\n        \"apm_trace_search_sum\": {\n          \"account_billable_usage\": 18753526,\n          \"elapsed_usage_hours\": -5543650,\n          \"first_billable_usage_hour\": \"2021-11-06T12:22:13.793Z\",\n          \"last_billable_usage_hour\": \"1970-07-22T11:33:11.750Z\",\n          \"org_billable_usage\": 21439820,\n          \"percentage_in_account\": -75827604.43712902,\n          \"usage_unit\": \"aliqua eiusmod dolore in id\"\n        },\n        \"application_security_fargate_average\": {\n          \"account_billable_usage\": -75743212,\n          \"elapsed_usage_hours\": 80906595,\n          \"first_billable_usage_hour\": \"2008-06-15T18:10:44.177Z\",\n          \"last_billable_usage_hour\": \"1979-06-02T12:12:55.020Z\",\n          \"org_billable_usage\": 82028637,\n          \"percentage_in_account\": 67082651.07261729,\n          \"usage_unit\": \"deserunt dolor adipisicing ut\"\n        },\n        \"application_security_host_sum\": {\n          \"account_billable_usage\": -9487876,\n          \"elapsed_usage_hours\": -26219205,\n          \"first_billable_usage_hour\": \"2020-08-27T09:46:41.024Z\",\n          \"last_billable_usage_hour\": \"1954-03-22T05:29:45.049Z\",\n          \"org_billable_usage\": -43905717,\n          \"percentage_in_account\": 70117529.33797112,\n          \"usage_unit\": \"minim amet\"\n        },\n        \"application_security_host_top99p\": {\n          \"account_billable_usage\": 45913482,\n          \"elapsed_usage_hours\": -81678919,\n          \"first_billable_usage_hour\": \"2015-12-15T20:06:13.950Z\",\n          \"last_billable_usage_hour\": \"1980-06-22T01:34:05.485Z\",\n          \"org_billable_usage\": 72149098,\n          \"percentage_in_account\": 61847655.382096946,\n          \"usage_unit\": \"commodo dolor\"\n        },\n        \"ci_pipeline_indexed_spans_sum\": {\n          \"account_billable_usage\": -29489369,\n          \"elapsed_usage_hours\": -62818698,\n          \"first_billable_usage_hour\": \"1971-10-31T09:23:15.855Z\",\n          \"last_billable_usage_hour\": \"1991-10-04T15:44:30.194Z\",\n          \"org_billable_usage\": -35028712,\n          \"percentage_in_account\": 12574229.208732963,\n          \"usage_unit\": \"veniam Duis cillum\"\n        },\n        \"ci_pipeline_maximum\": {\n          \"account_billable_usage\": -87935138,\n          \"elapsed_usage_hours\": -65562353,\n          \"first_billable_usage_hour\": \"1950-07-18T06:30:03.276Z\",\n          \"last_billable_usage_hour\": \"2009-12-07T17:32:36.155Z\",\n          \"org_billable_usage\": 43388015,\n          \"percentage_in_account\": 98668414.55297637,\n          \"usage_unit\": \"in laborum cillum\"\n        },\n        \"ci_pipeline_sum\": {\n          \"account_billable_usage\": -23882140,\n          \"elapsed_usage_hours\": -71282540,\n          \"first_billable_usage_hour\": \"1995-08-03T16:28:28.730Z\",\n          \"last_billable_usage_hour\": \"1950-09-28T08:57:29.170Z\",\n          \"org_billable_usage\": -51817838,\n          \"percentage_in_account\": 96623688.41516483,\n          \"usage_unit\": \"nisi ut dolore officia\"\n        },\n        \"ci_test_indexed_spans_sum\": {\n          \"account_billable_usage\": -16247966,\n          \"elapsed_usage_hours\": -30203307,\n          \"first_billable_usage_hour\": \"1982-11-15T16:10:58.481Z\",\n          \"last_billable_usage_hour\": \"2016-03-26T15:15:36.802Z\",\n          \"org_billable_usage\": 50636581,\n          \"percentage_in_account\": 66419009.638011426,\n          \"usage_unit\": \"aliquip\"\n        },\n        \"ci_testing_maximum\": {\n          \"account_billable_usage\": -77116302,\n          \"elapsed_usage_hours\": 20528724,\n          \"first_billable_usage_hour\": \"1999-08-24T23:00:01.498Z\",\n          \"last_billable_usage_hour\": \"1983-02-27T13:38:40.903Z\",\n          \"org_billable_usage\": 15055304,\n          \"percentage_in_account\": 85303603.93574628,\n          \"usage_unit\": \"sunt \"\n        },\n        \"ci_testing_sum\": {\n          \"account_billable_usage\": -15274993,\n          \"elapsed_usage_hours\": 14803155,\n          \"first_billable_usage_hour\": \"2022-03-07T10:40:18.569Z\",\n          \"last_billable_usage_hour\": \"1944-03-15T13:14:51.585Z\",\n          \"org_billable_usage\": -28010202,\n          \"percentage_in_account\": -96894740.11621,\n          \"usage_unit\": \"aliquip est officia\"\n        },\n        \"cloud_cost_management_average\": {\n          \"account_billable_usage\": 67426516,\n          \"elapsed_usage_hours\": 54473215,\n          \"first_billable_usage_hour\": \"2002-04-27T16:31:07.355Z\",\n          \"last_billable_usage_hour\": \"2004-10-11T13:17:00.601Z\",\n          \"org_billable_usage\": 28825552,\n          \"percentage_in_account\": 21142280.869528472,\n          \"usage_unit\": \"officia deserunt\"\n        },\n        \"cloud_cost_management_sum\": {\n          \"account_billable_usage\": 53296478,\n          \"elapsed_usage_hours\": 20206262,\n          \"first_billable_usage_hour\": \"1984-05-24T21:15:59.687Z\",\n          \"last_billable_usage_hour\": \"1975-09-16T05:33:28.570Z\",\n          \"org_billable_usage\": -93505324,\n          \"percentage_in_account\": -6392086.473284796,\n          \"usage_unit\": \"in cillum labore esse elit\"\n        },\n        \"cspm_container_sum\": {\n          \"account_billable_usage\": -35519701,\n          \"elapsed_usage_hours\": 43347854,\n          \"first_billable_usage_hour\": \"1949-03-15T22:45:41.445Z\",\n          \"last_billable_usage_hour\": \"1995-08-24T10:45:42.635Z\",\n          \"org_billable_usage\": 6998509,\n          \"percentage_in_account\": -38021225.240180634,\n          \"usage_unit\": \"dolore nisi\"\n        },\n        \"cspm_host_sum\": {\n          \"account_billable_usage\": 87932684,\n          \"elapsed_usage_hours\": -25198853,\n          \"first_billable_usage_hour\": \"2008-09-02T12:38:03.841Z\",\n          \"last_billable_usage_hour\": \"1964-02-02T15:11:28.796Z\",\n          \"org_billable_usage\": 37406962,\n          \"percentage_in_account\": -9988014.618568778,\n          \"usage_unit\": \"quis\"\n        },\n        \"cspm_host_top99p\": {\n          \"account_billable_usage\": 24349157,\n          \"elapsed_usage_hours\": 26562819,\n          \"first_billable_usage_hour\": \"1975-07-25T05:07:52.010Z\",\n          \"last_billable_usage_hour\": \"1968-05-01T20:16:40.249Z\",\n          \"org_billable_usage\": -18908535,\n          \"percentage_in_account\": -17322063.867658153,\n          \"usage_unit\": \"et Ut ut veniam Lorem\"\n        },\n        \"custom_event_sum\": {\n          \"account_billable_usage\": -27555634,\n          \"elapsed_usage_hours\": -93859876,\n          \"first_billable_usage_hour\": \"1994-02-15T13:46:05.366Z\",\n          \"last_billable_usage_hour\": \"2007-11-26T17:23:10.650Z\",\n          \"org_billable_usage\": 54169301,\n          \"percentage_in_account\": -76249485.20920083,\n          \"usage_unit\": \"ven\"\n        },\n        \"cws_container_sum\": {\n          \"account_billable_usage\": 72716891,\n          \"elapsed_usage_hours\": -30137508,\n          \"first_billable_usage_hour\": \"1971-11-29T22:42:13.515Z\",\n          \"last_billable_usage_hour\": \"2018-05-03T12:07:46.100Z\",\n          \"org_billable_usage\": -7647129,\n          \"percentage_in_account\": 25716194.39052099,\n          \"usage_unit\": \"sint nisi\"\n        },\n        \"cws_host_sum\": {\n          \"account_billable_usage\": 85246090,\n          \"elapsed_usage_hours\": 91036689,\n          \"first_billable_usage_hour\": \"1971-02-18T16:40:48.361Z\",\n          \"last_billable_usage_hour\": \"2020-02-10T10:59:39.095Z\",\n          \"org_billable_usage\": -86477065,\n          \"percentage_in_account\": -47793165.51330099,\n          \"usage_unit\": \"amet qui\"\n        },\n        \"cws_host_top99p\": {\n          \"account_billable_usage\": 73592930,\n          \"elapsed_usage_hours\": 4301798,\n          \"first_billable_usage_hour\": \"2016-04-17T09:18:33.618Z\",\n          \"last_billable_usage_hour\": \"1991-06-05T03:19:57.021Z\",\n          \"org_billable_usage\": -71905582,\n          \"percentage_in_account\": -5106513.027857095,\n          \"usage_unit\": \"exercitation eiusmod sit\"\n        },\n        \"dbm_host_sum\": {\n          \"account_billable_usage\": 78219828,\n          \"elapsed_usage_hours\": -53879632,\n          \"first_billable_usage_hour\": \"1968-03-21T21:04:24.734Z\",\n          \"last_billable_usage_hour\": \"2023-06-25T10:19:16.995Z\",\n          \"org_billable_usage\": -65258592,\n          \"percentage_in_account\": 32758602.009574473,\n          \"usage_unit\": \"in\"\n        },\n        \"dbm_host_top99p\": {\n          \"account_billable_usage\": -61646047,\n          \"elapsed_usage_hours\": -54505334,\n          \"first_billable_usage_hour\": \"1949-04-03T14:49:04.742Z\",\n          \"last_billable_usage_hour\": \"1978-01-06T20:29:17.296Z\",\n          \"org_billable_usage\": -78179702,\n          \"percentage_in_account\": -12086712.445950627,\n          \"usage_unit\": \"sint\"\n        },\n        \"dbm_normalized_queries_average\": {\n          \"account_billable_usage\": 99725754,\n          \"elapsed_usage_hours\": 65625213,\n          \"first_billable_usage_hour\": \"1971-08-03T09:08:25.375Z\",\n          \"last_billable_usage_hour\": \"2005-10-16T20:23:03.424Z\",\n          \"org_billable_usage\": -46253626,\n          \"percentage_in_account\": -22355203.96187219,\n          \"usage_unit\": \"culpa labore\"\n        },\n        \"dbm_normalized_queries_sum\": {\n          \"account_billable_usage\": 24431909,\n          \"elapsed_usage_hours\": -18532846,\n          \"first_billable_usage_hour\": \"1979-05-22T06:56:46.197Z\",\n          \"last_billable_usage_hour\": \"1952-07-28T19:23:03.650Z\",\n          \"org_billable_usage\": -72114810,\n          \"percentage_in_account\": -33477703.873904385,\n          \"usage_unit\": \"deserunt mollit elit fugiat\"\n        },\n        \"fargate_container_apm_and_profiler_average\": {\n          \"account_billable_usage\": -36788741,\n          \"elapsed_usage_hours\": 33791395,\n          \"first_billable_usage_hour\": \"1974-06-29T05:15:58.452Z\",\n          \"last_billable_usage_hour\": \"1949-02-13T14:49:18.902Z\",\n          \"org_billable_usage\": 79923532,\n          \"percentage_in_account\": 51296233.72959408,\n          \"usage_unit\": \"consequat adipisicing amet cillum sint\"\n        },\n        \"fargate_container_apm_and_profiler_sum\": {\n          \"account_billable_usage\": 26460648,\n          \"elapsed_usage_hours\": -95452276,\n          \"first_billable_usage_hour\": \"1999-05-09T22:25:13.737Z\",\n          \"last_billable_usage_hour\": \"1954-09-19T04:27:46.185Z\",\n          \"org_billable_usage\": -65739491,\n          \"percentage_in_account\": 21885726.989590377,\n          \"usage_unit\": \"sit\"\n        },\n        \"fargate_container_average\": {\n          \"account_billable_usage\": 48777344,\n          \"elapsed_usage_hours\": 64985874,\n          \"first_billable_usage_hour\": \"1960-12-02T08:53:08.315Z\",\n          \"last_billable_usage_hour\": \"1950-10-28T06:59:13.160Z\",\n          \"org_billable_usage\": -66671435,\n          \"percentage_in_account\": -31025341.127828106,\n          \"usage_unit\": \"occaecat Excepteur in\"\n        },\n        \"fargate_container_profiler_average\": {\n          \"account_billable_usage\": -69826632,\n          \"elapsed_usage_hours\": -38466098,\n          \"first_billable_usage_hour\": \"1950-11-06T23:31:56.115Z\",\n          \"last_billable_usage_hour\": \"2000-07-20T03:17:53.560Z\",\n          \"org_billable_usage\": -71105985,\n          \"percentage_in_account\": 51683656.517856985,\n          \"usage_unit\": \"magna exercitat\"\n        },\n        \"fargate_container_profiler_sum\": {\n          \"account_billable_usage\": -75722186,\n          \"elapsed_usage_hours\": 44361013,\n          \"first_billable_usage_hour\": \"1957-07-06T14:37:44.380Z\",\n          \"last_billable_usage_hour\": \"2000-01-06T11:57:12.776Z\",\n          \"org_billable_usage\": -79412130,\n          \"percentage_in_account\": -16686108.124653563,\n          \"usage_unit\": \"exercitation\"\n        },\n        \"fargate_container_sum\": {\n          \"account_billable_usage\": 36360295,\n          \"elapsed_usage_hours\": -24511783,\n          \"first_billable_usage_hour\": \"2017-01-24T04:26:13.648Z\",\n          \"last_billable_usage_hour\": \"1962-03-28T15:35:31.735Z\",\n          \"org_billable_usage\": 79512984,\n          \"percentage_in_account\": 50609686.54046589,\n          \"usage_unit\": \"deserunt dolore\"\n        },\n        \"incident_management_maximum\": {\n          \"account_billable_usage\": -29886645,\n          \"elapsed_usage_hours\": -51130172,\n          \"first_billable_usage_hour\": \"1997-12-02T23:43:20.413Z\",\n          \"last_billable_usage_hour\": \"2006-08-03T07:55:52.261Z\",\n          \"org_billable_usage\": -30724239,\n          \"percentage_in_account\": -88963123.38190185,\n          \"usage_unit\": \"ut fugiat a\"\n        },\n        \"incident_management_sum\": {\n          \"account_billable_usage\": 95235207,\n          \"elapsed_usage_hours\": -57664447,\n          \"first_billable_usage_hour\": \"1972-02-09T18:12:06.660Z\",\n          \"last_billable_usage_hour\": \"1959-01-04T05:03:04.552Z\",\n          \"org_billable_usage\": -30635793,\n          \"percentage_in_account\": -73061925.4697018,\n          \"usage_unit\": \"dolor reprehenderit aute elit\"\n        },\n        \"infra_and_apm_host_sum\": {\n          \"account_billable_usage\": 52179618,\n          \"elapsed_usage_hours\": -61905145,\n          \"first_billable_usage_hour\": \"1962-06-01T07:55:08.534Z\",\n          \"last_billable_usage_hour\": \"2015-09-09T22:09:16.860Z\",\n          \"org_billable_usage\": 29639034,\n          \"percentage_in_account\": -62513561.19721115,\n          \"usage_unit\": \"ut sit tempor Ut\"\n        },\n        \"infra_and_apm_host_top99p\": {\n          \"account_billable_usage\": -11727551,\n          \"elapsed_usage_hours\": 16997979,\n          \"first_billable_usage_hour\": \"1955-10-26T05:43:54.219Z\",\n          \"last_billable_usage_hour\": \"2017-07-11T06:49:19.760Z\",\n          \"org_billable_usage\": -22892178,\n          \"percentage_in_account\": -56445462.36745778,\n          \"usage_unit\": \"minim esse aliqua velit\"\n        },\n        \"infra_container_sum\": {\n          \"account_billable_usage\": -24579023,\n          \"elapsed_usage_hours\": -12080579,\n          \"first_billable_usage_hour\": \"1944-12-08T00:26:14.278Z\",\n          \"last_billable_usage_hour\": \"1965-06-02T04:36:46.792Z\",\n          \"org_billable_usage\": 98861053,\n          \"percentage_in_account\": 92472898.08763385,\n          \"usage_unit\": \"do ullamco velit laboris enim\"\n        },\n        \"infra_host_sum\": {\n          \"account_billable_usage\": -23354824,\n          \"elapsed_usage_hours\": -28070205,\n          \"first_billable_usage_hour\": \"1981-05-25T21:53:14.431Z\",\n          \"last_billable_usage_hour\": \"1970-12-30T05:57:09.346Z\",\n          \"org_billable_usage\": 70321149,\n          \"percentage_in_account\": -48484681.71526914,\n          \"usage_unit\": \"laboris fugiat\"\n        },\n        \"infra_host_top99p\": {\n          \"account_billable_usage\": 39724539,\n          \"elapsed_usage_hours\": 75685883,\n          \"first_billable_usage_hour\": \"1995-08-24T12:26:55.701Z\",\n          \"last_billable_usage_hour\": \"2001-10-29T19:27:22.070Z\",\n          \"org_billable_usage\": 46439655,\n          \"percentage_in_account\": -50434239.88328426,\n          \"usage_unit\": \"minim enim nostrud aliqui\"\n        },\n        \"ingested_spans_sum\": {\n          \"account_billable_usage\": 63922157,\n          \"elapsed_usage_hours\": -84722700,\n          \"first_billable_usage_hour\": \"2014-09-18T10:07:08.324Z\",\n          \"last_billable_usage_hour\": \"2022-08-10T19:38:07.249Z\",\n          \"org_billable_usage\": 1467452,\n          \"percentage_in_account\": 27195746.328533813,\n          \"usage_unit\": \"Lorem ex\"\n        },\n        \"ingested_timeseries_average\": {\n          \"account_billable_usage\": 70517811,\n          \"elapsed_usage_hours\": 71624570,\n          \"first_billable_usage_hour\": \"1982-08-25T23:46:19.104Z\",\n          \"last_billable_usage_hour\": \"1955-09-03T19:22:07.578Z\",\n          \"org_billable_usage\": 77385657,\n          \"percentage_in_account\": -290041.0270522386,\n          \"usage_unit\": \"commodo ad\"\n        },\n        \"ingested_timeseries_sum\": {\n          \"account_billable_usage\": 83114951,\n          \"elapsed_usage_hours\": 73520047,\n          \"first_billable_usage_hour\": \"2008-06-10T02:22:09.939Z\",\n          \"last_billable_usage_hour\": \"1959-11-18T12:37:03.137Z\",\n          \"org_billable_usage\": -88658481,\n          \"percentage_in_account\": 8508396.45312132,\n          \"usage_unit\": \"adipisicing dolor\"\n        },\n        \"iot_sum\": {\n          \"account_billable_usage\": 85069112,\n          \"elapsed_usage_hours\": 38585564,\n          \"first_billable_usage_hour\": \"2004-11-10T15:34:28.484Z\",\n          \"last_billable_usage_hour\": \"2002-11-22T11:22:37.516Z\",\n          \"org_billable_usage\": 79819637,\n          \"percentage_in_account\": 83354762.52920556,\n          \"usage_unit\": \"irure ea Excepteur\"\n        },\n        \"iot_top99p\": {\n          \"account_billable_usage\": 71451509,\n          \"elapsed_usage_hours\": -99733201,\n          \"first_billable_usage_hour\": \"1986-07-05T10:01:43.066Z\",\n          \"last_billable_usage_hour\": \"1959-02-23T08:38:22.158Z\",\n          \"org_billable_usage\": 61197030,\n          \"percentage_in_account\": 41861378.71588194,\n          \"usage_unit\": \"laborum elit Duis\"\n        },\n        \"lambda_function_average\": {\n          \"account_billable_usage\": 62737250,\n          \"elapsed_usage_hours\": 37743742,\n          \"first_billable_usage_hour\": \"2011-09-12T14:28:18.112Z\",\n          \"last_billable_usage_hour\": \"1955-07-02T05:18:18.156Z\",\n          \"org_billable_usage\": 44094157,\n          \"percentage_in_account\": -36433193.45855209,\n          \"usage_unit\": \"nulla reprehenderit labore est\"\n        },\n        \"lambda_function_sum\": {\n          \"account_billable_usage\": -99845869,\n          \"elapsed_usage_hours\": 84198679,\n          \"first_billable_usage_hour\": \"2017-02-02T06:15:45.706Z\",\n          \"last_billable_usage_hour\": \"2011-08-04T02:37:28.150Z\",\n          \"org_billable_usage\": -96734858,\n          \"percentage_in_account\": -15067118.857440323,\n          \"usage_unit\": \"nulla occaecat\"\n        },\n        \"logs_forwarding_sum\": {\n          \"account_billable_usage\": -64458828,\n          \"elapsed_usage_hours\": 13276329,\n          \"first_billable_usage_hour\": \"2019-02-22T02:57:04.797Z\",\n          \"last_billable_usage_hour\": \"2019-09-07T19:31:02.254Z\",\n          \"org_billable_usage\": 87469149,\n          \"percentage_in_account\": -39241097.28084107,\n          \"usage_unit\": \"ea elit proident qui veniam\"\n        },\n        \"logs_indexed_15day_sum\": {\n          \"account_billable_usage\": 14642248,\n          \"elapsed_usage_hours\": -72660940,\n          \"first_billable_usage_hour\": \"1953-09-23T05:40:48.380Z\",\n          \"last_billable_usage_hour\": \"1986-06-24T08:27:08.574Z\",\n          \"org_billable_usage\": 33765997,\n          \"percentage_in_account\": -93534926.53067486,\n          \"usage_unit\": \"irure quis\"\n        },\n        \"logs_indexed_180day_sum\": {\n          \"account_billable_usage\": -6960603,\n          \"elapsed_usage_hours\": -6576370,\n          \"first_billable_usage_hour\": \"1960-01-11T15:13:38.560Z\",\n          \"last_billable_usage_hour\": \"1998-11-19T14:45:18.823Z\",\n          \"org_billable_usage\": 16792946,\n          \"percentage_in_account\": 28865909.80437757,\n          \"usage_unit\": \"consectetur fugiat ex sint exercitation\"\n        },\n        \"logs_indexed_30day_sum\": {\n          \"account_billable_usage\": 41304699,\n          \"elapsed_usage_hours\": -24067341,\n          \"first_billable_usage_hour\": \"1977-05-28T16:37:09.983Z\",\n          \"last_billable_usage_hour\": \"1981-03-03T11:51:02.796Z\",\n          \"org_billable_usage\": -18088278,\n          \"percentage_in_account\": 33761101.5925591,\n          \"usage_unit\": \"in nulla enim\"\n        },\n        \"logs_indexed_360day_sum\": {\n          \"account_billable_usage\": -13543713,\n          \"elapsed_usage_hours\": -73531127,\n          \"first_billable_usage_hour\": \"1976-05-24T12:48:59.620Z\",\n          \"last_billable_usage_hour\": \"1946-05-02T15:16:21.245Z\",\n          \"org_billable_usage\": 99582418,\n          \"percentage_in_account\": -63414423.36319583,\n          \"usage_unit\": \"elit\"\n        },\n        \"logs_indexed_3day_sum\": {\n          \"account_billable_usage\": -8433886,\n          \"elapsed_usage_hours\": -40669482,\n          \"first_billable_usage_hour\": \"2007-11-15T19:17:59.628Z\",\n          \"last_billable_usage_hour\": \"1974-11-13T23:08:27.221Z\",\n          \"org_billable_usage\": 31455434,\n          \"percentage_in_account\": 43584142.563533574,\n          \"usage_unit\": \"Lorem exercitation\"\n        },\n        \"logs_indexed_45day_sum\": {\n          \"account_billable_usage\": 51970097,\n          \"elapsed_usage_hours\": -27011072,\n          \"first_billable_usage_hour\": \"1957-03-01T15:40:21.657Z\",\n          \"last_billable_usage_hour\": \"1950-03-10T07:58:12.976Z\",\n          \"org_billable_usage\": -33883627,\n          \"percentage_in_account\": -52565862.88698206,\n          \"usage_unit\": \"magna\"\n        },\n        \"logs_indexed_60day_sum\": {\n          \"account_billable_usage\": 14849426,\n          \"elapsed_usage_hours\": 28508936,\n          \"first_billable_usage_hour\": \"2012-10-05T10:00:11.696Z\",\n          \"last_billable_usage_hour\": \"2001-05-03T01:19:06.899Z\",\n          \"org_billable_usage\": -90230827,\n          \"percentage_in_account\": 65687999.74421084,\n          \"usage_unit\": \"voluptate\"\n        },\n        \"logs_indexed_7day_sum\": {\n          \"account_billable_usage\": 8267537,\n          \"elapsed_usage_hours\": -13932734,\n          \"first_billable_usage_hour\": \"1968-12-18T04:00:00.167Z\",\n          \"last_billable_usage_hour\": \"1996-01-22T21:02:00.050Z\",\n          \"org_billable_usage\": 82391270,\n          \"percentage_in_account\": 73688136.25339606,\n          \"usage_unit\": \"laborum deserunt sed qui voluptate\"\n        },\n        \"logs_indexed_90day_sum\": {\n          \"account_billable_usage\": 50126072,\n          \"elapsed_usage_hours\": -63111815,\n          \"first_billable_usage_hour\": \"2020-03-08T23:29:46.784Z\",\n          \"last_billable_usage_hour\": \"1982-04-26T23:56:23.498Z\",\n          \"org_billable_usage\": -144192,\n          \"percentage_in_account\": 66606728.92002419,\n          \"usage_unit\": \"pariatur amet\"\n        },\n        \"logs_indexed_custom_retention_sum\": {\n          \"account_billable_usage\": -2139848,\n          \"elapsed_usage_hours\": 52899025,\n          \"first_billable_usage_hour\": \"1964-07-10T07:37:19.364Z\",\n          \"last_billable_usage_hour\": \"2003-05-04T15:27:37.246Z\",\n          \"org_billable_usage\": -86740704,\n          \"percentage_in_account\": 42606753.93123129,\n          \"usage_unit\": \"ut id temp\"\n        },\n        \"logs_indexed_sum\": {\n          \"account_billable_usage\": -89646678,\n          \"elapsed_usage_hours\": -23788701,\n          \"first_billable_usage_hour\": \"1948-08-26T14:20:39.572Z\",\n          \"last_billable_usage_hour\": \"1963-02-22T03:33:30.018Z\",\n          \"org_billable_usage\": -37275558,\n          \"percentage_in_account\": 56220870.918427676,\n          \"usage_unit\": \"laboris aliqua\"\n        },\n        \"logs_ingested_sum\": {\n          \"account_billable_usage\": -94374210,\n          \"elapsed_usage_hours\": 22344938,\n          \"first_billable_usage_hour\": \"1951-06-18T11:09:00.085Z\",\n          \"last_billable_usage_hour\": \"1976-05-09T22:21:48.814Z\",\n          \"org_billable_usage\": -77937491,\n          \"percentage_in_account\": -20051462.70650822,\n          \"usage_unit\": \"esse quis ex dolore\"\n        },\n        \"network_device_sum\": {\n          \"account_billable_usage\": 62270666,\n          \"elapsed_usage_hours\": 30593681,\n          \"first_billable_usage_hour\": \"1996-06-16T14:59:56.991Z\",\n          \"last_billable_usage_hour\": \"1948-04-05T00:37:08.281Z\",\n          \"org_billable_usage\": -7633008,\n          \"percentage_in_account\": 93972466.35408276,\n          \"usage_unit\": \"est in\"\n        },\n        \"network_device_top99p\": {\n          \"account_billable_usage\": -13389514,\n          \"elapsed_usage_hours\": -89324363,\n          \"first_billable_usage_hour\": \"1960-06-04T08:28:33.340Z\",\n          \"last_billable_usage_hour\": \"2009-07-03T15:43:36.926Z\",\n          \"org_billable_usage\": -14482090,\n          \"percentage_in_account\": 34134235.85057172,\n          \"usage_unit\": \"officia ipsum ullamco occaecat\"\n        },\n        \"npm_flow_sum\": {\n          \"account_billable_usage\": 21817444,\n          \"elapsed_usage_hours\": -38396899,\n          \"first_billable_usage_hour\": \"2001-09-26T18:15:58.076Z\",\n          \"last_billable_usage_hour\": \"1985-01-29T11:55:30.641Z\",\n          \"org_billable_usage\": 57637922,\n          \"percentage_in_account\": 7511114.683957264,\n          \"usage_unit\": \"aliquip dolore enim\"\n        },\n        \"npm_host_sum\": {\n          \"account_billable_usage\": 90282963,\n          \"elapsed_usage_hours\": 57544282,\n          \"first_billable_usage_hour\": \"1963-06-09T23:45:26.886Z\",\n          \"last_billable_usage_hour\": \"1960-09-03T21:54:37.478Z\",\n          \"org_billable_usage\": 18710643,\n          \"percentage_in_account\": -10916114.914293379,\n          \"usage_unit\": \"et nostrud fugiat\"\n        },\n        \"npm_host_top99p\": {\n          \"account_billable_usage\": 97027342,\n          \"elapsed_usage_hours\": 74281760,\n          \"first_billable_usage_hour\": \"1952-05-06T23:13:20.804Z\",\n          \"last_billable_usage_hour\": \"1961-08-02T07:20:00.845Z\",\n          \"org_billable_usage\": 11577379,\n          \"percentage_in_account\": -26817545.079561353,\n          \"usage_unit\": \"nisi ex exercitation\"\n        },\n        \"observability_pipeline_sum\": {\n          \"account_billable_usage\": -69381334,\n          \"elapsed_usage_hours\": 83995326,\n          \"first_billable_usage_hour\": \"1957-05-18T03:28:29.767Z\",\n          \"last_billable_usage_hour\": \"1944-11-27T17:05:38.390Z\",\n          \"org_billable_usage\": 12812362,\n          \"percentage_in_account\": 22609501.259711355,\n          \"usage_unit\": \"commodo Excepteur eiusmod\"\n        },\n        \"online_archive_sum\": {\n          \"account_billable_usage\": 13629207,\n          \"elapsed_usage_hours\": 49162822,\n          \"first_billable_usage_hour\": \"1982-08-17T22:03:09.915Z\",\n          \"last_billable_usage_hour\": \"1962-11-25T14:09:25.108Z\",\n          \"org_billable_usage\": 61807348,\n          \"percentage_in_account\": 75316043.97694588,\n          \"usage_unit\": \"aliqua ad elit\"\n        },\n        \"prof_container_sum\": {\n          \"account_billable_usage\": -22860469,\n          \"elapsed_usage_hours\": -80437716,\n          \"first_billable_usage_hour\": \"1965-08-31T23:27:05.508Z\",\n          \"last_billable_usage_hour\": \"2012-04-30T15:39:12.043Z\",\n          \"org_billable_usage\": -42479072,\n          \"percentage_in_account\": 45754413.62195444,\n          \"usage_unit\": \"sint sed eiusmod\"\n        },\n        \"prof_host_sum\": {\n          \"account_billable_usage\": -76208509,\n          \"elapsed_usage_hours\": 19880350,\n          \"first_billable_usage_hour\": \"1995-03-29T12:19:46.267Z\",\n          \"last_billable_usage_hour\": \"2003-06-22T23:36:58.741Z\",\n          \"org_billable_usage\": 40303515,\n          \"percentage_in_account\": 73601926.27514216,\n          \"usage_unit\": \"esse aute labo\"\n        },\n        \"prof_host_top99p\": {\n          \"account_billable_usage\": -98899589,\n          \"elapsed_usage_hours\": 70129231,\n          \"first_billable_usage_hour\": \"1975-01-10T00:01:51.641Z\",\n          \"last_billable_usage_hour\": \"1972-11-06T22:43:17.375Z\",\n          \"org_billable_usage\": 77023242,\n          \"percentage_in_account\": -44434243.68754001,\n          \"usage_unit\": \"dolor \"\n        },\n        \"rum_lite_sum\": {\n          \"account_billable_usage\": 18277631,\n          \"elapsed_usage_hours\": -37752679,\n          \"first_billable_usage_hour\": \"2018-04-27T13:29:24.120Z\",\n          \"last_billable_usage_hour\": \"2016-04-25T00:21:14.653Z\",\n          \"org_billable_usage\": -93889913,\n          \"percentage_in_account\": -31790071.182945386,\n          \"usage_unit\": \"nulla\"\n        },\n        \"rum_replay_sum\": {\n          \"account_billable_usage\": 94212864,\n          \"elapsed_usage_hours\": 81485176,\n          \"first_billable_usage_hour\": \"1951-07-25T13:19:48.251Z\",\n          \"last_billable_usage_hour\": \"1958-03-24T00:13:00.845Z\",\n          \"org_billable_usage\": 13498974,\n          \"percentage_in_account\": 16252156.186298579,\n          \"usage_unit\": \"nul\"\n        },\n        \"rum_sum\": {\n          \"account_billable_usage\": -75151578,\n          \"elapsed_usage_hours\": -90347388,\n          \"first_billable_usage_hour\": \"1966-02-24T02:20:20.826Z\",\n          \"last_billable_usage_hour\": \"1963-12-30T06:08:16.103Z\",\n          \"org_billable_usage\": -78468478,\n          \"percentage_in_account\": 17235590.500701874,\n          \"usage_unit\": \"dolor \"\n        },\n        \"rum_units_sum\": {\n          \"account_billable_usage\": -98554740,\n          \"elapsed_usage_hours\": -79278900,\n          \"first_billable_usage_hour\": \"1967-01-02T07:16:42.396Z\",\n          \"last_billable_usage_hour\": \"1961-10-13T21:58:58.664Z\",\n          \"org_billable_usage\": -45798126,\n          \"percentage_in_account\": -37132886.37521273,\n          \"usage_unit\": \"des\"\n        },\n        \"sensitive_data_scanner_sum\": {\n          \"account_billable_usage\": -12764608,\n          \"elapsed_usage_hours\": 93769718,\n          \"first_billable_usage_hour\": \"2017-02-21T04:28:58.095Z\",\n          \"last_billable_usage_hour\": \"1952-07-08T21:49:12.188Z\",\n          \"org_billable_usage\": 30996439,\n          \"percentage_in_account\": -58771258.083026856,\n          \"usage_unit\": \"do non id irure\"\n        },\n        \"serverless_apm_sum\": {\n          \"account_billable_usage\": 19055343,\n          \"elapsed_usage_hours\": -42428787,\n          \"first_billable_usage_hour\": \"1993-05-01T00:46:19.932Z\",\n          \"last_billable_usage_hour\": \"1956-09-25T19:57:52.711Z\",\n          \"org_billable_usage\": 87000002,\n          \"percentage_in_account\": 80700068.3740071,\n          \"usage_unit\": \"sunt nostrud amet non\"\n        },\n        \"serverless_infra_average\": {\n          \"account_billable_usage\": 91585182,\n          \"elapsed_usage_hours\": -36327141,\n          \"first_billable_usage_hour\": \"1982-10-02T19:14:37.325Z\",\n          \"last_billable_usage_hour\": \"2016-12-31T15:25:38.199Z\",\n          \"org_billable_usage\": 89409405,\n          \"percentage_in_account\": -95716530.98349735,\n          \"usage_unit\": \"sunt eu\"\n        },\n        \"serverless_infra_sum\": {\n          \"account_billable_usage\": 27701426,\n          \"elapsed_usage_hours\": 11022718,\n          \"first_billable_usage_hour\": \"2004-04-10T17:48:23.645Z\",\n          \"last_billable_usage_hour\": \"1970-07-15T17:07:18.927Z\",\n          \"org_billable_usage\": 37067584,\n          \"percentage_in_account\": -61981644.561771266,\n          \"usage_unit\": \"nisi dolor\"\n        },\n        \"serverless_invocation_sum\": {\n          \"account_billable_usage\": 94153918,\n          \"elapsed_usage_hours\": -11470286,\n          \"first_billable_usage_hour\": \"2023-08-07T14:11:22.338Z\",\n          \"last_billable_usage_hour\": \"1995-06-05T02:06:11.592Z\",\n          \"org_billable_usage\": -16874618,\n          \"percentage_in_account\": -40931307.33843977,\n          \"usage_unit\": \"incididunt nulla\"\n        },\n        \"siem_sum\": {\n          \"account_billable_usage\": -79059679,\n          \"elapsed_usage_hours\": 77871910,\n          \"first_billable_usage_hour\": \"2001-03-13T15:49:06.246Z\",\n          \"last_billable_usage_hour\": \"2009-01-26T04:37:00.949Z\",\n          \"org_billable_usage\": 38114817,\n          \"percentage_in_account\": -85518666.7152759,\n          \"usage_unit\": \"quis in\"\n        },\n        \"standard_timeseries_average\": {\n          \"account_billable_usage\": 86267086,\n          \"elapsed_usage_hours\": 97477619,\n          \"first_billable_usage_hour\": \"1961-03-31T23:24:29.724Z\",\n          \"last_billable_usage_hour\": \"1975-09-08T09:29:38.428Z\",\n          \"org_billable_usage\": -92121964,\n          \"percentage_in_account\": 58170433.29453808,\n          \"usage_unit\": \"dolor dolore ut\"\n        },\n        \"synthetics_api_tests_sum\": {\n          \"account_billable_usage\": -11503183,\n          \"elapsed_usage_hours\": -79909720,\n          \"first_billable_usage_hour\": \"2008-08-01T23:11:43.932Z\",\n          \"last_billable_usage_hour\": \"2004-12-31T12:32:06.234Z\",\n          \"org_billable_usage\": 84141466,\n          \"percentage_in_account\": -55267759.20165163,\n          \"usage_unit\": \"occaecat aliqua\"\n        },\n        \"synthetics_app_testing_maximum\": {\n          \"account_billable_usage\": -287807,\n          \"elapsed_usage_hours\": -70119320,\n          \"first_billable_usage_hour\": \"1999-09-08T18:23:22.879Z\",\n          \"last_billable_usage_hour\": \"1961-03-04T08:46:45.060Z\",\n          \"org_billable_usage\": 56814694,\n          \"percentage_in_account\": 99465641.53949922,\n          \"usage_unit\": \"consequat elit non aliquip cu\"\n        },\n        \"synthetics_browser_checks_sum\": {\n          \"account_billable_usage\": -2479450,\n          \"elapsed_usage_hours\": -20707007,\n          \"first_billable_usage_hour\": \"1952-04-09T20:37:15.159Z\",\n          \"last_billable_usage_hour\": \"1953-12-15T14:26:16.298Z\",\n          \"org_billable_usage\": -33602872,\n          \"percentage_in_account\": -92884039.201584,\n          \"usage_unit\": \"proident sed consectetur irure anim\"\n        },\n        \"timeseries_average\": {\n          \"account_billable_usage\": 30583388,\n          \"elapsed_usage_hours\": 61851662,\n          \"first_billable_usage_hour\": \"1951-11-08T06:10:04.553Z\",\n          \"last_billable_usage_hour\": \"1964-02-14T23:08:20.693Z\",\n          \"org_billable_usage\": 80981581,\n          \"percentage_in_account\": 3111818.7600605935,\n          \"usage_unit\": \"pariatur irure cillum laboris\"\n        },\n        \"timeseries_sum\": {\n          \"account_billable_usage\": -73027356,\n          \"elapsed_usage_hours\": -42512673,\n          \"first_billable_usage_hour\": \"1950-12-04T10:31:38.127Z\",\n          \"last_billable_usage_hour\": \"1962-07-15T13:16:15.820Z\",\n          \"org_billable_usage\": -7983395,\n          \"percentage_in_account\": -33340310.441502474,\n          \"usage_unit\": \"sed fugi\"\n        }\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/billable-summary?month=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"billable-summary"
									],
									"query": [
										{
											"key": "month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage starting this month."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/billable-summary?month=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"billable-summary"
									],
									"query": [
										{
											"key": "month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage starting this month."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/billable-summary?month=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"billable-summary"
									],
									"query": [
										{
											"key": "month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage starting this month."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for CI visibility",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/ci-app?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"ci-app"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for CI visibility (tests, pipeline, and spans).\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/ci-app?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"ci-app"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"ci_pipeline_indexed_spans\": -5402073,\n      \"ci_test_indexed_spans\": -88744639,\n      \"ci_visibility_itr_committers\": -51139220,\n      \"ci_visibility_pipeline_committers\": 13817178,\n      \"ci_visibility_test_committers\": 99022641,\n      \"org_name\": \"sed sint sit\",\n      \"public_id\": \"ipsum minim in\"\n    },\n    {\n      \"ci_pipeline_indexed_spans\": -14898313,\n      \"ci_test_indexed_spans\": 85106726,\n      \"ci_visibility_itr_committers\": -80058598,\n      \"ci_visibility_pipeline_committers\": -30449048,\n      \"ci_visibility_test_committers\": 95504246,\n      \"org_name\": \"ea occaecat\",\n      \"public_id\": \"ad tempor amet eu aliquip\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/ci-app?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"ci-app"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/ci-app?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"ci-app"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/ci-app?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"ci-app"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for CSPM",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/cspm?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"cspm"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for cloud security posture management (CSPM).\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/cspm?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"cspm"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"aas_host_count\": -80766489.56845878,\n      \"aws_host_count\": 17971624.141541034,\n      \"azure_host_count\": -63389392.498256706,\n      \"compliance_host_count\": -36217158.04911183,\n      \"container_count\": 11133759.007289752,\n      \"gcp_host_count\": 50901682.36994678,\n      \"host_count\": -47780028.372240715,\n      \"hour\": \"2018-03-17T20:30:04.637Z\",\n      \"org_name\": \"mollit\",\n      \"public_id\": \"laborum aliqua ex irure\"\n    },\n    {\n      \"aas_host_count\": -98211553.22625725,\n      \"aws_host_count\": -72710141.40577123,\n      \"azure_host_count\": 57237415.532838285,\n      \"compliance_host_count\": 955332.3425777704,\n      \"container_count\": -47480535.50305298,\n      \"gcp_host_count\": -39047011.60659756,\n      \"host_count\": 61940711.68366918,\n      \"hour\": \"2009-11-04T13:20:03.152Z\",\n      \"org_name\": \"mollit adipisicing velit\",\n      \"public_id\": \"officia amet do in\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/cspm?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"cspm"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/cspm?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"cspm"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/cspm?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"cspm"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for cloud workload security",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/cws?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"cws"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for cloud workload security.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/cws?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"cws"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"cws_container_count\": -18236462,\n      \"cws_host_count\": -15883526,\n      \"hour\": \"2004-08-27T16:46:16.122Z\",\n      \"org_name\": \"non elit in ut do\",\n      \"public_id\": \"Duis Excepteur i\"\n    },\n    {\n      \"cws_container_count\": 84823788,\n      \"cws_host_count\": 2443233,\n      \"hour\": \"1983-09-12T10:32:28.562Z\",\n      \"org_name\": \"officia dolore\",\n      \"public_id\": \"velit consequat\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/cws?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"cws"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/cws?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"cws"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/cws?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"cws"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for database monitoring",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/dbm?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"dbm"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for database monitoring\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/dbm?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"dbm"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"dbm_host_count\": 9967010,\n      \"dbm_queries_count\": 1783121,\n      \"hour\": \"1954-07-17T06:37:47.375Z\",\n      \"org_name\": \"ad ex Ut sit\",\n      \"public_id\": \"velit la\"\n    },\n    {\n      \"dbm_host_count\": -97840226,\n      \"dbm_queries_count\": -33049858,\n      \"hour\": \"1952-07-22T21:34:27.281Z\",\n      \"org_name\": \"in ad eu\",\n      \"public_id\": \"ex tempor \"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/dbm?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"dbm"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/dbm?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"dbm"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/dbm?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"dbm"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for Fargate",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/fargate?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"fargate"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							]
						},
						"description": "Get hourly usage for [Fargate](https://docs.datadoghq.com/integrations/ecs_fargate/).\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/fargate?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"fargate"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"apm_fargate_count\": -7566661,\n      \"appsec_fargate_count\": 43491151,\n      \"avg_profiled_fargate_tasks\": -82629728,\n      \"hour\": \"1995-07-08T06:20:12.679Z\",\n      \"org_name\": \"et tempor id dolore dolor\",\n      \"public_id\": \"ullamco dolor\",\n      \"tasks_count\": 700983\n    },\n    {\n      \"apm_fargate_count\": 20872318,\n      \"appsec_fargate_count\": -9274685,\n      \"avg_profiled_fargate_tasks\": -62220128,\n      \"hour\": \"1981-07-30T14:05:46.059Z\",\n      \"org_name\": \"nulla tempor cillum\",\n      \"public_id\": \"Excepteur\",\n      \"tasks_count\": 94096051\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/fargate?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"fargate"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/fargate?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"fargate"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/fargate?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"fargate"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for hosts and containers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/hosts?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"hosts"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							]
						},
						"description": "Get hourly usage for hosts and containers.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/hosts?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"hosts"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"agent_host_count\": 73441781,\n      \"alibaba_host_count\": 90401508,\n      \"apm_azure_app_service_host_count\": -86849264,\n      \"apm_host_count\": 82769044,\n      \"aws_host_count\": 14539535,\n      \"azure_host_count\": 2961184,\n      \"container_count\": 98523302,\n      \"gcp_host_count\": -58899544,\n      \"heroku_host_count\": -59373102,\n      \"host_count\": -77148345,\n      \"hour\": \"1983-07-20T14:45:29.119Z\",\n      \"infra_azure_app_service\": 51619587,\n      \"opentelemetry_apm_host_count\": 17751454,\n      \"opentelemetry_host_count\": 76877077,\n      \"org_name\": \"incididunt eiusmod veniam\",\n      \"public_id\": \"cupidatat officia\",\n      \"vsphere_host_count\": -81797713\n    },\n    {\n      \"agent_host_count\": 38112848,\n      \"alibaba_host_count\": 63494534,\n      \"apm_azure_app_service_host_count\": 51846293,\n      \"apm_host_count\": 87787743,\n      \"aws_host_count\": 67240241,\n      \"azure_host_count\": -72169913,\n      \"container_count\": 15638104,\n      \"gcp_host_count\": 69594500,\n      \"heroku_host_count\": 48641450,\n      \"host_count\": -78289977,\n      \"hour\": \"1992-06-10T12:42:23.102Z\",\n      \"infra_azure_app_service\": -33630613,\n      \"opentelemetry_apm_host_count\": 51094183,\n      \"opentelemetry_host_count\": 54526263,\n      \"org_name\": \"laborum cillum\",\n      \"public_id\": \"culpa incididunt qui do\",\n      \"vsphere_host_count\": -8217961\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/hosts?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"hosts"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/hosts?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"hosts"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/hosts?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"hosts"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage attribution",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/hourly-attribution?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z&usage_type=profiled_host_usage&next_record_id=tempor Ut sed velit&tag_breakdown_keys=tempor Ut sed velit&include_descendants=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"hourly-attribution"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								},
								{
									"key": "usage_type",
									"value": "profiled_host_usage",
									"description": "(Required) Usage type to retrieve."
								},
								{
									"key": "next_record_id",
									"value": "tempor Ut sed velit",
									"description": "List following results with a next_record_id provided in the previous query."
								},
								{
									"key": "tag_breakdown_keys",
									"value": "tempor Ut sed velit",
									"description": "Comma separated list of tags used to group usage. If no value is provided the usage will not be broken down by tags.\n\nTo see which tags are available, look for the value of `tag_config_source` in the API response."
								},
								{
									"key": "include_descendants",
									"value": "true",
									"description": "Include child org usage in the response. Defaults to `true`."
								}
							]
						},
						"description": "Get hourly usage attribution. Multi-region data is available starting March 1, 2023.\n\nThis API endpoint is paginated. To make sure you receive all records, check if the value of `next_record_id` is\nset in the response. If it is, make another request and pass `next_record_id` as a parameter.\nPseudo code example:\n\n```\nresponse := GetHourlyUsageAttribution(start_month)\ncursor := response.metadata.pagination.next_record_id\nWHILE cursor != null BEGIN\n  sleep(5 seconds)  # Avoid running into rate limit\n  response := GetHourlyUsageAttribution(start_month, next_record_id=cursor)\n  cursor := response.metadata.pagination.next_record_id\nEND\n```"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/hourly-attribution?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z&usage_type=profiled_host_usage&next_record_id=tempor Ut sed velit&tag_breakdown_keys=tempor Ut sed velit&include_descendants=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"hourly-attribution"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										},
										{
											"key": "usage_type",
											"value": "profiled_host_usage",
											"description": "(Required) Usage type to retrieve."
										},
										{
											"key": "next_record_id",
											"value": "tempor Ut sed velit",
											"description": "List following results with a next_record_id provided in the previous query."
										},
										{
											"key": "tag_breakdown_keys",
											"value": "tempor Ut sed velit",
											"description": "Comma separated list of tags used to group usage. If no value is provided the usage will not be broken down by tags.\n\nTo see which tags are available, look for the value of `tag_config_source` in the API response."
										},
										{
											"key": "include_descendants",
											"value": "true",
											"description": "Include child org usage in the response. Defaults to `true`."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"metadata\": {\n    \"pagination\": {\n      \"next_record_id\": \"proident mollit\"\n    }\n  },\n  \"usage\": [\n    {\n      \"hour\": \"1986-01-17T07:37:35.170Z\",\n      \"org_name\": \"in labore reprehenderit in Exce\",\n      \"public_id\": \"minim deserunt dolor qui\",\n      \"region\": \"pariatur minim Lorem\",\n      \"tag_config_source\": \"ut adipisicing ut\",\n      \"tags\": {\n        \"anim__1a\": [\n          \"datadog-integrations-lab\",\n          \"datadog-integrations-lab\"\n        ]\n      },\n      \"total_usage_sum\": -77225004.76702869,\n      \"updated_at\": \"dolore ipsum cupidatat\",\n      \"usage_type\": \"snmp_usage\"\n    },\n    {\n      \"hour\": \"2007-03-17T08:17:32.448Z\",\n      \"org_name\": \"sint mollit ut et\",\n      \"public_id\": \"amet Excepteur officia\",\n      \"region\": \"proident\",\n      \"tag_config_source\": \"cillum\",\n      \"tags\": {\n        \"Duis_2\": [\n          \"datadog-integrations-lab\",\n          \"datadog-integrations-lab\"\n        ]\n      },\n      \"total_usage_sum\": 57869801.725036174,\n      \"updated_at\": \"ea in\",\n      \"usage_type\": \"api_usage\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/hourly-attribution?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z&usage_type=profiled_host_usage&next_record_id=tempor Ut sed velit&tag_breakdown_keys=tempor Ut sed velit&include_descendants=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"hourly-attribution"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										},
										{
											"key": "usage_type",
											"value": "profiled_host_usage",
											"description": "(Required) Usage type to retrieve."
										},
										{
											"key": "next_record_id",
											"value": "tempor Ut sed velit",
											"description": "List following results with a next_record_id provided in the previous query."
										},
										{
											"key": "tag_breakdown_keys",
											"value": "tempor Ut sed velit",
											"description": "Comma separated list of tags used to group usage. If no value is provided the usage will not be broken down by tags.\n\nTo see which tags are available, look for the value of `tag_config_source` in the API response."
										},
										{
											"key": "include_descendants",
											"value": "true",
											"description": "Include child org usage in the response. Defaults to `true`."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/hourly-attribution?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z&usage_type=profiled_host_usage&next_record_id=tempor Ut sed velit&tag_breakdown_keys=tempor Ut sed velit&include_descendants=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"hourly-attribution"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										},
										{
											"key": "usage_type",
											"value": "profiled_host_usage",
											"description": "(Required) Usage type to retrieve."
										},
										{
											"key": "next_record_id",
											"value": "tempor Ut sed velit",
											"description": "List following results with a next_record_id provided in the previous query."
										},
										{
											"key": "tag_breakdown_keys",
											"value": "tempor Ut sed velit",
											"description": "Comma separated list of tags used to group usage. If no value is provided the usage will not be broken down by tags.\n\nTo see which tags are available, look for the value of `tag_config_source` in the API response."
										},
										{
											"key": "include_descendants",
											"value": "true",
											"description": "Include child org usage in the response. Defaults to `true`."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for incident management",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/incident-management?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"incident-management"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for incident management.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/incident-management?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"incident-management"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"hour\": \"1992-05-28T05:26:48.189Z\",\n      \"monthly_active_users\": -88456186,\n      \"org_name\": \"laborum sed\",\n      \"public_id\": \"occaecat veniam commodo aliquip\"\n    },\n    {\n      \"hour\": \"2013-01-18T08:23:02.573Z\",\n      \"monthly_active_users\": 68559961,\n      \"org_name\": \"mollit sed aliqua Ut\",\n      \"public_id\": \"comm\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/incident-management?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"incident-management"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/incident-management?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"incident-management"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/incident-management?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"incident-management"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for indexed spans",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/indexed-spans?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"indexed-spans"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending **before** this hour."
								}
							]
						},
						"description": "Get hourly usage for indexed spans.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/indexed-spans?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"indexed-spans"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"hour\": \"1993-05-11T16:39:22.199Z\",\n      \"indexed_events_count\": -74753741,\n      \"org_name\": \"ea quis\",\n      \"public_id\": \"ullamco pariatur\"\n    },\n    {\n      \"hour\": \"1998-02-26T21:16:25.923Z\",\n      \"indexed_events_count\": 64793219,\n      \"org_name\": \"enim aliqua\",\n      \"public_id\": \"l\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/indexed-spans?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"indexed-spans"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/indexed-spans?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"indexed-spans"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/indexed-spans?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"indexed-spans"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for ingested spans",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/ingested-spans?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"ingested-spans"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for ingested spans.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/ingested-spans?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"ingested-spans"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"hour\": \"1960-04-27T01:00:37.332Z\",\n      \"ingested_events_bytes\": 74377172,\n      \"org_name\": \"exercitation sed et\",\n      \"public_id\": \"proident est amet ut velit\"\n    },\n    {\n      \"hour\": \"1946-06-10T00:51:22.100Z\",\n      \"ingested_events_bytes\": 81607779,\n      \"org_name\": \"dolore do minim id\",\n      \"public_id\": \"voluptate laboris reprehenderit dolor veniam\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/ingested-spans?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"ingested-spans"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/ingested-spans?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"ingested-spans"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/ingested-spans?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"ingested-spans"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for IoT",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/iot?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"iot"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for IoT.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/iot?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"iot"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"hour\": \"2006-02-05T03:50:58.647Z\",\n      \"iot_device_count\": 21646229,\n      \"org_name\": \"fugiat culpa\",\n      \"public_id\": \"do Excepteur consectetur Duis\"\n    },\n    {\n      \"hour\": \"2014-04-12T04:23:42.966Z\",\n      \"iot_device_count\": 74714925,\n      \"org_name\": \"do id\",\n      \"public_id\": \"minim ex\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/iot?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"iot"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/iot?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"iot"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/iot?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"iot"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/logs?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"logs"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							]
						},
						"description": "Get hourly usage for logs.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"billable_ingested_bytes\": 86730718,\n      \"hour\": \"2008-11-19T15:08:45.695Z\",\n      \"indexed_events_count\": 1067457,\n      \"ingested_events_bytes\": -12220910,\n      \"logs_forwarding_events_bytes\": -68405808,\n      \"logs_live_indexed_count\": 13318711,\n      \"logs_live_ingested_bytes\": -68107145,\n      \"logs_rehydrated_indexed_count\": -24102195,\n      \"logs_rehydrated_ingested_bytes\": 50476094,\n      \"org_name\": \"velit dolore\",\n      \"public_id\": \"eiusmod in pariatur consequat\"\n    },\n    {\n      \"billable_ingested_bytes\": 47259376,\n      \"hour\": \"1972-12-31T23:34:00.720Z\",\n      \"indexed_events_count\": -56892025,\n      \"ingested_events_bytes\": -74880768,\n      \"logs_forwarding_events_bytes\": -69280079,\n      \"logs_live_indexed_count\": 68415745,\n      \"logs_live_ingested_bytes\": 48832198,\n      \"logs_rehydrated_indexed_count\": 26981829,\n      \"logs_rehydrated_ingested_bytes\": 76657482,\n      \"org_name\": \"sit id\",\n      \"public_id\": \"enim \"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly logs usage by retention",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/logs-by-retention?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"logs-by-retention"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for indexed logs by retention period.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs-by-retention?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs-by-retention"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"indexed_events_count\": -19100091,\n      \"live_indexed_events_count\": 86823319,\n      \"org_name\": \"laboris consequat elit\",\n      \"public_id\": \"eiusmod sunt\",\n      \"rehydrated_indexed_events_count\": -3866440,\n      \"retention\": \"consequat irure proident sunt\"\n    },\n    {\n      \"indexed_events_count\": 16211658,\n      \"live_indexed_events_count\": 70559803,\n      \"org_name\": \"et non ex\",\n      \"public_id\": \"quis dolor officia aute nisi\",\n      \"rehydrated_indexed_events_count\": -6567363,\n      \"retention\": \"amet nisi laboris\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs-by-retention?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs-by-retention"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs-by-retention?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs-by-retention"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs-by-retention?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs-by-retention"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for logs by index",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/logs_by_index?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z&index_name=dolor cillum in&index_name=proident",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"logs_by_index"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								},
								{
									"key": "index_name",
									"value": "dolor cillum in",
									"description": "Comma-separated list of log index names."
								},
								{
									"key": "index_name",
									"value": "proident",
									"description": "Comma-separated list of log index names."
								}
							]
						},
						"description": "Get hourly usage for logs by index."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs_by_index?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z&index_name=proident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs_by_index"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										},
										{
											"key": "index_name",
											"value": "proident",
											"description": "Comma-separated list of log index names."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"event_count\": 1096633,\n      \"hour\": \"1994-03-03T08:01:45.382Z\",\n      \"index_id\": \"id dolor ut aliquip\",\n      \"index_name\": \"Excepteur qui\",\n      \"org_name\": \"commodo cillum\",\n      \"public_id\": \"nisi laboris quis sit\",\n      \"retention\": -69735290\n    },\n    {\n      \"event_count\": -87462345,\n      \"hour\": \"2006-02-26T02:53:48.424Z\",\n      \"index_id\": \"ut cillum esse eu\",\n      \"index_name\": \"irure et sunt magna\",\n      \"org_name\": \"quis eiusmod culpa\",\n      \"public_id\": \"et ea occaecat sit laboris\",\n      \"retention\": -29487879\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs_by_index?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z&index_name=proident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs_by_index"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										},
										{
											"key": "index_name",
											"value": "proident",
											"description": "Comma-separated list of log index names."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs_by_index?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z&index_name=proident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs_by_index"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										},
										{
											"key": "index_name",
											"value": "proident",
											"description": "Comma-separated list of log index names."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs_by_index?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z&index_name=proident",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs_by_index"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										},
										{
											"key": "index_name",
											"value": "proident",
											"description": "Comma-separated list of log index names."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get monthly usage attribution",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/monthly-attribution?start_month=1991-02-02T07:22:34.204Z&end_month=1991-02-02T07:22:34.204Z&fields=dbm_queries_usage&sort_direction=desc&sort_name=dbm_queries_usage&tag_breakdown_keys=tempor Ut sed velit&next_record_id=tempor Ut sed velit&include_descendants=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"monthly-attribution"
							],
							"query": [
								{
									"key": "start_month",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage beginning in this month.\nMaximum of 15 months ago."
								},
								{
									"key": "end_month",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage ending this month."
								},
								{
									"key": "fields",
									"value": "dbm_queries_usage",
									"description": "(Required) Comma-separated list of usage types to return, or `*` for all usage types."
								},
								{
									"key": "sort_direction",
									"value": "desc",
									"description": "The direction to sort by: `[desc, asc]`."
								},
								{
									"key": "sort_name",
									"value": "dbm_queries_usage",
									"description": "The field to sort by."
								},
								{
									"key": "tag_breakdown_keys",
									"value": "tempor Ut sed velit",
									"description": "Comma separated list of tag keys used to group usage. If no value is provided the usage will not be broken down by tags.\n\nTo see which tags are available, look for the value of `tag_config_source` in the API response."
								},
								{
									"key": "next_record_id",
									"value": "tempor Ut sed velit",
									"description": "List following results with a next_record_id provided in the previous query."
								},
								{
									"key": "include_descendants",
									"value": "true",
									"description": "Include child org usage in the response. Defaults to `true`."
								}
							]
						},
						"description": "Get monthly usage attribution. Multi-region data is available starting March 1, 2023.\n\nThis API endpoint is paginated. To make sure you receive all records, check if the value of `next_record_id` is\nset in the response. If it is, make another request and pass `next_record_id` as a parameter.\nPseudo code example:\n\n```\nresponse := GetMonthlyUsageAttribution(start_month)\ncursor := response.metadata.pagination.next_record_id\nWHILE cursor != null BEGIN\n  sleep(5 seconds)  # Avoid running into rate limit\n  response := GetMonthlyUsageAttribution(start_month, next_record_id=cursor)\n  cursor := response.metadata.pagination.next_record_id\nEND\n```"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/monthly-attribution?start_month=1991-02-02T07:22:34.204Z&end_month=1991-02-02T07:22:34.204Z&fields=dbm_queries_usage&sort_direction=desc&sort_name=dbm_queries_usage&tag_breakdown_keys=tempor Ut sed velit&next_record_id=tempor Ut sed velit&include_descendants=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"monthly-attribution"
									],
									"query": [
										{
											"key": "start_month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage beginning in this month.\nMaximum of 15 months ago."
										},
										{
											"key": "end_month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage ending this month."
										},
										{
											"key": "fields",
											"value": "dbm_queries_usage",
											"description": "(Required) Comma-separated list of usage types to return, or `*` for all usage types."
										},
										{
											"key": "sort_direction",
											"value": "desc",
											"description": "The direction to sort by: `[desc, asc]`."
										},
										{
											"key": "sort_name",
											"value": "dbm_queries_usage",
											"description": "The field to sort by."
										},
										{
											"key": "tag_breakdown_keys",
											"value": "tempor Ut sed velit",
											"description": "Comma separated list of tag keys used to group usage. If no value is provided the usage will not be broken down by tags.\n\nTo see which tags are available, look for the value of `tag_config_source` in the API response."
										},
										{
											"key": "next_record_id",
											"value": "tempor Ut sed velit",
											"description": "List following results with a next_record_id provided in the previous query."
										},
										{
											"key": "include_descendants",
											"value": "true",
											"description": "Include child org usage in the response. Defaults to `true`."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"metadata\": {\n    \"aggregates\": [\n      {\n        \"agg_type\": \"sum\",\n        \"field\": \"custom_timeseries_usage\",\n        \"value\": -75872274.11279911\n      },\n      {\n        \"agg_type\": \"sum\",\n        \"field\": \"custom_timeseries_usage\",\n        \"value\": 62426608.270860344\n      }\n    ],\n    \"pagination\": {\n      \"next_record_id\": \"in velit esse\"\n    }\n  },\n  \"usage\": [\n    {\n      \"month\": \"2002-08-13T15:07:13.466Z\",\n      \"org_name\": \"elit reprehenderit\",\n      \"public_id\": \"minim ipsum anim \",\n      \"region\": \"eu incididunt sint ut\",\n      \"tag_config_source\": \"irure laboris culpa\",\n      \"tags\": {\n        \"dolore62\": [\n          \"datadog-integrations-lab\",\n          \"datadog-integrations-lab\"\n        ]\n      },\n      \"updated_at\": \"2006-01-20T21:37:20.788Z\",\n      \"values\": {\n        \"api_percentage\": -42977723.76246902,\n        \"api_usage\": 95397982.7763887,\n        \"apm_fargate_percentage\": 98784807.55202839,\n        \"apm_fargate_usage\": -5570111.678832486,\n        \"apm_host_percentage\": -56965575.051769115,\n        \"apm_host_usage\": 6024527.554351345,\n        \"apm_usm_percentage\": -44347230.916792005,\n        \"apm_usm_usage\": -53614973.50940212,\n        \"appsec_fargate_percentage\": -63949646.084028535,\n        \"appsec_fargate_usage\": -13950059.836552203,\n        \"appsec_percentage\": 77503688.59718463,\n        \"appsec_usage\": -2749536.490563825,\n        \"browser_percentage\": -57610165.63884018,\n        \"browser_usage\": -61629554.27924777,\n        \"ci_visibility_itr_percentage\": 9801397.272425354,\n        \"ci_visibility_itr_usage\": 86901082.07052395,\n        \"container_excl_agent_percentage\": -94758211.3791813,\n        \"container_excl_agent_usage\": 47871386.536788315,\n        \"container_percentage\": 77684191.36010852,\n        \"container_usage\": 42244878.990811646,\n        \"cspm_containers_percentage\": -27358203.524139896,\n        \"cspm_containers_usage\": 7194834.822350323,\n        \"cspm_hosts_percentage\": -58400939.80376841,\n        \"cspm_hosts_usage\": -13088798.55443798,\n        \"custom_ingested_timeseries_percentage\": 25418473.141955733,\n        \"custom_ingested_timeseries_usage\": -6930274.896374792,\n        \"custom_timeseries_percentage\": 57087072.053094536,\n        \"custom_timeseries_usage\": -96533528.35676041,\n        \"cws_containers_percentage\": 38802199.2161935,\n        \"cws_containers_usage\": -48037945.78847249,\n        \"cws_hosts_percentage\": -38139753.73665444,\n        \"cws_hosts_usage\": 99175833.09167394,\n        \"dbm_hosts_percentage\": -89557128.20902187,\n        \"dbm_hosts_usage\": -2062788.2317033857,\n        \"dbm_queries_percentage\": -81088882.42935035,\n        \"dbm_queries_usage\": 1723401.8763353676,\n        \"estimated_indexed_logs_percentage\": 19494055.047132045,\n        \"estimated_indexed_logs_usage\": 10830691.252756879,\n        \"estimated_indexed_spans_percentage\": 62593562.02511239,\n        \"estimated_indexed_spans_usage\": -47185922.657971926,\n        \"estimated_ingested_logs_percentage\": 87624062.51598707,\n        \"estimated_ingested_logs_usage\": -35910323.49944707,\n        \"estimated_ingested_spans_percentage\": -26620688.87925279,\n        \"estimated_ingested_spans_usage\": -55965088.442498125,\n        \"estimated_rum_sessions_percentage\": -89351036.0053822,\n        \"estimated_rum_sessions_usage\": 69102190.52327245,\n        \"fargate_percentage\": 31062755.564841017,\n        \"fargate_usage\": 47033739.82451412,\n        \"functions_percentage\": 53367355.86064315,\n        \"functions_usage\": 11045136.755249456,\n        \"infra_host_percentage\": -54626318.30325018,\n        \"infra_host_usage\": 5481953.102816388,\n        \"invocations_percentage\": 27641232.88982962,\n        \"invocations_usage\": -23217061.12940158,\n        \"npm_host_percentage\": -70428889.89530578,\n        \"npm_host_usage\": 75035524.55544943,\n        \"obs_pipeline_bytes_percentage\": 95030078.61571154,\n        \"obs_pipeline_bytes_usage\": 16308063.424261168,\n        \"profiled_container_percentage\": -47294745.9171313,\n        \"profiled_container_usage\": 91333575.12025896,\n        \"profiled_fargate_percentage\": 1159081.2940575331,\n        \"profiled_fargate_usage\": 46737078.93751609,\n        \"profiled_host_percentage\": -16133546.561951116,\n        \"profiled_host_usage\": -55598728.99167555,\n        \"sds_scanned_bytes_percentage\": 41324136.36835453,\n        \"sds_scanned_bytes_usage\": 56766327.929751456,\n        \"snmp_percentage\": -88823427.70029327,\n        \"snmp_usage\": 32225665.615818232,\n        \"universal_service_monitoring_percentage\": -79287423.3883524,\n        \"universal_service_monitoring_usage\": -2355924.928932488,\n        \"vuln_management_hosts_percentage\": -16935520.54186198,\n        \"vuln_management_hosts_usage\": 74036018.8908129\n      }\n    },\n    {\n      \"month\": \"1959-07-18T20:29:56.664Z\",\n      \"org_name\": \"aliquip magna dolor\",\n      \"public_id\": \"et iru\",\n      \"region\": \"ut est esse ex\",\n      \"tag_config_source\": \"sint\",\n      \"tags\": {\n        \"elit276\": [\n          \"datadog-integrations-lab\",\n          \"datadog-integrations-lab\"\n        ],\n        \"minim63\": [\n          \"datadog-integrations-lab\",\n          \"datadog-integrations-lab\"\n        ],\n        \"pariatur_d4\": [\n          \"datadog-integrations-lab\",\n          \"datadog-integrations-lab\"\n        ]\n      },\n      \"updated_at\": \"1950-10-12T07:16:52.126Z\",\n      \"values\": {\n        \"api_percentage\": -67093975.89355124,\n        \"api_usage\": 22892492.134701967,\n        \"apm_fargate_percentage\": 86445539.6960246,\n        \"apm_fargate_usage\": 96626296.86785325,\n        \"apm_host_percentage\": -17829260.52661082,\n        \"apm_host_usage\": 99024863.04694226,\n        \"apm_usm_percentage\": 15052506.96019815,\n        \"apm_usm_usage\": -51446462.70068289,\n        \"appsec_fargate_percentage\": -59920029.75633368,\n        \"appsec_fargate_usage\": -12417338.286942497,\n        \"appsec_percentage\": 33591696.66073081,\n        \"appsec_usage\": 25137188.487309366,\n        \"browser_percentage\": 97940358.7215335,\n        \"browser_usage\": -52673885.905316986,\n        \"ci_visibility_itr_percentage\": -88219975.69687605,\n        \"ci_visibility_itr_usage\": -9447846.575050354,\n        \"container_excl_agent_percentage\": -46735760.53814248,\n        \"container_excl_agent_usage\": -73167643.29069096,\n        \"container_percentage\": 69642254.33344507,\n        \"container_usage\": 41091259.60962516,\n        \"cspm_containers_percentage\": 42210153.5692417,\n        \"cspm_containers_usage\": 75649568.34254551,\n        \"cspm_hosts_percentage\": 32418249.39784172,\n        \"cspm_hosts_usage\": 69540549.39095044,\n        \"custom_ingested_timeseries_percentage\": -68775982.9429293,\n        \"custom_ingested_timeseries_usage\": 76963891.89494428,\n        \"custom_timeseries_percentage\": 60837059.719377786,\n        \"custom_timeseries_usage\": -18989551.834226012,\n        \"cws_containers_percentage\": -72647861.32948461,\n        \"cws_containers_usage\": 99339681.5271622,\n        \"cws_hosts_percentage\": -83440078.50328308,\n        \"cws_hosts_usage\": 14084142.169001937,\n        \"dbm_hosts_percentage\": 82967791.28126338,\n        \"dbm_hosts_usage\": 25758868.864204437,\n        \"dbm_queries_percentage\": -66889696.73566167,\n        \"dbm_queries_usage\": 82584001.9588587,\n        \"estimated_indexed_logs_percentage\": 18445591.7106888,\n        \"estimated_indexed_logs_usage\": 95113838.43812409,\n        \"estimated_indexed_spans_percentage\": -60446633.38281309,\n        \"estimated_indexed_spans_usage\": -35817307.54312336,\n        \"estimated_ingested_logs_percentage\": -78223744.53046979,\n        \"estimated_ingested_logs_usage\": -69451886.32509902,\n        \"estimated_ingested_spans_percentage\": 40809724.25659558,\n        \"estimated_ingested_spans_usage\": -8599266.75406441,\n        \"estimated_rum_sessions_percentage\": -50403382.65600939,\n        \"estimated_rum_sessions_usage\": -56068159.05777034,\n        \"fargate_percentage\": -58215167.93972128,\n        \"fargate_usage\": 66587355.106164634,\n        \"functions_percentage\": -47256769.918816224,\n        \"functions_usage\": 1210604.9136780202,\n        \"infra_host_percentage\": -15651911.45215477,\n        \"infra_host_usage\": 83986438.03159028,\n        \"invocations_percentage\": -72916419.47570357,\n        \"invocations_usage\": -99391776.91322954,\n        \"npm_host_percentage\": -26689735.74485798,\n        \"npm_host_usage\": -58545960.56280492,\n        \"obs_pipeline_bytes_percentage\": -18838497.449270487,\n        \"obs_pipeline_bytes_usage\": -15181917.208459169,\n        \"profiled_container_percentage\": -69415049.22818953,\n        \"profiled_container_usage\": -22422349.354449615,\n        \"profiled_fargate_percentage\": -88757833.10218939,\n        \"profiled_fargate_usage\": -48134372.15719563,\n        \"profiled_host_percentage\": -82357525.04911637,\n        \"profiled_host_usage\": 50907558.67759526,\n        \"sds_scanned_bytes_percentage\": -72420339.71282078,\n        \"sds_scanned_bytes_usage\": 54343122.17874324,\n        \"snmp_percentage\": -38192297.57339508,\n        \"snmp_usage\": 26362518.073974475,\n        \"universal_service_monitoring_percentage\": -97356790.37923175,\n        \"universal_service_monitoring_usage\": -42030474.203919254,\n        \"vuln_management_hosts_percentage\": -74076816.34914787,\n        \"vuln_management_hosts_usage\": -25114557.39136301\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/monthly-attribution?start_month=1991-02-02T07:22:34.204Z&end_month=1991-02-02T07:22:34.204Z&fields=dbm_queries_usage&sort_direction=desc&sort_name=dbm_queries_usage&tag_breakdown_keys=tempor Ut sed velit&next_record_id=tempor Ut sed velit&include_descendants=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"monthly-attribution"
									],
									"query": [
										{
											"key": "start_month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage beginning in this month.\nMaximum of 15 months ago."
										},
										{
											"key": "end_month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage ending this month."
										},
										{
											"key": "fields",
											"value": "dbm_queries_usage",
											"description": "(Required) Comma-separated list of usage types to return, or `*` for all usage types."
										},
										{
											"key": "sort_direction",
											"value": "desc",
											"description": "The direction to sort by: `[desc, asc]`."
										},
										{
											"key": "sort_name",
											"value": "dbm_queries_usage",
											"description": "The field to sort by."
										},
										{
											"key": "tag_breakdown_keys",
											"value": "tempor Ut sed velit",
											"description": "Comma separated list of tag keys used to group usage. If no value is provided the usage will not be broken down by tags.\n\nTo see which tags are available, look for the value of `tag_config_source` in the API response."
										},
										{
											"key": "next_record_id",
											"value": "tempor Ut sed velit",
											"description": "List following results with a next_record_id provided in the previous query."
										},
										{
											"key": "include_descendants",
											"value": "true",
											"description": "Include child org usage in the response. Defaults to `true`."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/monthly-attribution?start_month=1991-02-02T07:22:34.204Z&end_month=1991-02-02T07:22:34.204Z&fields=dbm_queries_usage&sort_direction=desc&sort_name=dbm_queries_usage&tag_breakdown_keys=tempor Ut sed velit&next_record_id=tempor Ut sed velit&include_descendants=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"monthly-attribution"
									],
									"query": [
										{
											"key": "start_month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage beginning in this month.\nMaximum of 15 months ago."
										},
										{
											"key": "end_month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage ending this month."
										},
										{
											"key": "fields",
											"value": "dbm_queries_usage",
											"description": "(Required) Comma-separated list of usage types to return, or `*` for all usage types."
										},
										{
											"key": "sort_direction",
											"value": "desc",
											"description": "The direction to sort by: `[desc, asc]`."
										},
										{
											"key": "sort_name",
											"value": "dbm_queries_usage",
											"description": "The field to sort by."
										},
										{
											"key": "tag_breakdown_keys",
											"value": "tempor Ut sed velit",
											"description": "Comma separated list of tag keys used to group usage. If no value is provided the usage will not be broken down by tags.\n\nTo see which tags are available, look for the value of `tag_config_source` in the API response."
										},
										{
											"key": "next_record_id",
											"value": "tempor Ut sed velit",
											"description": "List following results with a next_record_id provided in the previous query."
										},
										{
											"key": "include_descendants",
											"value": "true",
											"description": "Include child org usage in the response. Defaults to `true`."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "get hourly usage for network flows",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/network_flows?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"network_flows"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for network flows.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/network_flows?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"network_flows"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"hour\": \"2011-07-25T16:30:12.834Z\",\n      \"indexed_events_count\": -99563674,\n      \"org_name\": \"amet\",\n      \"public_id\": \"anim eiusmod veniam\"\n    },\n    {\n      \"hour\": \"2000-05-25T10:52:34.448Z\",\n      \"indexed_events_count\": -59710672,\n      \"org_name\": \"sed\",\n      \"public_id\": \"eu Ut\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/network_flows?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"network_flows"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/network_flows?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"network_flows"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/network_flows?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"network_flows"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for network hosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/network_hosts?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"network_hosts"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							]
						},
						"description": "Get hourly usage for network hosts.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/network_hosts?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"network_hosts"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"host_count\": 51815124,\n      \"hour\": \"1955-01-14T04:24:56.027Z\",\n      \"org_name\": \"Lorem reprehenderit in\",\n      \"public_id\": \"enim\"\n    },\n    {\n      \"host_count\": -76482925,\n      \"hour\": \"2007-11-27T18:35:59.978Z\",\n      \"org_name\": \"nostrud eiusmod ullam\",\n      \"public_id\": \"consequat commodo elit deserunt\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/network_hosts?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"network_hosts"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/network_hosts?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"network_hosts"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/network_hosts?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"network_hosts"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for online archive",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/online-archive?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"online-archive"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for online archive.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/online-archive?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"online-archive"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"hour\": \"2020-12-16T18:46:56.551Z\",\n      \"online_archive_events_count\": 60271452,\n      \"org_name\": \"reprehenderit amet\",\n      \"public_id\": \"labore\"\n    },\n    {\n      \"hour\": \"2011-02-10T01:13:17.501Z\",\n      \"online_archive_events_count\": 41746706,\n      \"org_name\": \"deserunt qui eu aliquip\",\n      \"public_id\": \"aliquip minim\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/online-archive?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"online-archive"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/online-archive?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"online-archive"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/online-archive?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"online-archive"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for profiled hosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/profiling?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"profiling"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for profiled hosts.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/profiling?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"profiling"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"avg_container_agent_count\": 74035334,\n      \"host_count\": 98263546,\n      \"hour\": \"1959-03-17T11:28:47.557Z\",\n      \"org_name\": \"ut sint ad\",\n      \"public_id\": \"mollit dolor c\"\n    },\n    {\n      \"avg_container_agent_count\": -69849892,\n      \"host_count\": 38978748,\n      \"hour\": \"1994-04-16T21:48:08.876Z\",\n      \"org_name\": \"pariatur cu\",\n      \"public_id\": \"veniam tempor dolore\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/profiling?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"profiling"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/profiling?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"profiling"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/profiling?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"profiling"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for RUM units",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/rum?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"rum"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							]
						},
						"description": "Get hourly usage for [RUM](https://docs.datadoghq.com/real_user_monitoring/) Units.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/rum?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"rum"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"browser_rum_units\": -52831933,\n      \"mobile_rum_units\": 5662282,\n      \"org_name\": \"magna et\",\n      \"public_id\": \"consequat velit\",\n      \"rum_units\": 67177360\n    },\n    {\n      \"browser_rum_units\": 32767263,\n      \"mobile_rum_units\": -54740966,\n      \"org_name\": \"dolore dolor sint\",\n      \"public_id\": \"culp\",\n      \"rum_units\": 82828657\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/rum?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"rum"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/rum?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"rum"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/rum?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"rum"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for RUM sessions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/rum_sessions?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z&type=tempor Ut sed velit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"rum_sessions"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								},
								{
									"key": "type",
									"value": "tempor Ut sed velit",
									"description": "RUM type: `[browser, mobile]`. Defaults to `browser`."
								}
							]
						},
						"description": "Get hourly usage for [RUM](https://docs.datadoghq.com/real_user_monitoring/) Sessions.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/rum_sessions?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z&type=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"rum_sessions"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										},
										{
											"key": "type",
											"value": "tempor Ut sed velit",
											"description": "RUM type: `[browser, mobile]`. Defaults to `browser`."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"hour\": \"1978-09-20T13:37:51.128Z\",\n      \"org_name\": \"Excepteur culpa\",\n      \"public_id\": \"ullamco non nisi\",\n      \"replay_session_count\": -940159,\n      \"session_count\": -811216,\n      \"session_count_android\": -81500426,\n      \"session_count_flutter\": -93521029,\n      \"session_count_ios\": 79794310,\n      \"session_count_reactnative\": 39931659\n    },\n    {\n      \"hour\": \"1989-04-17T22:04:02.790Z\",\n      \"org_name\": \"do irure\",\n      \"public_id\": \"eiusmod sint\",\n      \"replay_session_count\": 65965574,\n      \"session_count\": -74693981,\n      \"session_count_android\": -64203464,\n      \"session_count_flutter\": -9710282,\n      \"session_count_ios\": 67525220,\n      \"session_count_reactnative\": 73944039\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/rum_sessions?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z&type=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"rum_sessions"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										},
										{
											"key": "type",
											"value": "tempor Ut sed velit",
											"description": "RUM type: `[browser, mobile]`. Defaults to `browser`."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/rum_sessions?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z&type=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"rum_sessions"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										},
										{
											"key": "type",
											"value": "tempor Ut sed velit",
											"description": "RUM type: `[browser, mobile]`. Defaults to `browser`."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/rum_sessions?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z&type=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"rum_sessions"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										},
										{
											"key": "type",
											"value": "tempor Ut sed velit",
											"description": "RUM type: `[browser, mobile]`. Defaults to `browser`."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for sensitive data scanner",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/sds?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"sds"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for sensitive data scanner.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/sds?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"sds"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"apm_scanned_bytes\": -76522392,\n      \"events_scanned_bytes\": 63869395,\n      \"hour\": \"1980-07-02T07:13:19.943Z\",\n      \"logs_scanned_bytes\": 63884791,\n      \"org_name\": \"adipisicing sunt ea consectetur\",\n      \"public_id\": \"velit sed laboris dolore\",\n      \"rum_scanned_bytes\": -45588793,\n      \"total_scanned_bytes\": -72952707\n    },\n    {\n      \"apm_scanned_bytes\": 65125022,\n      \"events_scanned_bytes\": 55684538,\n      \"hour\": \"1987-06-03T12:26:07.332Z\",\n      \"logs_scanned_bytes\": -75701054,\n      \"org_name\": \"exercitation incididunt adipisicing\",\n      \"public_id\": \"adipisicing sun\",\n      \"rum_scanned_bytes\": 48012670,\n      \"total_scanned_bytes\": -29371626\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/sds?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"sds"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/sds?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"sds"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/sds?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"sds"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for SNMP devices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/snmp?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"snmp"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for SNMP devices.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/snmp?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"snmp"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"hour\": \"2005-04-22T05:30:56.752Z\",\n      \"org_name\": \"pariatur Lorem ut\",\n      \"public_id\": \"ea exercitation pariatur enim ex\",\n      \"snmp_devices\": -9243751\n    },\n    {\n      \"hour\": \"1984-11-05T03:14:34.308Z\",\n      \"org_name\": \"sint in\",\n      \"public_id\": \"tempor \",\n      \"snmp_devices\": 26832830\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/snmp?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"snmp"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/snmp?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"snmp"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/snmp?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"snmp"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get usage across your account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/summary?start_month=1991-02-02T07:22:34.204Z&end_month=1991-02-02T07:22:34.204Z&include_org_details=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"summary"
							],
							"query": [
								{
									"key": "start_month",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage beginning in this month.\nMaximum of 15 months ago."
								},
								{
									"key": "end_month",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage ending this month."
								},
								{
									"key": "include_org_details",
									"value": "true",
									"description": "Include usage summaries for each sub-org."
								}
							]
						},
						"description": "Get all usage across your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/summary?start_month=1991-02-02T07:22:34.204Z&end_month=1991-02-02T07:22:34.204Z&include_org_details=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"summary"
									],
									"query": [
										{
											"key": "start_month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage beginning in this month.\nMaximum of 15 months ago."
										},
										{
											"key": "end_month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage ending this month."
										},
										{
											"key": "include_org_details",
											"value": "true",
											"description": "Include usage summaries for each sub-org."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"agent_host_top99p_sum\": 72849632,\n  \"apm_azure_app_service_host_top99p_sum\": -59198124,\n  \"apm_fargate_count_avg_sum\": -69954531,\n  \"apm_host_top99p_sum\": 93717704,\n  \"appsec_fargate_count_avg_sum\": -38899023,\n  \"audit_logs_lines_indexed_agg_sum\": -17943197,\n  \"audit_trail_enabled_hwm_sum\": 83660841,\n  \"avg_profiled_fargate_tasks_sum\": 16456535,\n  \"aws_host_top99p_sum\": 20802075,\n  \"aws_lambda_func_count\": 42673907,\n  \"aws_lambda_invocations_sum\": -80362,\n  \"azure_app_service_top99p_sum\": -91415273,\n  \"azure_host_top99p_sum\": 23261277,\n  \"billable_ingested_bytes_agg_sum\": 20555741,\n  \"browser_rum_lite_session_count_agg_sum\": -25856857,\n  \"browser_rum_replay_session_count_agg_sum\": -30914282,\n  \"browser_rum_units_agg_sum\": 48408865,\n  \"ci_pipeline_indexed_spans_agg_sum\": -39224609,\n  \"ci_test_indexed_spans_agg_sum\": 99479730,\n  \"ci_visibility_itr_committers_hwm_sum\": 19391728,\n  \"ci_visibility_pipeline_committers_hwm_sum\": -26274457,\n  \"ci_visibility_test_committers_hwm_sum\": -5042150,\n  \"cloud_cost_management_aws_host_count_avg_sum\": -89898703,\n  \"cloud_cost_management_azure_host_count_avg_sum\": -85163725,\n  \"cloud_cost_management_host_count_avg_sum\": -56201530,\n  \"container_avg_sum\": -80683324,\n  \"container_excl_agent_avg_sum\": -5895383,\n  \"container_hwm_sum\": 25662856,\n  \"cspm_aas_host_top99p_sum\": 3293761,\n  \"cspm_aws_host_top99p_sum\": -85302845,\n  \"cspm_azure_host_top99p_sum\": 78375919,\n  \"cspm_container_avg_sum\": -43058964,\n  \"cspm_container_hwm_sum\": -81069701,\n  \"cspm_gcp_host_top99p_sum\": -86916888,\n  \"cspm_host_top99p_sum\": -3002166,\n  \"custom_ts_sum\": -39500326,\n  \"cws_containers_avg_sum\": 53504605,\n  \"cws_host_top99p_sum\": -34336238,\n  \"dbm_host_top99p_sum\": -21119584,\n  \"dbm_queries_avg_sum\": -59254365,\n  \"end_date\": \"1948-09-02T01:20:25.955Z\",\n  \"fargate_tasks_count_avg_sum\": -6282939,\n  \"fargate_tasks_count_hwm_sum\": 25693371,\n  \"forwarding_events_bytes_agg_sum\": 20935431,\n  \"gcp_host_top99p_sum\": -25922808,\n  \"heroku_host_top99p_sum\": -3373139,\n  \"incident_management_monthly_active_users_hwm_sum\": -46585283,\n  \"indexed_events_count_agg_sum\": 57300636,\n  \"infra_host_top99p_sum\": 83153473,\n  \"ingested_events_bytes_agg_sum\": -20343632,\n  \"iot_device_agg_sum\": -76168634,\n  \"iot_device_top99p_sum\": 2650864,\n  \"last_updated\": \"1968-07-14T08:54:32.362Z\",\n  \"live_indexed_events_agg_sum\": 13568477,\n  \"live_ingested_bytes_agg_sum\": -18047709,\n  \"logs_by_retention\": {\n    \"orgs\": {\n      \"usage\": [\n        {\n          \"usage\": [\n            {\n              \"logs_indexed_logs_usage_sum\": -36513604,\n              \"logs_live_indexed_logs_usage_sum\": -3080038,\n              \"logs_rehydrated_indexed_logs_usage_sum\": 47709377,\n              \"retention\": \"laborum Lorem esse aliquip reprehenderit\"\n            },\n            {\n              \"logs_indexed_logs_usage_sum\": 4975760,\n              \"logs_live_indexed_logs_usage_sum\": -63915404,\n              \"logs_rehydrated_indexed_logs_usage_sum\": -34176332,\n              \"retention\": \"reprehenderit proident Excepteur anim\"\n            }\n          ]\n        },\n        {\n          \"usage\": [\n            {\n              \"logs_indexed_logs_usage_sum\": 84461107,\n              \"logs_live_indexed_logs_usage_sum\": 15898268,\n              \"logs_rehydrated_indexed_logs_usage_sum\": -88981212,\n              \"retention\": \"velit laboris\"\n            },\n            {\n              \"logs_indexed_logs_usage_sum\": -13588061,\n              \"logs_live_indexed_logs_usage_sum\": 53375799,\n              \"logs_rehydrated_indexed_logs_usage_sum\": -87979112,\n              \"retention\": \"deserunt elit adipisicing\"\n            }\n          ]\n        }\n      ]\n    },\n    \"usage\": [\n      {\n        \"logs_indexed_logs_usage_agg_sum\": 74630953,\n        \"logs_live_indexed_logs_usage_agg_sum\": -54199229,\n        \"logs_rehydrated_indexed_logs_usage_agg_sum\": 14816997,\n        \"retention\": \"sunt ea id\"\n      },\n      {\n        \"logs_indexed_logs_usage_agg_sum\": 68226107,\n        \"logs_live_indexed_logs_usage_agg_sum\": -11621384,\n        \"logs_rehydrated_indexed_logs_usage_agg_sum\": 36211415,\n        \"retention\": \"non et mollit voluptate pariatur\"\n      }\n    ],\n    \"usage_by_month\": {\n      \"date\": \"1962-05-16T06:26:40.171Z\",\n      \"usage\": [\n        {\n          \"logs_indexed_logs_usage_sum\": 92707214,\n          \"logs_live_indexed_logs_usage_sum\": -63438244,\n          \"logs_rehydrated_indexed_logs_usage_sum\": -73621507,\n          \"retention\": \"sed sint\"\n        },\n        {\n          \"logs_indexed_logs_usage_sum\": 84831811,\n          \"logs_live_indexed_logs_usage_sum\": 90027896,\n          \"logs_rehydrated_indexed_logs_usage_sum\": -18727792,\n          \"retention\": \"officia sit\"\n        }\n      ]\n    }\n  },\n  \"mobile_rum_lite_session_count_agg_sum\": -6225373,\n  \"mobile_rum_session_count_agg_sum\": 4127989,\n  \"mobile_rum_session_count_android_agg_sum\": 53586340,\n  \"mobile_rum_session_count_flutter_agg_sum\": 55249914,\n  \"mobile_rum_session_count_ios_agg_sum\": -37317315,\n  \"mobile_rum_session_count_reactnative_agg_sum\": 74698925,\n  \"mobile_rum_session_count_roku_agg_sum\": 44854950,\n  \"mobile_rum_units_agg_sum\": -56824945,\n  \"netflow_indexed_events_count_agg_sum\": -12386948,\n  \"npm_host_top99p_sum\": 88257052,\n  \"observability_pipelines_bytes_processed_agg_sum\": 19000896,\n  \"online_archive_events_count_agg_sum\": 94992733,\n  \"opentelemetry_apm_host_top99p_sum\": 80393207,\n  \"opentelemetry_host_top99p_sum\": 29526996,\n  \"profiling_container_agent_count_avg\": -27929453,\n  \"profiling_host_count_top99p_sum\": -5789489,\n  \"rehydrated_indexed_events_agg_sum\": -46736328,\n  \"rehydrated_ingested_bytes_agg_sum\": 79275922,\n  \"rum_browser_and_mobile_session_count\": -11118015,\n  \"rum_session_count_agg_sum\": 60383915,\n  \"rum_total_session_count_agg_sum\": 59329512,\n  \"rum_units_agg_sum\": -39688188,\n  \"sds_apm_scanned_bytes_sum\": -61420964,\n  \"sds_events_scanned_bytes_sum\": 38947524,\n  \"sds_logs_scanned_bytes_sum\": 24079364,\n  \"sds_rum_scanned_bytes_sum\": 15138930,\n  \"sds_total_scanned_bytes_sum\": 5440001,\n  \"start_date\": \"1978-05-24T19:45:16.425Z\",\n  \"synthetics_browser_check_calls_count_agg_sum\": -99733451,\n  \"synthetics_check_calls_count_agg_sum\": -9729753,\n  \"synthetics_parallel_testing_max_slots_hwm_sum\": -14712711,\n  \"trace_search_indexed_events_count_agg_sum\": 10385889,\n  \"twol_ingested_events_bytes_agg_sum\": 18694310,\n  \"universal_service_monitoring_host_top99p_sum\": 85800816,\n  \"usage\": [\n    {\n      \"agent_host_top99p\": 417311,\n      \"apm_azure_app_service_host_top99p\": -5248510,\n      \"apm_fargate_count_avg\": -64850347,\n      \"apm_host_top99p\": -630632,\n      \"appsec_fargate_count_avg\": 68597361,\n      \"audit_logs_lines_indexed_sum\": -70480899,\n      \"audit_trail_enabled_hwm\": 14411963,\n      \"avg_profiled_fargate_tasks\": -93281748,\n      \"aws_host_top99p\": 16577341,\n      \"aws_lambda_func_count\": -44866185,\n      \"aws_lambda_invocations_sum\": 57419319,\n      \"azure_app_service_top99p\": -40609622,\n      \"billable_ingested_bytes_sum\": -8998579,\n      \"browser_rum_lite_session_count_sum\": -33712868,\n      \"browser_rum_replay_session_count_sum\": -81510158,\n      \"browser_rum_units_sum\": 12133437,\n      \"ci_pipeline_indexed_spans_sum\": -87672178,\n      \"ci_test_indexed_spans_sum\": -91572653,\n      \"ci_visibility_itr_committers_hwm\": 68508748,\n      \"ci_visibility_pipeline_committers_hwm\": -3410388,\n      \"ci_visibility_test_committers_hwm\": -93066094,\n      \"cloud_cost_management_aws_host_count_avg\": 60995678,\n      \"cloud_cost_management_azure_host_count_avg\": 7346812,\n      \"cloud_cost_management_host_count_avg\": 76707636,\n      \"container_avg\": 19079723,\n      \"container_excl_agent_avg\": 77846353,\n      \"container_hwm\": 77749229,\n      \"cspm_aas_host_top99p\": -35033296,\n      \"cspm_aws_host_top99p\": 85150120,\n      \"cspm_azure_host_top99p\": -29362636,\n      \"cspm_container_avg\": 59488635,\n      \"cspm_container_hwm\": 56230123,\n      \"cspm_gcp_host_top99p\": 95291803,\n      \"cspm_host_top99p\": -15320348,\n      \"custom_ts_avg\": -43099938,\n      \"cws_container_count_avg\": 62615347,\n      \"cws_host_top99p\": -54656105,\n      \"date\": \"1989-10-04T17:53:37.570Z\",\n      \"dbm_host_top99p\": 85546294,\n      \"dbm_queries_count_avg\": -71517801,\n      \"fargate_tasks_count_avg\": -7795674,\n      \"fargate_tasks_count_hwm\": -22213297,\n      \"forwarding_events_bytes_sum\": 25489537,\n      \"gcp_host_top99p\": -29498605,\n      \"heroku_host_top99p\": 765221,\n      \"incident_management_monthly_active_users_hwm\": -72765660,\n      \"indexed_events_count_sum\": 66506487,\n      \"infra_host_top99p\": 55437882,\n      \"ingested_events_bytes_sum\": -50449033,\n      \"iot_device_sum\": -2544973,\n      \"iot_device_top99p\": -52875330,\n      \"mobile_rum_lite_session_count_sum\": -64443058,\n      \"mobile_rum_session_count_android_sum\": 83279363,\n      \"mobile_rum_session_count_flutter_sum\": 80798836,\n      \"mobile_rum_session_count_ios_sum\": -91157304,\n      \"mobile_rum_session_count_reactnative_sum\": 11955317,\n      \"mobile_rum_session_count_roku_sum\": 36669798,\n      \"mobile_rum_session_count_sum\": -38840085,\n      \"mobile_rum_units_sum\": 26181563,\n      \"netflow_indexed_events_count_sum\": -27739471,\n      \"npm_host_top99p\": 72312560,\n      \"observability_pipelines_bytes_processed_sum\": 93040778,\n      \"online_archive_events_count_sum\": 11276320,\n      \"opentelemetry_apm_host_top99p\": -58370469,\n      \"opentelemetry_host_top99p\": 14528848,\n      \"orgs\": [\n        {\n          \"agent_host_top99p\": 21354016,\n          \"apm_azure_app_service_host_top99p\": -70098626,\n          \"apm_fargate_count_avg\": 40064003,\n          \"apm_host_top99p\": -30648930,\n          \"appsec_fargate_count_avg\": 89901155,\n          \"audit_logs_lines_indexed_sum\": 17406326,\n          \"audit_trail_enabled_hwm\": 61841783,\n          \"avg_profiled_fargate_tasks\": -32661599,\n          \"aws_host_top99p\": 30747932,\n          \"aws_lambda_func_count\": 36209624,\n          \"aws_lambda_invocations_sum\": 61866846,\n          \"azure_app_service_top99p\": 71734911,\n          \"billable_ingested_bytes_sum\": -41968449,\n          \"browser_rum_lite_session_count_sum\": -65981867,\n          \"browser_rum_replay_session_count_sum\": 97737359,\n          \"browser_rum_units_sum\": 58716995,\n          \"ci_pipeline_indexed_spans_sum\": -10479855,\n          \"ci_test_indexed_spans_sum\": 41987513,\n          \"ci_visibility_itr_committers_hwm\": 65343586,\n          \"ci_visibility_pipeline_committers_hwm\": 17426278,\n          \"ci_visibility_test_committers_hwm\": -81121383,\n          \"cloud_cost_management_aws_host_count_avg\": 70697785,\n          \"cloud_cost_management_azure_host_count_avg\": -1375298,\n          \"cloud_cost_management_host_count_avg\": 90572012,\n          \"container_avg\": 97298126,\n          \"container_excl_agent_avg\": -62323405,\n          \"container_hwm\": 47758331,\n          \"cspm_aas_host_top99p\": -65449559,\n          \"cspm_aws_host_top99p\": -7615761,\n          \"cspm_azure_host_top99p\": -23613716,\n          \"cspm_container_avg\": -96032283,\n          \"cspm_container_hwm\": -36097156,\n          \"cspm_gcp_host_top99p\": 19662400,\n          \"cspm_host_top99p\": -78557584,\n          \"custom_ts_avg\": -68378598,\n          \"cws_container_count_avg\": 72178530,\n          \"cws_host_top99p\": -64867947,\n          \"dbm_host_top99p_sum\": -59378004,\n          \"dbm_queries_avg_sum\": 55864769,\n          \"fargate_tasks_count_avg\": 57730368,\n          \"fargate_tasks_count_hwm\": -80923576,\n          \"forwarding_events_bytes_sum\": -56035599,\n          \"gcp_host_top99p\": 8521489,\n          \"heroku_host_top99p\": 39120755,\n          \"id\": \"nulla et\",\n          \"incident_management_monthly_active_users_hwm\": -68431371,\n          \"indexed_events_count_sum\": 14482424,\n          \"infra_host_top99p\": -26823218,\n          \"ingested_events_bytes_sum\": 33538916,\n          \"iot_device_agg_sum\": -85115582,\n          \"iot_device_top99p_sum\": -22632925,\n          \"mobile_rum_lite_session_count_sum\": 27452801,\n          \"mobile_rum_session_count_android_sum\": -74356643,\n          \"mobile_rum_session_count_flutter_sum\": 96374619,\n          \"mobile_rum_session_count_ios_sum\": 30893816,\n          \"mobile_rum_session_count_reactnative_sum\": -22477849,\n          \"mobile_rum_session_count_roku_sum\": -53792811,\n          \"mobile_rum_session_count_sum\": 17887569,\n          \"mobile_rum_units_sum\": 21415783,\n          \"name\": \"Excepteur sed elit\",\n          \"netflow_indexed_events_count_sum\": -40061892,\n          \"npm_host_top99p\": -8534781,\n          \"observability_pipelines_bytes_processed_sum\": 51250514,\n          \"online_archive_events_count_sum\": -70993458,\n          \"opentelemetry_apm_host_top99p\": -51473486,\n          \"opentelemetry_host_top99p\": -10180180,\n          \"profiling_host_top99p\": -68022169,\n          \"public_id\": \"commodo tempor\",\n          \"region\": \"adipisicing aliquip\",\n          \"rum_browser_and_mobile_session_count\": -71654129,\n          \"rum_session_count_sum\": -4368976,\n          \"rum_total_session_count_sum\": -74671233,\n          \"rum_units_sum\": -25218547,\n          \"sds_apm_scanned_bytes_sum\": -84599972,\n          \"sds_events_scanned_bytes_sum\": -60796074,\n          \"sds_logs_scanned_bytes_sum\": 28365921,\n          \"sds_rum_scanned_bytes_sum\": -10876677,\n          \"sds_total_scanned_bytes_sum\": 96719997,\n          \"synthetics_browser_check_calls_count_sum\": 31528621,\n          \"synthetics_check_calls_count_sum\": 38443562,\n          \"synthetics_parallel_testing_max_slots_hwm\": 13975578,\n          \"trace_search_indexed_events_count_sum\": 96689457,\n          \"twol_ingested_events_bytes_sum\": -59379102,\n          \"universal_service_monitoring_host_top99p\": 24333108,\n          \"vsphere_host_top99p\": -84929191,\n          \"vuln_management_host_count_top99p\": -23482223,\n          \"workflow_executions_usage_sum\": -33173614\n        },\n        {\n          \"agent_host_top99p\": 48334523,\n          \"apm_azure_app_service_host_top99p\": 87700511,\n          \"apm_fargate_count_avg\": 59017631,\n          \"apm_host_top99p\": 34365894,\n          \"appsec_fargate_count_avg\": 79043841,\n          \"audit_logs_lines_indexed_sum\": 89226058,\n          \"audit_trail_enabled_hwm\": -81481342,\n          \"avg_profiled_fargate_tasks\": -33667903,\n          \"aws_host_top99p\": 91899049,\n          \"aws_lambda_func_count\": -10273581,\n          \"aws_lambda_invocations_sum\": 43635053,\n          \"azure_app_service_top99p\": -78935994,\n          \"billable_ingested_bytes_sum\": 45433606,\n          \"browser_rum_lite_session_count_sum\": -63518629,\n          \"browser_rum_replay_session_count_sum\": -60576059,\n          \"browser_rum_units_sum\": -87390266,\n          \"ci_pipeline_indexed_spans_sum\": 46426062,\n          \"ci_test_indexed_spans_sum\": 84566413,\n          \"ci_visibility_itr_committers_hwm\": 97073910,\n          \"ci_visibility_pipeline_committers_hwm\": 94281896,\n          \"ci_visibility_test_committers_hwm\": -93588814,\n          \"cloud_cost_management_aws_host_count_avg\": -76690270,\n          \"cloud_cost_management_azure_host_count_avg\": 15277049,\n          \"cloud_cost_management_host_count_avg\": -90619373,\n          \"container_avg\": -50212405,\n          \"container_excl_agent_avg\": 49891413,\n          \"container_hwm\": 17443179,\n          \"cspm_aas_host_top99p\": 39842644,\n          \"cspm_aws_host_top99p\": -5059436,\n          \"cspm_azure_host_top99p\": 49299587,\n          \"cspm_container_avg\": -70564755,\n          \"cspm_container_hwm\": -10714684,\n          \"cspm_gcp_host_top99p\": 18862795,\n          \"cspm_host_top99p\": 24012155,\n          \"custom_ts_avg\": 37208491,\n          \"cws_container_count_avg\": -22295213,\n          \"cws_host_top99p\": -83548298,\n          \"dbm_host_top99p_sum\": -32653938,\n          \"dbm_queries_avg_sum\": 83663555,\n          \"fargate_tasks_count_avg\": -43799482,\n          \"fargate_tasks_count_hwm\": 85507786,\n          \"forwarding_events_bytes_sum\": 85410254,\n          \"gcp_host_top99p\": -95591855,\n          \"heroku_host_top99p\": -83530829,\n          \"id\": \"consectetur sit eiusmod qui\",\n          \"incident_management_monthly_active_users_hwm\": -38343868,\n          \"indexed_events_count_sum\": -63405130,\n          \"infra_host_top99p\": -54047228,\n          \"ingested_events_bytes_sum\": 56790019,\n          \"iot_device_agg_sum\": -94401365,\n          \"iot_device_top99p_sum\": 50891804,\n          \"mobile_rum_lite_session_count_sum\": -8690627,\n          \"mobile_rum_session_count_android_sum\": -79146521,\n          \"mobile_rum_session_count_flutter_sum\": -87135717,\n          \"mobile_rum_session_count_ios_sum\": 87695362,\n          \"mobile_rum_session_count_reactnative_sum\": -45720303,\n          \"mobile_rum_session_count_roku_sum\": -35609274,\n          \"mobile_rum_session_count_sum\": 54663668,\n          \"mobile_rum_units_sum\": -37336917,\n          \"name\": \"ullamco incididunt tempor deserunt\",\n          \"netflow_indexed_events_count_sum\": -71789594,\n          \"npm_host_top99p\": 37249496,\n          \"observability_pipelines_bytes_processed_sum\": 62652776,\n          \"online_archive_events_count_sum\": -91998569,\n          \"opentelemetry_apm_host_top99p\": 30251802,\n          \"opentelemetry_host_top99p\": -58736007,\n          \"profiling_host_top99p\": 62456940,\n          \"public_id\": \"sunt Lorem incididunt\",\n          \"region\": \"adipisicing ad in qui\",\n          \"rum_browser_and_mobile_session_count\": 35111610,\n          \"rum_session_count_sum\": 77271733,\n          \"rum_total_session_count_sum\": -9947224,\n          \"rum_units_sum\": -68227749,\n          \"sds_apm_scanned_bytes_sum\": -35858418,\n          \"sds_events_scanned_bytes_sum\": -54162698,\n          \"sds_logs_scanned_bytes_sum\": 15033028,\n          \"sds_rum_scanned_bytes_sum\": -14232914,\n          \"sds_total_scanned_bytes_sum\": 12039583,\n          \"synthetics_browser_check_calls_count_sum\": 84473106,\n          \"synthetics_check_calls_count_sum\": -4563818,\n          \"synthetics_parallel_testing_max_slots_hwm\": 16077222,\n          \"trace_search_indexed_events_count_sum\": 46403741,\n          \"twol_ingested_events_bytes_sum\": 77265037,\n          \"universal_service_monitoring_host_top99p\": -34480886,\n          \"vsphere_host_top99p\": 30087564,\n          \"vuln_management_host_count_top99p\": 57216210,\n          \"workflow_executions_usage_sum\": 7300689\n        }\n      ],\n      \"profiling_host_top99p\": -82437346,\n      \"rum_browser_and_mobile_session_count\": -67044873,\n      \"rum_session_count_sum\": 24543882,\n      \"rum_total_session_count_sum\": 72068095,\n      \"rum_units_sum\": 67813690,\n      \"sds_apm_scanned_bytes_sum\": 16707666,\n      \"sds_events_scanned_bytes_sum\": -5363852,\n      \"sds_logs_scanned_bytes_sum\": 9070359,\n      \"sds_rum_scanned_bytes_sum\": 70517869,\n      \"sds_total_scanned_bytes_sum\": 2416399,\n      \"synthetics_browser_check_calls_count_sum\": -15015564,\n      \"synthetics_check_calls_count_sum\": 31596789,\n      \"synthetics_parallel_testing_max_slots_hwm\": -70425371,\n      \"trace_search_indexed_events_count_sum\": -48290361,\n      \"twol_ingested_events_bytes_sum\": -54996457,\n      \"universal_service_monitoring_host_top99p\": 53388386,\n      \"vsphere_host_top99p\": -56627281,\n      \"vuln_management_host_count_top99p\": -48769199,\n      \"workflow_executions_usage_sum\": 98401293\n    },\n    {\n      \"agent_host_top99p\": -42944154,\n      \"apm_azure_app_service_host_top99p\": -66879038,\n      \"apm_fargate_count_avg\": 31544846,\n      \"apm_host_top99p\": -53433169,\n      \"appsec_fargate_count_avg\": 51090396,\n      \"audit_logs_lines_indexed_sum\": -67931410,\n      \"audit_trail_enabled_hwm\": -38647136,\n      \"avg_profiled_fargate_tasks\": -80269738,\n      \"aws_host_top99p\": 39776614,\n      \"aws_lambda_func_count\": -81763154,\n      \"aws_lambda_invocations_sum\": -13760533,\n      \"azure_app_service_top99p\": 37883678,\n      \"billable_ingested_bytes_sum\": 847508,\n      \"browser_rum_lite_session_count_sum\": 718409,\n      \"browser_rum_replay_session_count_sum\": -59637803,\n      \"browser_rum_units_sum\": -81715061,\n      \"ci_pipeline_indexed_spans_sum\": -21733,\n      \"ci_test_indexed_spans_sum\": 97757155,\n      \"ci_visibility_itr_committers_hwm\": -15235706,\n      \"ci_visibility_pipeline_committers_hwm\": 43561836,\n      \"ci_visibility_test_committers_hwm\": -81276773,\n      \"cloud_cost_management_aws_host_count_avg\": 17104732,\n      \"cloud_cost_management_azure_host_count_avg\": -15293032,\n      \"cloud_cost_management_host_count_avg\": 70357605,\n      \"container_avg\": -38064920,\n      \"container_excl_agent_avg\": -47969049,\n      \"container_hwm\": -82580764,\n      \"cspm_aas_host_top99p\": 95496297,\n      \"cspm_aws_host_top99p\": -77139011,\n      \"cspm_azure_host_top99p\": 78468529,\n      \"cspm_container_avg\": -20336253,\n      \"cspm_container_hwm\": -31151682,\n      \"cspm_gcp_host_top99p\": -92335829,\n      \"cspm_host_top99p\": 73621777,\n      \"custom_ts_avg\": -61327780,\n      \"cws_container_count_avg\": -37154931,\n      \"cws_host_top99p\": -38990247,\n      \"date\": \"1989-05-08T10:05:56.942Z\",\n      \"dbm_host_top99p\": -14417800,\n      \"dbm_queries_count_avg\": -77139742,\n      \"fargate_tasks_count_avg\": -11130329,\n      \"fargate_tasks_count_hwm\": -94402184,\n      \"forwarding_events_bytes_sum\": -64722749,\n      \"gcp_host_top99p\": 9899261,\n      \"heroku_host_top99p\": 85273160,\n      \"incident_management_monthly_active_users_hwm\": -11228517,\n      \"indexed_events_count_sum\": 81134399,\n      \"infra_host_top99p\": -61182311,\n      \"ingested_events_bytes_sum\": -93076239,\n      \"iot_device_sum\": 27519628,\n      \"iot_device_top99p\": -26958732,\n      \"mobile_rum_lite_session_count_sum\": -14349865,\n      \"mobile_rum_session_count_android_sum\": -97782872,\n      \"mobile_rum_session_count_flutter_sum\": 28042505,\n      \"mobile_rum_session_count_ios_sum\": 3766336,\n      \"mobile_rum_session_count_reactnative_sum\": -64293006,\n      \"mobile_rum_session_count_roku_sum\": -85643126,\n      \"mobile_rum_session_count_sum\": -92288809,\n      \"mobile_rum_units_sum\": 45504946,\n      \"netflow_indexed_events_count_sum\": 84347532,\n      \"npm_host_top99p\": -99187395,\n      \"observability_pipelines_bytes_processed_sum\": -44128865,\n      \"online_archive_events_count_sum\": -8108969,\n      \"opentelemetry_apm_host_top99p\": 78893199,\n      \"opentelemetry_host_top99p\": -28353641,\n      \"orgs\": [\n        {\n          \"agent_host_top99p\": -33383500,\n          \"apm_azure_app_service_host_top99p\": 55924006,\n          \"apm_fargate_count_avg\": 87372714,\n          \"apm_host_top99p\": -1590458,\n          \"appsec_fargate_count_avg\": -35120949,\n          \"audit_logs_lines_indexed_sum\": 56614064,\n          \"audit_trail_enabled_hwm\": -55843815,\n          \"avg_profiled_fargate_tasks\": -59105892,\n          \"aws_host_top99p\": 57634338,\n          \"aws_lambda_func_count\": 51904254,\n          \"aws_lambda_invocations_sum\": 52687712,\n          \"azure_app_service_top99p\": -85888778,\n          \"billable_ingested_bytes_sum\": -78315951,\n          \"browser_rum_lite_session_count_sum\": 98011985,\n          \"browser_rum_replay_session_count_sum\": 73165172,\n          \"browser_rum_units_sum\": 55754243,\n          \"ci_pipeline_indexed_spans_sum\": -71389665,\n          \"ci_test_indexed_spans_sum\": 64340447,\n          \"ci_visibility_itr_committers_hwm\": -90533655,\n          \"ci_visibility_pipeline_committers_hwm\": -88774709,\n          \"ci_visibility_test_committers_hwm\": -47316862,\n          \"cloud_cost_management_aws_host_count_avg\": 35204777,\n          \"cloud_cost_management_azure_host_count_avg\": 43447786,\n          \"cloud_cost_management_host_count_avg\": 25667092,\n          \"container_avg\": 19269741,\n          \"container_excl_agent_avg\": -8011684,\n          \"container_hwm\": 56598786,\n          \"cspm_aas_host_top99p\": 51204142,\n          \"cspm_aws_host_top99p\": 46300315,\n          \"cspm_azure_host_top99p\": -27263046,\n          \"cspm_container_avg\": -33833088,\n          \"cspm_container_hwm\": -28374107,\n          \"cspm_gcp_host_top99p\": 54251033,\n          \"cspm_host_top99p\": 29970109,\n          \"custom_ts_avg\": -91439292,\n          \"cws_container_count_avg\": 67618767,\n          \"cws_host_top99p\": -67391310,\n          \"dbm_host_top99p_sum\": 23033950,\n          \"dbm_queries_avg_sum\": -57962184,\n          \"fargate_tasks_count_avg\": -13272894,\n          \"fargate_tasks_count_hwm\": -49229,\n          \"forwarding_events_bytes_sum\": -88705421,\n          \"gcp_host_top99p\": 40327707,\n          \"heroku_host_top99p\": -32141327,\n          \"id\": \"irure dolore dolore do\",\n          \"incident_management_monthly_active_users_hwm\": -10461988,\n          \"indexed_events_count_sum\": 86760244,\n          \"infra_host_top99p\": -82065704,\n          \"ingested_events_bytes_sum\": 91179344,\n          \"iot_device_agg_sum\": 7784897,\n          \"iot_device_top99p_sum\": -25261108,\n          \"mobile_rum_lite_session_count_sum\": 6879935,\n          \"mobile_rum_session_count_android_sum\": 56722073,\n          \"mobile_rum_session_count_flutter_sum\": 90350315,\n          \"mobile_rum_session_count_ios_sum\": 64867554,\n          \"mobile_rum_session_count_reactnative_sum\": 12956903,\n          \"mobile_rum_session_count_roku_sum\": -95207555,\n          \"mobile_rum_session_count_sum\": 17795558,\n          \"mobile_rum_units_sum\": 48266809,\n          \"name\": \"elit adipisicing\",\n          \"netflow_indexed_events_count_sum\": 83432745,\n          \"npm_host_top99p\": 6206367,\n          \"observability_pipelines_bytes_processed_sum\": -29764775,\n          \"online_archive_events_count_sum\": -53714000,\n          \"opentelemetry_apm_host_top99p\": 92235666,\n          \"opentelemetry_host_top99p\": -30592819,\n          \"profiling_host_top99p\": -2658350,\n          \"public_id\": \"irure consequat et velit\",\n          \"region\": \"ut laboris\",\n          \"rum_browser_and_mobile_session_count\": -4203295,\n          \"rum_session_count_sum\": -78898305,\n          \"rum_total_session_count_sum\": -43203401,\n          \"rum_units_sum\": -4802633,\n          \"sds_apm_scanned_bytes_sum\": 1544861,\n          \"sds_events_scanned_bytes_sum\": -76839578,\n          \"sds_logs_scanned_bytes_sum\": -33841752,\n          \"sds_rum_scanned_bytes_sum\": -21249524,\n          \"sds_total_scanned_bytes_sum\": -31395263,\n          \"synthetics_browser_check_calls_count_sum\": -55724368,\n          \"synthetics_check_calls_count_sum\": -53745242,\n          \"synthetics_parallel_testing_max_slots_hwm\": 38225192,\n          \"trace_search_indexed_events_count_sum\": 74102686,\n          \"twol_ingested_events_bytes_sum\": 14273358,\n          \"universal_service_monitoring_host_top99p\": -64347052,\n          \"vsphere_host_top99p\": -19560637,\n          \"vuln_management_host_count_top99p\": 48664558,\n          \"workflow_executions_usage_sum\": 76539097\n        },\n        {\n          \"agent_host_top99p\": 57511768,\n          \"apm_azure_app_service_host_top99p\": -34208929,\n          \"apm_fargate_count_avg\": -83958473,\n          \"apm_host_top99p\": 94880321,\n          \"appsec_fargate_count_avg\": -60211615,\n          \"audit_logs_lines_indexed_sum\": 60741692,\n          \"audit_trail_enabled_hwm\": -69431088,\n          \"avg_profiled_fargate_tasks\": -5173907,\n          \"aws_host_top99p\": 23693387,\n          \"aws_lambda_func_count\": 8323462,\n          \"aws_lambda_invocations_sum\": 40217912,\n          \"azure_app_service_top99p\": -70064024,\n          \"billable_ingested_bytes_sum\": 80836754,\n          \"browser_rum_lite_session_count_sum\": 28474281,\n          \"browser_rum_replay_session_count_sum\": 56231859,\n          \"browser_rum_units_sum\": 62565887,\n          \"ci_pipeline_indexed_spans_sum\": -4026833,\n          \"ci_test_indexed_spans_sum\": 73273372,\n          \"ci_visibility_itr_committers_hwm\": -70878920,\n          \"ci_visibility_pipeline_committers_hwm\": -55168775,\n          \"ci_visibility_test_committers_hwm\": -14485654,\n          \"cloud_cost_management_aws_host_count_avg\": 39840415,\n          \"cloud_cost_management_azure_host_count_avg\": -75054808,\n          \"cloud_cost_management_host_count_avg\": 90167429,\n          \"container_avg\": -25202338,\n          \"container_excl_agent_avg\": -39243308,\n          \"container_hwm\": -168170,\n          \"cspm_aas_host_top99p\": -83577239,\n          \"cspm_aws_host_top99p\": 55327301,\n          \"cspm_azure_host_top99p\": -48791083,\n          \"cspm_container_avg\": -64419106,\n          \"cspm_container_hwm\": -25396456,\n          \"cspm_gcp_host_top99p\": 20677402,\n          \"cspm_host_top99p\": -24891550,\n          \"custom_ts_avg\": -22280284,\n          \"cws_container_count_avg\": -91549240,\n          \"cws_host_top99p\": -9173227,\n          \"dbm_host_top99p_sum\": 84676269,\n          \"dbm_queries_avg_sum\": 75423193,\n          \"fargate_tasks_count_avg\": -81038675,\n          \"fargate_tasks_count_hwm\": -63033298,\n          \"forwarding_events_bytes_sum\": -67597344,\n          \"gcp_host_top99p\": -67052397,\n          \"heroku_host_top99p\": 93171664,\n          \"id\": \"adipisicing aliquip par\",\n          \"incident_management_monthly_active_users_hwm\": 25404933,\n          \"indexed_events_count_sum\": 23288695,\n          \"infra_host_top99p\": 7561353,\n          \"ingested_events_bytes_sum\": 26428741,\n          \"iot_device_agg_sum\": 56819537,\n          \"iot_device_top99p_sum\": 98964268,\n          \"mobile_rum_lite_session_count_sum\": -32212413,\n          \"mobile_rum_session_count_android_sum\": 8277825,\n          \"mobile_rum_session_count_flutter_sum\": -9804752,\n          \"mobile_rum_session_count_ios_sum\": 86889365,\n          \"mobile_rum_session_count_reactnative_sum\": 36479438,\n          \"mobile_rum_session_count_roku_sum\": -14383479,\n          \"mobile_rum_session_count_sum\": -21161565,\n          \"mobile_rum_units_sum\": -40389366,\n          \"name\": \"commodo enim labore\",\n          \"netflow_indexed_events_count_sum\": -18183565,\n          \"npm_host_top99p\": 99817429,\n          \"observability_pipelines_bytes_processed_sum\": -66131263,\n          \"online_archive_events_count_sum\": 53217272,\n          \"opentelemetry_apm_host_top99p\": -22443180,\n          \"opentelemetry_host_top99p\": -56655101,\n          \"profiling_host_top99p\": 16075592,\n          \"public_id\": \"aliquip pariatur enim veniam labore\",\n          \"region\": \"Lorem quis non\",\n          \"rum_browser_and_mobile_session_count\": 76144327,\n          \"rum_session_count_sum\": -90050083,\n          \"rum_total_session_count_sum\": -92405993,\n          \"rum_units_sum\": 92897273,\n          \"sds_apm_scanned_bytes_sum\": 75608634,\n          \"sds_events_scanned_bytes_sum\": -72839021,\n          \"sds_logs_scanned_bytes_sum\": -7365421,\n          \"sds_rum_scanned_bytes_sum\": -23086736,\n          \"sds_total_scanned_bytes_sum\": -2112113,\n          \"synthetics_browser_check_calls_count_sum\": 78523427,\n          \"synthetics_check_calls_count_sum\": 76469543,\n          \"synthetics_parallel_testing_max_slots_hwm\": -57022975,\n          \"trace_search_indexed_events_count_sum\": 16858444,\n          \"twol_ingested_events_bytes_sum\": -18247214,\n          \"universal_service_monitoring_host_top99p\": -37601178,\n          \"vsphere_host_top99p\": 31528086,\n          \"vuln_management_host_count_top99p\": 46416275,\n          \"workflow_executions_usage_sum\": 76712456\n        }\n      ],\n      \"profiling_host_top99p\": -56124855,\n      \"rum_browser_and_mobile_session_count\": -72329163,\n      \"rum_session_count_sum\": -36084224,\n      \"rum_total_session_count_sum\": -67755647,\n      \"rum_units_sum\": 70392587,\n      \"sds_apm_scanned_bytes_sum\": 60832553,\n      \"sds_events_scanned_bytes_sum\": -89761984,\n      \"sds_logs_scanned_bytes_sum\": 14432702,\n      \"sds_rum_scanned_bytes_sum\": -81404943,\n      \"sds_total_scanned_bytes_sum\": -11346145,\n      \"synthetics_browser_check_calls_count_sum\": -89482117,\n      \"synthetics_check_calls_count_sum\": 57614139,\n      \"synthetics_parallel_testing_max_slots_hwm\": 71555088,\n      \"trace_search_indexed_events_count_sum\": -20228450,\n      \"twol_ingested_events_bytes_sum\": -84684624,\n      \"universal_service_monitoring_host_top99p\": 67067248,\n      \"vsphere_host_top99p\": 50433193,\n      \"vuln_management_host_count_top99p\": -9166434,\n      \"workflow_executions_usage_sum\": 36969176\n    }\n  ],\n  \"vsphere_host_top99p_sum\": -761679,\n  \"vuln_management_host_count_top99p_sum\": -33329395,\n  \"workflow_executions_usage_agg_sum\": 41878975\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/summary?start_month=1991-02-02T07:22:34.204Z&end_month=1991-02-02T07:22:34.204Z&include_org_details=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"summary"
									],
									"query": [
										{
											"key": "start_month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage beginning in this month.\nMaximum of 15 months ago."
										},
										{
											"key": "end_month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage ending this month."
										},
										{
											"key": "include_org_details",
											"value": "true",
											"description": "Include usage summaries for each sub-org."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/summary?start_month=1991-02-02T07:22:34.204Z&end_month=1991-02-02T07:22:34.204Z&include_org_details=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"summary"
									],
									"query": [
										{
											"key": "start_month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage beginning in this month.\nMaximum of 15 months ago."
										},
										{
											"key": "end_month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage ending this month."
										},
										{
											"key": "include_org_details",
											"value": "true",
											"description": "Include usage summaries for each sub-org."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/summary?start_month=1991-02-02T07:22:34.204Z&end_month=1991-02-02T07:22:34.204Z&include_org_details=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"summary"
									],
									"query": [
										{
											"key": "start_month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage beginning in this month.\nMaximum of 15 months ago."
										},
										{
											"key": "end_month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage ending this month."
										},
										{
											"key": "include_org_details",
											"value": "true",
											"description": "Include usage summaries for each sub-org."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for synthetics API checks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/synthetics_api?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"synthetics_api"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							]
						},
						"description": "Get hourly usage for [synthetics API checks](https://docs.datadoghq.com/synthetics/).\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics_api?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics_api"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"check_calls_count\": -60006115,\n      \"hour\": \"2012-03-25T09:41:27.836Z\",\n      \"org_name\": \"magna ut qui\",\n      \"public_id\": \"fugiat eu est Ut\"\n    },\n    {\n      \"check_calls_count\": 8732921,\n      \"hour\": \"1999-10-03T03:03:09.257Z\",\n      \"org_name\": \"in sunt\",\n      \"public_id\": \"enim Ut proident eiusmod\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics_api?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics_api"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics_api?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics_api"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics_api?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics_api"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for synthetics browser checks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/synthetics_browser?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"synthetics_browser"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							]
						},
						"description": "Get hourly usage for synthetics browser checks.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics_browser?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics_browser"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"browser_check_calls_count\": -45015587,\n      \"hour\": \"1986-01-07T13:26:38.228Z\",\n      \"org_name\": \"ut velit nulla pariatur\",\n      \"public_id\": \"aute magna in culpa\"\n    },\n    {\n      \"browser_check_calls_count\": -39754794,\n      \"hour\": \"2011-01-06T22:05:51.155Z\",\n      \"org_name\": \"mollit sint do velit\",\n      \"public_id\": \"mollit veniam consectetur\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics_browser?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics_browser"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics_browser?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics_browser"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics_browser?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics_browser"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for custom metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/timeseries?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"timeseries"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							]
						},
						"description": "Get hourly usage for [custom metrics](https://docs.datadoghq.com/developers/metrics/custom_metrics/).\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family). Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/) for the associated migration guide."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/timeseries?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"timeseries"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"usage\": [\n    {\n      \"hour\": \"2012-05-28T11:18:12.251Z\",\n      \"num_custom_input_timeseries\": -84066023,\n      \"num_custom_output_timeseries\": -6162560,\n      \"num_custom_timeseries\": -33739457,\n      \"org_name\": \"sunt est\",\n      \"public_id\": \"ex ut enim Excepteur\"\n    },\n    {\n      \"hour\": \"2021-07-06T04:52:44.496Z\",\n      \"num_custom_input_timeseries\": -79567502,\n      \"num_custom_output_timeseries\": 85240347,\n      \"num_custom_timeseries\": 82034850,\n      \"org_name\": \"laborum ut\",\n      \"public_id\": \"mollit esse consectetur laboris ullamco\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/timeseries?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"timeseries"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/timeseries?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"timeseries"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/timeseries?start_hr=1991-02-02T07:22:34.204Z&end_hr=1991-02-02T07:22:34.204Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"timeseries"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get all custom metrics by hourly average",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/top_avg_metrics?month=1991-02-02T07:22:34.204Z&day=1991-02-02T07:22:34.204Z&names=dolor cillum in&names=proident&limit=500&next_record_id=tempor Ut sed velit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"top_avg_metrics"
							],
							"query": [
								{
									"key": "month",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour. (Either month or day should be specified, but not both)"
								},
								{
									"key": "day",
									"value": "1991-02-02T07:22:34.204Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to day: [YYYY-MM-DD] for usage beginning at this hour. (Either month or day should be specified, but not both)"
								},
								{
									"key": "names",
									"value": "dolor cillum in",
									"description": "Comma-separated list of metric names."
								},
								{
									"key": "names",
									"value": "proident",
									"description": "Comma-separated list of metric names."
								},
								{
									"key": "limit",
									"value": "500",
									"description": "Maximum number of results to return (between 1 and 5000) - defaults to 500 results if limit not specified."
								},
								{
									"key": "next_record_id",
									"value": "tempor Ut sed velit",
									"description": "List following results with a next_record_id provided in the previous query."
								}
							]
						},
						"description": "Get all [custom metrics](https://docs.datadoghq.com/developers/metrics/custom_metrics/) by hourly average. Use the month parameter to get a month-to-date data resolution or use the day parameter to get a daily resolution. One of the two is required, and only one of the two is allowed."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/top_avg_metrics?month=1991-02-02T07:22:34.204Z&day=1991-02-02T07:22:34.204Z&names=proident&limit=500&next_record_id=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"top_avg_metrics"
									],
									"query": [
										{
											"key": "month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour. (Either month or day should be specified, but not both)"
										},
										{
											"key": "day",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to day: [YYYY-MM-DD] for usage beginning at this hour. (Either month or day should be specified, but not both)"
										},
										{
											"key": "names",
											"value": "proident",
											"description": "Comma-separated list of metric names."
										},
										{
											"key": "limit",
											"value": "500",
											"description": "Maximum number of results to return (between 1 and 5000) - defaults to 500 results if limit not specified."
										},
										{
											"key": "next_record_id",
											"value": "tempor Ut sed velit",
											"description": "List following results with a next_record_id provided in the previous query."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"metadata\": {\n    \"day\": \"1970-12-19T21:24:25.324Z\",\n    \"month\": \"1968-08-09T04:45:37.966Z\",\n    \"pagination\": {\n      \"limit\": 93806394,\n      \"next_record_id\": \"Lorem Excepteur culpa irure\",\n      \"total_number_of_records\": 92367782\n    }\n  },\n  \"usage\": [\n    {\n      \"avg_metric_hour\": 6012044,\n      \"max_metric_hour\": 51959196,\n      \"metric_category\": \"standard\",\n      \"metric_name\": \"nisi in\"\n    },\n    {\n      \"avg_metric_hour\": -65971160,\n      \"max_metric_hour\": 62447032,\n      \"metric_category\": \"custom\",\n      \"metric_name\": \"magna sed proident labore\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/top_avg_metrics?month=1991-02-02T07:22:34.204Z&day=1991-02-02T07:22:34.204Z&names=proident&limit=500&next_record_id=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"top_avg_metrics"
									],
									"query": [
										{
											"key": "month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour. (Either month or day should be specified, but not both)"
										},
										{
											"key": "day",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to day: [YYYY-MM-DD] for usage beginning at this hour. (Either month or day should be specified, but not both)"
										},
										{
											"key": "names",
											"value": "proident",
											"description": "Comma-separated list of metric names."
										},
										{
											"key": "limit",
											"value": "500",
											"description": "Maximum number of results to return (between 1 and 5000) - defaults to 500 results if limit not specified."
										},
										{
											"key": "next_record_id",
											"value": "tempor Ut sed velit",
											"description": "List following results with a next_record_id provided in the previous query."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/top_avg_metrics?month=1991-02-02T07:22:34.204Z&day=1991-02-02T07:22:34.204Z&names=proident&limit=500&next_record_id=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"top_avg_metrics"
									],
									"query": [
										{
											"key": "month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour. (Either month or day should be specified, but not both)"
										},
										{
											"key": "day",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to day: [YYYY-MM-DD] for usage beginning at this hour. (Either month or day should be specified, but not both)"
										},
										{
											"key": "names",
											"value": "proident",
											"description": "Comma-separated list of metric names."
										},
										{
											"key": "limit",
											"value": "500",
											"description": "Maximum number of results to return (between 1 and 5000) - defaults to 500 results if limit not specified."
										},
										{
											"key": "next_record_id",
											"value": "tempor Ut sed velit",
											"description": "List following results with a next_record_id provided in the previous query."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/top_avg_metrics?month=1991-02-02T07:22:34.204Z&day=1991-02-02T07:22:34.204Z&names=proident&limit=500&next_record_id=tempor Ut sed velit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"top_avg_metrics"
									],
									"query": [
										{
											"key": "month",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour. (Either month or day should be specified, but not both)"
										},
										{
											"key": "day",
											"value": "1991-02-02T07:22:34.204Z",
											"description": "Datetime in ISO-8601 format, UTC, precise to day: [YYYY-MM-DD] for usage beginning at this hour. (Either month or day should be specified, but not both)"
										},
										{
											"key": "names",
											"value": "proident",
											"description": "Comma-separated list of metric names."
										},
										{
											"key": "limit",
											"value": "500",
											"description": "Maximum number of results to return (between 1 and 5000) - defaults to 500 results if limit not specified."
										},
										{
											"key": "next_record_id",
											"value": "tempor Ut sed velit",
											"description": "List following results with a next_record_id provided in the previous query."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for application security",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/usage/application_security?start_hr=<dateTime>&end_hr=<dateTime>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"usage",
								"application_security"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "<dateTime>",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "<dateTime>",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for application security .\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/application_security?start_hr=<dateTime>&end_hr=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"application_security"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"org_name\": \"<string>\",\n        \"product_family\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"region\": \"<string>\",\n        \"timeseries\": [\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"value\": \"<long>\"\n          },\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"value\": \"<long>\"\n          }\n        ],\n        \"usage_type\": \"app_sec_host_count\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"usage_timeseries\"\n    },\n    {\n      \"attributes\": {\n        \"org_name\": \"<string>\",\n        \"product_family\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"region\": \"<string>\",\n        \"timeseries\": [\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"value\": \"<long>\"\n          },\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"value\": \"<long>\"\n          }\n        ],\n        \"usage_type\": \"lambda_traced_invocations_count\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"usage_timeseries\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/application_security?start_hr=<dateTime>&end_hr=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"application_security"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/application_security?start_hr=<dateTime>&end_hr=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"application_security"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/application_security?start_hr=<dateTime>&end_hr=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"application_security"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get cost across multi-org account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/usage/cost_by_org?start_month=<dateTime>&end_month=<dateTime>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"usage",
								"cost_by_org"
							],
							"query": [
								{
									"key": "start_month",
									"value": "<dateTime>",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month."
								},
								{
									"key": "end_month",
									"value": "<dateTime>",
									"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
								}
							]
						},
						"description": "Get cost across multi-org account.\nCost by org data for a given month becomes available no later than the 16th of the following month.\n**Note:** This endpoint has been deprecated. Please use the new endpoint\n[`/historical_cost`](https://docs.datadoghq.com/api/latest/usage-metering/#get-historical-cost-across-your-account)\ninstead."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/cost_by_org?start_month=<dateTime>&end_month=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"cost_by_org"
									],
									"query": [
										{
											"key": "start_month",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month."
										},
										{
											"key": "end_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"charges\": [\n          {\n            \"charge_type\": \"<string>\",\n            \"cost\": \"<double>\",\n            \"product_name\": \"<string>\"\n          },\n          {\n            \"charge_type\": \"<string>\",\n            \"cost\": \"<double>\",\n            \"product_name\": \"<string>\"\n          }\n        ],\n        \"date\": \"<dateTime>\",\n        \"org_name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"region\": \"<string>\",\n        \"total_cost\": \"<double>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"cost_by_org\"\n    },\n    {\n      \"attributes\": {\n        \"charges\": [\n          {\n            \"charge_type\": \"<string>\",\n            \"cost\": \"<double>\",\n            \"product_name\": \"<string>\"\n          },\n          {\n            \"charge_type\": \"<string>\",\n            \"cost\": \"<double>\",\n            \"product_name\": \"<string>\"\n          }\n        ],\n        \"date\": \"<dateTime>\",\n        \"org_name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"region\": \"<string>\",\n        \"total_cost\": \"<double>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"cost_by_org\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/cost_by_org?start_month=<dateTime>&end_month=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"cost_by_org"
									],
									"query": [
										{
											"key": "start_month",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month."
										},
										{
											"key": "end_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/cost_by_org?start_month=<dateTime>&end_month=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"cost_by_org"
									],
									"query": [
										{
											"key": "start_month",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month."
										},
										{
											"key": "end_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/cost_by_org?start_month=<dateTime>&end_month=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"cost_by_org"
									],
									"query": [
										{
											"key": "start_month",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month."
										},
										{
											"key": "end_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get estimated cost across your account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/usage/estimated_cost?view=<string>&start_month=<dateTime>&end_month=<dateTime>&start_date=<dateTime>&end_date=<dateTime>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"usage",
								"estimated_cost"
							],
							"query": [
								{
									"key": "view",
									"value": "<string>",
									"description": "String to specify whether cost is broken down at a parent-org level or at the sub-org level. Available views are `summary` and `sub-org`. Defaults to `summary`."
								},
								{
									"key": "start_month",
									"value": "<dateTime>",
									"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month. Either start_month or start_date should be specified, but not both. (start_month cannot go beyond two months in the past). Provide an `end_month` to view month-over-month cost."
								},
								{
									"key": "end_month",
									"value": "<dateTime>",
									"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
								},
								{
									"key": "start_date",
									"value": "<dateTime>",
									"description": "Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for cost beginning this day. Either start_month or start_date should be specified, but not both. (start_date cannot go beyond two months in the past). Provide an `end_date` to view day-over-day cumulative cost."
								},
								{
									"key": "end_date",
									"value": "<dateTime>",
									"description": "Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for cost ending this day."
								}
							]
						},
						"description": "Get estimated cost across multi-org and single root-org accounts.\nEstimated cost data is only available for the current month and previous month\nand is delayed by up to 72 hours from when it was incurred.\nTo access historical costs prior to this, use the `/historical_cost` endpoint."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/estimated_cost?view=<string>&start_month=<dateTime>&end_month=<dateTime>&start_date=<dateTime>&end_date=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"estimated_cost"
									],
									"query": [
										{
											"key": "view",
											"value": "<string>",
											"description": "String to specify whether cost is broken down at a parent-org level or at the sub-org level. Available views are `summary` and `sub-org`. Defaults to `summary`."
										},
										{
											"key": "start_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month. Either start_month or start_date should be specified, but not both. (start_month cannot go beyond two months in the past). Provide an `end_month` to view month-over-month cost."
										},
										{
											"key": "end_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
										},
										{
											"key": "start_date",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for cost beginning this day. Either start_month or start_date should be specified, but not both. (start_date cannot go beyond two months in the past). Provide an `end_date` to view day-over-day cumulative cost."
										},
										{
											"key": "end_date",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for cost ending this day."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"charges\": [\n          {\n            \"charge_type\": \"<string>\",\n            \"cost\": \"<double>\",\n            \"product_name\": \"<string>\"\n          },\n          {\n            \"charge_type\": \"<string>\",\n            \"cost\": \"<double>\",\n            \"product_name\": \"<string>\"\n          }\n        ],\n        \"date\": \"<dateTime>\",\n        \"org_name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"region\": \"<string>\",\n        \"total_cost\": \"<double>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"cost_by_org\"\n    },\n    {\n      \"attributes\": {\n        \"charges\": [\n          {\n            \"charge_type\": \"<string>\",\n            \"cost\": \"<double>\",\n            \"product_name\": \"<string>\"\n          },\n          {\n            \"charge_type\": \"<string>\",\n            \"cost\": \"<double>\",\n            \"product_name\": \"<string>\"\n          }\n        ],\n        \"date\": \"<dateTime>\",\n        \"org_name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"region\": \"<string>\",\n        \"total_cost\": \"<double>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"cost_by_org\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/estimated_cost?view=<string>&start_month=<dateTime>&end_month=<dateTime>&start_date=<dateTime>&end_date=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"estimated_cost"
									],
									"query": [
										{
											"key": "view",
											"value": "<string>",
											"description": "String to specify whether cost is broken down at a parent-org level or at the sub-org level. Available views are `summary` and `sub-org`. Defaults to `summary`."
										},
										{
											"key": "start_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month. Either start_month or start_date should be specified, but not both. (start_month cannot go beyond two months in the past). Provide an `end_month` to view month-over-month cost."
										},
										{
											"key": "end_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
										},
										{
											"key": "start_date",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for cost beginning this day. Either start_month or start_date should be specified, but not both. (start_date cannot go beyond two months in the past). Provide an `end_date` to view day-over-day cumulative cost."
										},
										{
											"key": "end_date",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for cost ending this day."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/estimated_cost?view=<string>&start_month=<dateTime>&end_month=<dateTime>&start_date=<dateTime>&end_date=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"estimated_cost"
									],
									"query": [
										{
											"key": "view",
											"value": "<string>",
											"description": "String to specify whether cost is broken down at a parent-org level or at the sub-org level. Available views are `summary` and `sub-org`. Defaults to `summary`."
										},
										{
											"key": "start_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month. Either start_month or start_date should be specified, but not both. (start_month cannot go beyond two months in the past). Provide an `end_month` to view month-over-month cost."
										},
										{
											"key": "end_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
										},
										{
											"key": "start_date",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for cost beginning this day. Either start_month or start_date should be specified, but not both. (start_date cannot go beyond two months in the past). Provide an `end_date` to view day-over-day cumulative cost."
										},
										{
											"key": "end_date",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for cost ending this day."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/estimated_cost?view=<string>&start_month=<dateTime>&end_month=<dateTime>&start_date=<dateTime>&end_date=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"estimated_cost"
									],
									"query": [
										{
											"key": "view",
											"value": "<string>",
											"description": "String to specify whether cost is broken down at a parent-org level or at the sub-org level. Available views are `summary` and `sub-org`. Defaults to `summary`."
										},
										{
											"key": "start_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month. Either start_month or start_date should be specified, but not both. (start_month cannot go beyond two months in the past). Provide an `end_month` to view month-over-month cost."
										},
										{
											"key": "end_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
										},
										{
											"key": "start_date",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for cost beginning this day. Either start_month or start_date should be specified, but not both. (start_date cannot go beyond two months in the past). Provide an `end_date` to view day-over-day cumulative cost."
										},
										{
											"key": "end_date",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for cost ending this day."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get historical cost across your account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/usage/historical_cost?view=<string>&start_month=<dateTime>&end_month=<dateTime>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"usage",
								"historical_cost"
							],
							"query": [
								{
									"key": "view",
									"value": "<string>",
									"description": "String to specify whether cost is broken down at a parent-org level or at the sub-org level. Available views are `summary` and `sub-org`.  Defaults to `summary`."
								},
								{
									"key": "start_month",
									"value": "<dateTime>",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month."
								},
								{
									"key": "end_month",
									"value": "<dateTime>",
									"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
								}
							]
						},
						"description": "Get historical cost across multi-org and single root-org accounts.\nCost data for a given month becomes available no later than the 16th of the following month."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/historical_cost?view=<string>&start_month=<dateTime>&end_month=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"historical_cost"
									],
									"query": [
										{
											"key": "view",
											"value": "<string>",
											"description": "String to specify whether cost is broken down at a parent-org level or at the sub-org level. Available views are `summary` and `sub-org`.  Defaults to `summary`."
										},
										{
											"key": "start_month",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month."
										},
										{
											"key": "end_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"charges\": [\n          {\n            \"charge_type\": \"<string>\",\n            \"cost\": \"<double>\",\n            \"product_name\": \"<string>\"\n          },\n          {\n            \"charge_type\": \"<string>\",\n            \"cost\": \"<double>\",\n            \"product_name\": \"<string>\"\n          }\n        ],\n        \"date\": \"<dateTime>\",\n        \"org_name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"region\": \"<string>\",\n        \"total_cost\": \"<double>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"cost_by_org\"\n    },\n    {\n      \"attributes\": {\n        \"charges\": [\n          {\n            \"charge_type\": \"<string>\",\n            \"cost\": \"<double>\",\n            \"product_name\": \"<string>\"\n          },\n          {\n            \"charge_type\": \"<string>\",\n            \"cost\": \"<double>\",\n            \"product_name\": \"<string>\"\n          }\n        ],\n        \"date\": \"<dateTime>\",\n        \"org_name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"region\": \"<string>\",\n        \"total_cost\": \"<double>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"cost_by_org\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/historical_cost?view=<string>&start_month=<dateTime>&end_month=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"historical_cost"
									],
									"query": [
										{
											"key": "view",
											"value": "<string>",
											"description": "String to specify whether cost is broken down at a parent-org level or at the sub-org level. Available views are `summary` and `sub-org`.  Defaults to `summary`."
										},
										{
											"key": "start_month",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month."
										},
										{
											"key": "end_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/historical_cost?view=<string>&start_month=<dateTime>&end_month=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"historical_cost"
									],
									"query": [
										{
											"key": "view",
											"value": "<string>",
											"description": "String to specify whether cost is broken down at a parent-org level or at the sub-org level. Available views are `summary` and `sub-org`.  Defaults to `summary`."
										},
										{
											"key": "start_month",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month."
										},
										{
											"key": "end_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/historical_cost?view=<string>&start_month=<dateTime>&end_month=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"historical_cost"
									],
									"query": [
										{
											"key": "view",
											"value": "<string>",
											"description": "String to specify whether cost is broken down at a parent-org level or at the sub-org level. Available views are `summary` and `sub-org`.  Defaults to `summary`."
										},
										{
											"key": "start_month",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month."
										},
										{
											"key": "end_month",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage by product family",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/usage/hourly_usage?filter[timestamp][start]=<dateTime>&filter[timestamp][end]=<dateTime>&filter[product_families]=<string>&filter[include_descendants]=false&filter[include_breakdown]=false&filter[versions]=<string>&page[limit]=500&page[next_record_id]=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"usage",
								"hourly_usage"
							],
							"query": [
								{
									"key": "filter[timestamp][start]",
									"value": "<dateTime>",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "filter[timestamp][end]",
									"value": "<dateTime>",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								},
								{
									"key": "filter[product_families]",
									"value": "<string>",
									"description": "(Required) Comma separated list of product families to retrieve. Available families are `all`, `analyzed_logs`,\n`application_security`, `audit_trail`, `serverless`, `ci_app`, `cloud_cost_management`,\n`cspm`, `custom_events`, `cws`, `dbm`, `fargate`,\n`infra_hosts`, `incident_management`, `indexed_logs`, `indexed_spans`, `ingested_spans`, `iot`,\n`lambda_traced_invocations`, `logs`, `network_flows`, `network_hosts`, `observability_pipelines`,\n`online_archive`, `profiling`, `rum`, `rum_browser_sessions`, `rum_mobile_sessions`, `sds`, `snmp`,\n`synthetics_api`, `synthetics_browser`, `synthetics_parallel_testing`, and `timeseries`.\nThe following product family has been **deprecated**: `audit_logs`."
								},
								{
									"key": "filter[include_descendants]",
									"value": "false",
									"description": "Include child org usage in the response. Defaults to false."
								},
								{
									"key": "filter[include_breakdown]",
									"value": "false",
									"description": "Include breakdown of usage by subcategories where applicable (for product family logs only). Defaults to false."
								},
								{
									"key": "filter[versions]",
									"value": "<string>",
									"description": "Comma separated list of product family versions to use in the format `product_family:version`. For example,\n`infra_hosts:1.0.0`. If this parameter is not used, the API will use the latest version of each requested\nproduct family. Currently all families have one version `1.0.0`."
								},
								{
									"key": "page[limit]",
									"value": "500",
									"description": "Maximum number of results to return (between 1 and 500) - defaults to 500 if limit not specified."
								},
								{
									"key": "page[next_record_id]",
									"value": "<string>",
									"description": "List following results with a next_record_id provided in the previous query."
								}
							]
						},
						"description": "Get hourly usage by product family."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/hourly_usage?filter[timestamp][start]=<dateTime>&filter[timestamp][end]=<dateTime>&filter[product_families]=<string>&filter[include_descendants]=false&filter[include_breakdown]=false&filter[versions]=<string>&page[limit]=500&page[next_record_id]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"hourly_usage"
									],
									"query": [
										{
											"key": "filter[timestamp][start]",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "filter[timestamp][end]",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										},
										{
											"key": "filter[product_families]",
											"value": "<string>",
											"description": "(Required) Comma separated list of product families to retrieve. Available families are `all`, `analyzed_logs`,\n`application_security`, `audit_trail`, `serverless`, `ci_app`, `cloud_cost_management`,\n`cspm`, `custom_events`, `cws`, `dbm`, `fargate`,\n`infra_hosts`, `incident_management`, `indexed_logs`, `indexed_spans`, `ingested_spans`, `iot`,\n`lambda_traced_invocations`, `logs`, `network_flows`, `network_hosts`, `observability_pipelines`,\n`online_archive`, `profiling`, `rum`, `rum_browser_sessions`, `rum_mobile_sessions`, `sds`, `snmp`,\n`synthetics_api`, `synthetics_browser`, `synthetics_parallel_testing`, and `timeseries`.\nThe following product family has been **deprecated**: `audit_logs`."
										},
										{
											"key": "filter[include_descendants]",
											"value": "false",
											"description": "Include child org usage in the response. Defaults to false."
										},
										{
											"key": "filter[include_breakdown]",
											"value": "false",
											"description": "Include breakdown of usage by subcategories where applicable (for product family logs only). Defaults to false."
										},
										{
											"key": "filter[versions]",
											"value": "<string>",
											"description": "Comma separated list of product family versions to use in the format `product_family:version`. For example,\n`infra_hosts:1.0.0`. If this parameter is not used, the API will use the latest version of each requested\nproduct family. Currently all families have one version `1.0.0`."
										},
										{
											"key": "page[limit]",
											"value": "500",
											"description": "Maximum number of results to return (between 1 and 500) - defaults to 500 if limit not specified."
										},
										{
											"key": "page[next_record_id]",
											"value": "<string>",
											"description": "List following results with a next_record_id provided in the previous query."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"measurements\": [\n          {\n            \"usage_type\": \"<string>\",\n            \"value\": \"<long>\"\n          },\n          {\n            \"usage_type\": \"<string>\",\n            \"value\": \"<long>\"\n          }\n        ],\n        \"org_name\": \"<string>\",\n        \"product_family\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"region\": \"<string>\",\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"usage_timeseries\"\n    },\n    {\n      \"attributes\": {\n        \"measurements\": [\n          {\n            \"usage_type\": \"<string>\",\n            \"value\": \"<long>\"\n          },\n          {\n            \"usage_type\": \"<string>\",\n            \"value\": \"<long>\"\n          }\n        ],\n        \"org_name\": \"<string>\",\n        \"product_family\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"region\": \"<string>\",\n        \"timestamp\": \"<dateTime>\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"usage_timeseries\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"next_record_id\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/hourly_usage?filter[timestamp][start]=<dateTime>&filter[timestamp][end]=<dateTime>&filter[product_families]=<string>&filter[include_descendants]=false&filter[include_breakdown]=false&filter[versions]=<string>&page[limit]=500&page[next_record_id]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"hourly_usage"
									],
									"query": [
										{
											"key": "filter[timestamp][start]",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "filter[timestamp][end]",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										},
										{
											"key": "filter[product_families]",
											"value": "<string>",
											"description": "(Required) Comma separated list of product families to retrieve. Available families are `all`, `analyzed_logs`,\n`application_security`, `audit_trail`, `serverless`, `ci_app`, `cloud_cost_management`,\n`cspm`, `custom_events`, `cws`, `dbm`, `fargate`,\n`infra_hosts`, `incident_management`, `indexed_logs`, `indexed_spans`, `ingested_spans`, `iot`,\n`lambda_traced_invocations`, `logs`, `network_flows`, `network_hosts`, `observability_pipelines`,\n`online_archive`, `profiling`, `rum`, `rum_browser_sessions`, `rum_mobile_sessions`, `sds`, `snmp`,\n`synthetics_api`, `synthetics_browser`, `synthetics_parallel_testing`, and `timeseries`.\nThe following product family has been **deprecated**: `audit_logs`."
										},
										{
											"key": "filter[include_descendants]",
											"value": "false",
											"description": "Include child org usage in the response. Defaults to false."
										},
										{
											"key": "filter[include_breakdown]",
											"value": "false",
											"description": "Include breakdown of usage by subcategories where applicable (for product family logs only). Defaults to false."
										},
										{
											"key": "filter[versions]",
											"value": "<string>",
											"description": "Comma separated list of product family versions to use in the format `product_family:version`. For example,\n`infra_hosts:1.0.0`. If this parameter is not used, the API will use the latest version of each requested\nproduct family. Currently all families have one version `1.0.0`."
										},
										{
											"key": "page[limit]",
											"value": "500",
											"description": "Maximum number of results to return (between 1 and 500) - defaults to 500 if limit not specified."
										},
										{
											"key": "page[next_record_id]",
											"value": "<string>",
											"description": "List following results with a next_record_id provided in the previous query."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/hourly_usage?filter[timestamp][start]=<dateTime>&filter[timestamp][end]=<dateTime>&filter[product_families]=<string>&filter[include_descendants]=false&filter[include_breakdown]=false&filter[versions]=<string>&page[limit]=500&page[next_record_id]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"hourly_usage"
									],
									"query": [
										{
											"key": "filter[timestamp][start]",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "filter[timestamp][end]",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										},
										{
											"key": "filter[product_families]",
											"value": "<string>",
											"description": "(Required) Comma separated list of product families to retrieve. Available families are `all`, `analyzed_logs`,\n`application_security`, `audit_trail`, `serverless`, `ci_app`, `cloud_cost_management`,\n`cspm`, `custom_events`, `cws`, `dbm`, `fargate`,\n`infra_hosts`, `incident_management`, `indexed_logs`, `indexed_spans`, `ingested_spans`, `iot`,\n`lambda_traced_invocations`, `logs`, `network_flows`, `network_hosts`, `observability_pipelines`,\n`online_archive`, `profiling`, `rum`, `rum_browser_sessions`, `rum_mobile_sessions`, `sds`, `snmp`,\n`synthetics_api`, `synthetics_browser`, `synthetics_parallel_testing`, and `timeseries`.\nThe following product family has been **deprecated**: `audit_logs`."
										},
										{
											"key": "filter[include_descendants]",
											"value": "false",
											"description": "Include child org usage in the response. Defaults to false."
										},
										{
											"key": "filter[include_breakdown]",
											"value": "false",
											"description": "Include breakdown of usage by subcategories where applicable (for product family logs only). Defaults to false."
										},
										{
											"key": "filter[versions]",
											"value": "<string>",
											"description": "Comma separated list of product family versions to use in the format `product_family:version`. For example,\n`infra_hosts:1.0.0`. If this parameter is not used, the API will use the latest version of each requested\nproduct family. Currently all families have one version `1.0.0`."
										},
										{
											"key": "page[limit]",
											"value": "500",
											"description": "Maximum number of results to return (between 1 and 500) - defaults to 500 if limit not specified."
										},
										{
											"key": "page[next_record_id]",
											"value": "<string>",
											"description": "List following results with a next_record_id provided in the previous query."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/hourly_usage?filter[timestamp][start]=<dateTime>&filter[timestamp][end]=<dateTime>&filter[product_families]=<string>&filter[include_descendants]=false&filter[include_breakdown]=false&filter[versions]=<string>&page[limit]=500&page[next_record_id]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"hourly_usage"
									],
									"query": [
										{
											"key": "filter[timestamp][start]",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
										},
										{
											"key": "filter[timestamp][end]",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
										},
										{
											"key": "filter[product_families]",
											"value": "<string>",
											"description": "(Required) Comma separated list of product families to retrieve. Available families are `all`, `analyzed_logs`,\n`application_security`, `audit_trail`, `serverless`, `ci_app`, `cloud_cost_management`,\n`cspm`, `custom_events`, `cws`, `dbm`, `fargate`,\n`infra_hosts`, `incident_management`, `indexed_logs`, `indexed_spans`, `ingested_spans`, `iot`,\n`lambda_traced_invocations`, `logs`, `network_flows`, `network_hosts`, `observability_pipelines`,\n`online_archive`, `profiling`, `rum`, `rum_browser_sessions`, `rum_mobile_sessions`, `sds`, `snmp`,\n`synthetics_api`, `synthetics_browser`, `synthetics_parallel_testing`, and `timeseries`.\nThe following product family has been **deprecated**: `audit_logs`."
										},
										{
											"key": "filter[include_descendants]",
											"value": "false",
											"description": "Include child org usage in the response. Defaults to false."
										},
										{
											"key": "filter[include_breakdown]",
											"value": "false",
											"description": "Include breakdown of usage by subcategories where applicable (for product family logs only). Defaults to false."
										},
										{
											"key": "filter[versions]",
											"value": "<string>",
											"description": "Comma separated list of product family versions to use in the format `product_family:version`. For example,\n`infra_hosts:1.0.0`. If this parameter is not used, the API will use the latest version of each requested\nproduct family. Currently all families have one version `1.0.0`."
										},
										{
											"key": "page[limit]",
											"value": "500",
											"description": "Maximum number of results to return (between 1 and 500) - defaults to 500 if limit not specified."
										},
										{
											"key": "page[next_record_id]",
											"value": "<string>",
											"description": "List following results with a next_record_id provided in the previous query."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for Lambda traced invocations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/usage/lambda_traced_invocations?start_hr=<dateTime>&end_hr=<dateTime>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"usage",
								"lambda_traced_invocations"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "<dateTime>",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "<dateTime>",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for lambda traced invocations.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/lambda_traced_invocations?start_hr=<dateTime>&end_hr=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"lambda_traced_invocations"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"org_name\": \"<string>\",\n        \"product_family\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"region\": \"<string>\",\n        \"timeseries\": [\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"value\": \"<long>\"\n          },\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"value\": \"<long>\"\n          }\n        ],\n        \"usage_type\": \"observability_pipelines_bytes_processed\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"usage_timeseries\"\n    },\n    {\n      \"attributes\": {\n        \"org_name\": \"<string>\",\n        \"product_family\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"region\": \"<string>\",\n        \"timeseries\": [\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"value\": \"<long>\"\n          },\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"value\": \"<long>\"\n          }\n        ],\n        \"usage_type\": \"lambda_traced_invocations_count\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"usage_timeseries\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/lambda_traced_invocations?start_hr=<dateTime>&end_hr=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"lambda_traced_invocations"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/lambda_traced_invocations?start_hr=<dateTime>&end_hr=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"lambda_traced_invocations"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/lambda_traced_invocations?start_hr=<dateTime>&end_hr=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"lambda_traced_invocations"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for observability pipelines",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;datetime-format=rfc3339"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/usage/observability_pipelines?start_hr=<dateTime>&end_hr=<dateTime>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"usage",
								"observability_pipelines"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "<dateTime>",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "<dateTime>",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							]
						},
						"description": "Get hourly usage for observability pipelines.\n**Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/observability_pipelines?start_hr=<dateTime>&end_hr=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"observability_pipelines"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"org_name\": \"<string>\",\n        \"product_family\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"region\": \"<string>\",\n        \"timeseries\": [\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"value\": \"<long>\"\n          },\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"value\": \"<long>\"\n          }\n        ],\n        \"usage_type\": \"observability_pipelines_bytes_processed\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"usage_timeseries\"\n    },\n    {\n      \"attributes\": {\n        \"org_name\": \"<string>\",\n        \"product_family\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"region\": \"<string>\",\n        \"timeseries\": [\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"value\": \"<long>\"\n          },\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"value\": \"<long>\"\n          }\n        ],\n        \"usage_type\": \"app_sec_host_count\"\n      },\n      \"id\": \"<string>\",\n      \"type\": \"usage_timeseries\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/observability_pipelines?start_hr=<dateTime>&end_hr=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"observability_pipelines"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/observability_pipelines?start_hr=<dateTime>&end_hr=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"observability_pipelines"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;datetime-format=rfc3339"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/observability_pipelines?start_hr=<dateTime>&end_hr=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"observability_pipelines"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "<dateTime>",
											"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
										},
										{
											"key": "end_hr",
											"value": "<dateTime>",
											"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "The usage metering API allows you to get hourly, daily, and\nmonthly usage across multiple facets of Datadog.\nThis API is available to all Pro and Enterprise customers.\nUsage is only accessible for [parent-level organizations](https://docs.datadoghq.com/account_management/multi_organization/).\n\n**Note**: Usage data is delayed by up to 72 hours from when it was incurred.\nIt is retained for 15 months.\n\nYou can retrieve up to 24 hours of hourly usage data for multiple organizations,\nand up to two months of hourly usage data for a single organization in one request."
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Send invitation emails",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"type\": \"user_invitations\",\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"user_invitations\",\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/user_invitations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"user_invitations"
							]
						},
						"description": "Sends emails to one or more users inviting them to join the organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"type\": \"user_invitations\",\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"user_invitations\",\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/user_invitations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user_invitations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"expires_at\": \"<dateTime>\",\n        \"invite_type\": \"<string>\",\n        \"uuid\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      },\n      \"type\": \"user_invitations\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"expires_at\": \"<dateTime>\",\n        \"invite_type\": \"<string>\",\n        \"uuid\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      },\n      \"type\": \"user_invitations\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"type\": \"user_invitations\",\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"user_invitations\",\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/user_invitations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user_invitations"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"type\": \"user_invitations\",\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"user_invitations\",\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/user_invitations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user_invitations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"type\": \"user_invitations\",\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"user_invitations\",\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/user_invitations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user_invitations"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a user invitation",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/user_invitations/:user_invitation_uuid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"user_invitations",
								":user_invitation_uuid"
							],
							"variable": [
								{
									"key": "user_invitation_uuid",
									"value": "<string>"
								}
							]
						},
						"description": "Returns a single user invitation by its UUID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user_invitations/:user_invitation_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user_invitations",
										":user_invitation_uuid"
									],
									"variable": [
										{
											"key": "user_invitation_uuid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"expires_at\": \"<dateTime>\",\n      \"invite_type\": \"<string>\",\n      \"uuid\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"user\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"users\"\n        }\n      }\n    },\n    \"type\": \"user_invitations\"\n  }\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user_invitations/:user_invitation_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user_invitations",
										":user_invitation_uuid"
									],
									"variable": [
										{
											"key": "user_invitation_uuid"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user_invitations/:user_invitation_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user_invitations",
										":user_invitation_uuid"
									],
									"variable": [
										{
											"key": "user_invitation_uuid"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user_invitations/:user_invitation_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user_invitations",
										":user_invitation_uuid"
									],
									"variable": [
										{
											"key": "user_invitation_uuid"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List all users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/users?page[size]=10&page[number]=0&sort=name&sort_dir=desc&filter=<string>&filter[status]=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page. The maximum allowed value is 100."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "User attribute to order results by. Sort order is ascending by default.\nSort order is descending if the field\nis prefixed by a negative sign, for example `sort=-name`. Options: `name`,\n`modified_at`, `user_count`."
								},
								{
									"key": "sort_dir",
									"value": "desc",
									"description": "Direction of sort. Options: `asc`, `desc`."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter all users by the given string. Defaults to no filtering."
								},
								{
									"key": "filter[status]",
									"value": "<string>",
									"description": "Filter on status attribute.\nComma separated list, with possible values `Active`, `Pending`, and `Disabled`.\nDefaults to no filtering."
								}
							]
						},
						"description": "Get the list of all users in the organization. This list includes\nall users even if they are deactivated or unverified."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users?page[size]=10&page[number]=0&sort=name&sort_dir=desc&filter=<string>&filter[status]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "User attribute to order results by. Sort order is ascending by default.\nSort order is descending if the field\nis prefixed by a negative sign, for example `sort=-name`. Options: `name`,\n`modified_at`, `user_count`."
										},
										{
											"key": "sort_dir",
											"value": "desc",
											"description": "Direction of sort. Options: `asc`, `desc`."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter all users by the given string. Defaults to no filtering."
										},
										{
											"key": "filter[status]",
											"value": "<string>",
											"description": "Filter on status attribute.\nComma separated list, with possible values `Active`, `Pending`, and `Disabled`.\nDefaults to no filtering."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    },\n    {\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"disabled\": \"<boolean>\",\n        \"email\": \"<string>\",\n        \"handle\": \"<string>\",\n        \"icon\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"service_account\": \"<boolean>\",\n        \"status\": \"<string>\",\n        \"title\": \"<string>\",\n        \"verified\": \"<boolean>\"\n      },\n      \"id\": \"<string>\",\n      \"relationships\": {\n        \"org\": {\n          \"data\": {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        },\n        \"other_orgs\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"orgs\"\n            }\n          ]\n        },\n        \"other_users\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"users\"\n            }\n          ]\n        },\n        \"roles\": {\n          \"data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"roles\"\n            }\n          ]\n        }\n      },\n      \"type\": \"users\"\n    }\n  ],\n  \"included\": [\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ],\n  \"meta\": {\n    \"page\": {\n      \"total_count\": \"<long>\",\n      \"total_filtered_count\": \"<long>\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users?page[size]=10&page[number]=0&sort=name&sort_dir=desc&filter=<string>&filter[status]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "User attribute to order results by. Sort order is ascending by default.\nSort order is descending if the field\nis prefixed by a negative sign, for example `sort=-name`. Options: `name`,\n`modified_at`, `user_count`."
										},
										{
											"key": "sort_dir",
											"value": "desc",
											"description": "Direction of sort. Options: `asc`, `desc`."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter all users by the given string. Defaults to no filtering."
										},
										{
											"key": "filter[status]",
											"value": "<string>",
											"description": "Filter on status attribute.\nComma separated list, with possible values `Active`, `Pending`, and `Disabled`.\nDefaults to no filtering."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users?page[size]=10&page[number]=0&sort=name&sort_dir=desc&filter=<string>&filter[status]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "User attribute to order results by. Sort order is ascending by default.\nSort order is descending if the field\nis prefixed by a negative sign, for example `sort=-name`. Options: `name`,\n`modified_at`, `user_count`."
										},
										{
											"key": "sort_dir",
											"value": "desc",
											"description": "Direction of sort. Options: `asc`, `desc`."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter all users by the given string. Defaults to no filtering."
										},
										{
											"key": "filter[status]",
											"value": "<string>",
											"description": "Filter on status attribute.\nComma separated list, with possible values `Active`, `Pending`, and `Disabled`.\nDefaults to no filtering."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users?page[size]=10&page[number]=0&sort=name&sort_dir=desc&filter=<string>&filter[status]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10",
											"description": "Size for a given page. The maximum allowed value is 100."
										},
										{
											"key": "page[number]",
											"value": "0",
											"description": "Specific page number to return."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "User attribute to order results by. Sort order is ascending by default.\nSort order is descending if the field\nis prefixed by a negative sign, for example `sort=-name`. Options: `name`,\n`modified_at`, `user_count`."
										},
										{
											"key": "sort_dir",
											"value": "desc",
											"description": "Direction of sort. Options: `asc`, `desc`."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter all users by the given string. Defaults to no filtering."
										},
										{
											"key": "filter[status]",
											"value": "<string>",
											"description": "Filter on status attribute.\nComma separated list, with possible values `Active`, `Pending`, and `Disabled`.\nDefaults to no filtering."
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"relationships\": {\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users"
							]
						},
						"description": "Create a user for your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"relationships\": {\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"disabled\": \"<boolean>\",\n      \"email\": \"<string>\",\n      \"handle\": \"<string>\",\n      \"icon\": \"<string>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"service_account\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\",\n      \"verified\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"org\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"orgs\"\n        }\n      },\n      \"other_orgs\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        ]\n      },\n      \"other_users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      },\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    },\n    \"type\": \"users\"\n  },\n  \"included\": [\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"relationships\": {\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"relationships\": {\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"relationships\": {\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Disable a user",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/users/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "<string>"
								}
							]
						},
						"description": "Disable a user. Can only be used with an application key belonging\nto an administrator user."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get user details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/users/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a user in the organization specified by the user’s `user_id`."
					},
					"response": [
						{
							"name": "OK for get user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"disabled\": \"<boolean>\",\n      \"email\": \"<string>\",\n      \"handle\": \"<string>\",\n      \"icon\": \"<string>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"service_account\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\",\n      \"verified\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"org\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"orgs\"\n        }\n      },\n      \"other_orgs\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        ]\n      },\n      \"other_users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      },\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    },\n    \"type\": \"users\"\n  },\n  \"included\": [\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"disabled\": \"<boolean>\",\n      \"email\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"id\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/users/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "<string>"
								}
							]
						},
						"description": "Edit a user. Can only be used with an application key belonging\nto an administrator user."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"disabled\": \"<boolean>\",\n      \"email\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"disabled\": \"<boolean>\",\n      \"email\": \"<string>\",\n      \"handle\": \"<string>\",\n      \"icon\": \"<string>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"service_account\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\",\n      \"verified\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"org\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"orgs\"\n        }\n      },\n      \"other_orgs\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        ]\n      },\n      \"other_users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      },\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    },\n    \"type\": \"users\"\n  },\n  \"included\": [\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"disabled\": \"<boolean>\",\n      \"email\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"disabled\": \"<boolean>\",\n      \"email\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"disabled\": \"<boolean>\",\n      \"email\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"disabled\": \"<boolean>\",\n      \"email\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"disabled\": \"<boolean>\",\n      \"email\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"users\",\n    \"id\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a user organization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/users/:user_id/orgs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":user_id",
								"orgs"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a user organization. Returns the user information and all organizations\njoined by this user."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id/orgs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id",
										"orgs"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attributes\": {\n      \"created_at\": \"<dateTime>\",\n      \"disabled\": \"<boolean>\",\n      \"email\": \"<string>\",\n      \"handle\": \"<string>\",\n      \"icon\": \"<string>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"service_account\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\",\n      \"verified\": \"<boolean>\"\n    },\n    \"id\": \"<string>\",\n    \"relationships\": {\n      \"org\": {\n        \"data\": {\n          \"id\": \"<string>\",\n          \"type\": \"orgs\"\n        }\n      },\n      \"other_orgs\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"orgs\"\n          }\n        ]\n      },\n      \"other_users\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"users\"\n          }\n        ]\n      },\n      \"roles\": {\n        \"data\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"roles\"\n          }\n        ]\n      }\n    },\n    \"type\": \"users\"\n  },\n  \"included\": [\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"orgs\",\n      \"attributes\": {\n        \"created_at\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"disabled\": \"<boolean>\",\n        \"modified_at\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"public_id\": \"<string>\",\n        \"sharing\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id/orgs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id",
										"orgs"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id/orgs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id",
										"orgs"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id/orgs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id",
										"orgs"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a user permissions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/users/:user_id/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":user_id",
								"permissions"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get a user permission set. Returns a list of the user’s permissions\ngranted by the associated user's roles."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id",
										"permissions"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"type\": \"permissions\",\n      \"attributes\": {\n        \"created\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"display_name\": \"<string>\",\n        \"display_type\": \"<string>\",\n        \"group_name\": \"<string>\",\n        \"name\": \"<string>\",\n        \"restricted\": \"<boolean>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"permissions\",\n      \"attributes\": {\n        \"created\": \"<dateTime>\",\n        \"description\": \"<string>\",\n        \"display_name\": \"<string>\",\n        \"display_type\": \"<string>\",\n        \"group_name\": \"<string>\",\n        \"name\": \"<string>\",\n        \"restricted\": \"<boolean>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id",
										"permissions"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id",
										"permissions"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id",
										"permissions"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Create, edit, and disable users."
		},
		{
			"name": "Webhooks Integration",
			"item": [
				{
					"name": "Create a custom variable",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"CUSTOM_VARIABLE_NAME\",\n  \"value\": \"CUSTOM_VARIABLE_VALUE\",\n  \"is_secret\": true\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"custom-variables"
							]
						},
						"description": "Creates an endpoint with the name `<CUSTOM_VARIABLE_NAME>`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"CUSTOM_VARIABLE_NAME\",\n  \"value\": \"CUSTOM_VARIABLE_VALUE\",\n  \"is_secret\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"CUSTOM_VARIABLE_NAME\",\n  \"is_secret\": true,\n  \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"CUSTOM_VARIABLE_NAME\",\n  \"value\": \"CUSTOM_VARIABLE_VALUE\",\n  \"is_secret\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"CUSTOM_VARIABLE_NAME\",\n  \"value\": \"CUSTOM_VARIABLE_VALUE\",\n  \"is_secret\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"CUSTOM_VARIABLE_NAME\",\n  \"value\": \"CUSTOM_VARIABLE_VALUE\",\n  \"is_secret\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a custom variable",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"custom-variables",
								":custom_variable_name"
							],
							"variable": [
								{
									"key": "custom_variable_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Deletes the endpoint with the name `<CUSTOM_VARIABLE_NAME>`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a custom variable",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"custom-variables",
								":custom_variable_name"
							],
							"variable": [
								{
									"key": "custom_variable_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Shows the content of the custom variable with the name `<CUSTOM_VARIABLE_NAME>`.\n\nIf the custom variable is secret, the value does not return in the\nresponse payload."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"CUSTOM_VARIABLE_NAME\",\n  \"is_secret\": true,\n  \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a custom variable",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"is_secret\": false,\n  \"name\": \"CUSTOM_VARIABLE_NAME\",\n  \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"custom-variables",
								":custom_variable_name"
							],
							"variable": [
								{
									"key": "custom_variable_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Updates the endpoint with the name `<CUSTOM_VARIABLE_NAME>`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"is_secret\": false,\n  \"name\": \"CUSTOM_VARIABLE_NAME\",\n  \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"CUSTOM_VARIABLE_NAME\",\n  \"is_secret\": true,\n  \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"is_secret\": false,\n  \"name\": \"CUSTOM_VARIABLE_NAME\",\n  \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"is_secret\": false,\n  \"name\": \"CUSTOM_VARIABLE_NAME\",\n  \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"is_secret\": false,\n  \"name\": \"CUSTOM_VARIABLE_NAME\",\n  \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"is_secret\": false,\n  \"name\": \"CUSTOM_VARIABLE_NAME\",\n  \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a webhooks integration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"WEBHOOK_NAME\",\n  \"url\": \"https://example.com/webhook\",\n  \"custom_headers\": \"id veniam consectetur ullamco\",\n  \"encode_as\": \"json\",\n  \"payload\": \"do offi\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"webhooks"
							]
						},
						"description": "Creates an endpoint with the name `<WEBHOOK_NAME>`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"WEBHOOK_NAME\",\n  \"url\": \"https://example.com/webhook\",\n  \"custom_headers\": \"id veniam consectetur ullamco\",\n  \"encode_as\": \"json\",\n  \"payload\": \"do offi\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"WEBHOOK_NAME\",\n  \"url\": \"https://example.com/webhook\",\n  \"custom_headers\": \"id veniam consectetur ullamco\",\n  \"encode_as\": \"json\",\n  \"payload\": \"do offi\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"WEBHOOK_NAME\",\n  \"url\": \"https://example.com/webhook\",\n  \"custom_headers\": \"id veniam consectetur ullamco\",\n  \"encode_as\": \"json\",\n  \"payload\": \"do offi\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"WEBHOOK_NAME\",\n  \"url\": \"https://example.com/webhook\",\n  \"custom_headers\": \"id veniam consectetur ullamco\",\n  \"encode_as\": \"json\",\n  \"payload\": \"do offi\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"WEBHOOK_NAME\",\n  \"url\": \"https://example.com/webhook\",\n  \"custom_headers\": \"id veniam consectetur ullamco\",\n  \"encode_as\": \"json\",\n  \"payload\": \"do offi\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a webhook",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"webhooks",
								":webhook_name"
							],
							"variable": [
								{
									"key": "webhook_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Deletes the endpoint with the name `<WEBHOOK NAME>`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a webhook integration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"webhooks",
								":webhook_name"
							],
							"variable": [
								{
									"key": "webhook_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Gets the content of the webhook with the name `<WEBHOOK_NAME>`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"WEBHOOK_NAME\",\n  \"url\": \"https://example.com/webhook\",\n  \"custom_headers\": \"id veniam consectetur ullamco\",\n  \"encode_as\": \"json\",\n  \"payload\": \"do offi\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update a webhook",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custom_headers\": \"ea nostrud in pariatur non\",\n  \"encode_as\": \"json\",\n  \"name\": \"WEBHOOK_NAME\",\n  \"payload\": \"non \",\n  \"url\": \"https://example.com/webhook\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"webhooks",
								":webhook_name"
							],
							"variable": [
								{
									"key": "webhook_name",
									"value": "tempor Ut sed velit"
								}
							]
						},
						"description": "Updates the endpoint with the name `<WEBHOOK_NAME>`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_headers\": \"ea nostrud in pariatur non\",\n  \"encode_as\": \"json\",\n  \"name\": \"WEBHOOK_NAME\",\n  \"payload\": \"non \",\n  \"url\": \"https://example.com/webhook\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"WEBHOOK_NAME\",\n  \"url\": \"https://example.com/webhook\",\n  \"custom_headers\": \"id veniam consectetur ullamco\",\n  \"encode_as\": \"json\",\n  \"payload\": \"do offi\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_headers\": \"ea nostrud in pariatur non\",\n  \"encode_as\": \"json\",\n  \"name\": \"WEBHOOK_NAME\",\n  \"payload\": \"non \",\n  \"url\": \"https://example.com/webhook\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_headers\": \"ea nostrud in pariatur non\",\n  \"encode_as\": \"json\",\n  \"name\": \"WEBHOOK_NAME\",\n  \"payload\": \"non \",\n  \"url\": \"https://example.com/webhook\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_headers\": \"ea nostrud in pariatur non\",\n  \"encode_as\": \"json\",\n  \"name\": \"WEBHOOK_NAME\",\n  \"payload\": \"non \",\n  \"url\": \"https://example.com/webhook\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_headers\": \"ea nostrud in pariatur non\",\n  \"encode_as\": \"json\",\n  \"name\": \"WEBHOOK_NAME\",\n  \"payload\": \"non \",\n  \"url\": \"https://example.com/webhook\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    \"Bad Request\",\n    \"Bad Request\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Configure your Datadog-Webhooks integration directly through the Datadog API.\nFor more information about the Datadog-Webhooks integration,\nsee the [integration page](https://docs.datadoghq.com/integrations/webhooks)."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.add( { key: 'DD-API-KEY', value: pm.environment.get('api_key') } );",
					"pm.request.headers.add( { key: 'DD-APPLICATION-KEY', value: pm.environment.get('application_key') } );"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "site",
			"value": "datadoghq.com"
		},
		{
			"key": "subdomain",
			"value": "api"
		},
		{
			"key": "baseUrl",
			"value": "https://{{subdomain}}.{{site}}"
		},
		{
			"key": "site",
			"value": "datadoghq.eu",
			"type": "string",
			"disabled": true
		},
		{
			"key": "site",
			"value": "us3.datadoghq.com",
			"type": "string",
			"disabled": true
		},
		{
			"key": "site",
			"value": "us5.datadoghq.com",
			"type": "string",
			"disabled": true
		},
		{
			"key": "site",
			"value": "ap1.datadoghq.com",
			"type": "string",
			"disabled": true
		},
		{
			"key": "site",
			"value": "app.ddog-gov.com",
			"type": "string",
			"disabled": true
		}
	]
}